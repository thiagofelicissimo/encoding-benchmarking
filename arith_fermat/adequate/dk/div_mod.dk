#REQUIRE bool.
#REQUIRE connectives.
#REQUIRE leibniz.
#REQUIRE logic.
#REQUIRE nat.
#REQUIRE sttfa.
mod_aux : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))))).
mod_aux_body : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))))).
axiom_mod_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})))).
def eq_mod_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})))).
[] eq_mod_aux --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) axiom_mod_aux p sttfa.{|■|}) sttfa.{|■|}))).
def sym_eq_mod_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|})))).
[] sym_eq_mod_aux --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) eq_mod_aux p sttfa.{|■|}) sttfa.{|■|}))).
axiom_mod_aux_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|})).
def eq_mod_aux_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|})).
[] eq_mod_aux_body_O --> (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) axiom_mod_aux_body_O sttfa.{|■|}).
def sym_eq_mod_aux_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|})).
[] sym_eq_mod_aux_body_O --> (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) eq_mod_aux_body_O sttfa.{|■|}).
axiom_mod_aux_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})))).
def eq_mod_aux_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})))).
[] eq_mod_aux_body_S --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) axiom_mod_aux_body_S p sttfa.{|■|}) sttfa.{|■|}))).
def sym_eq_mod_aux_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))).
[] sym_eq_mod_aux_body_S --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) eq_mod_aux_body_S p sttfa.{|■|}) sttfa.{|■|}))).
def mod : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))).
[] mod --> (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))).
div_aux : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))))).
div_aux_body : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))))).
axiom_div_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})))).
def eq_div_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})))).
[] eq_div_aux --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) axiom_div_aux p sttfa.{|■|}) sttfa.{|■|}))).
def sym_eq_div_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|})))).
[] sym_eq_div_aux --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|})) eq_div_aux p sttfa.{|■|}) sttfa.{|■|}))).
axiom_div_aux_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|})).
def eq_div_aux_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|})).
[] eq_div_aux_body_O --> (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) axiom_div_aux_body_O sttfa.{|■|}).
def sym_eq_div_aux_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|})).
[] sym_eq_div_aux_body_O --> (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) eq_div_aux_body_O sttfa.{|■|}).
axiom_div_aux_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})))).
def eq_div_aux_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})))).
[] eq_div_aux_body_S --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) axiom_div_aux_body_S p sttfa.{|■|}) sttfa.{|■|}))).
def sym_eq_div_aux_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))).
[] sym_eq_div_aux_body_S --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) p) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) eq_div_aux_body_S p sttfa.{|■|}) sttfa.{|■|}))).
def div : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))).
[] div --> (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))).
def le_mod_aux_m_m : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))).
[] le_mod_aux_m_m --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))) (p : (sttfa.El nat.nat) => (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) x0 sttfa.{|■|})))))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (Q : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|})))))) nat.nat_ind (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) x0 sttfa.{|■|}))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}))) m) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|})) sym_eq_mod_aux nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}))) sym_eq_mod_aux_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (lenO : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|})) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) n sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|})))))) nat.le_n_O_elim n sttfa.{|■|}) lenO sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) n sttfa.{|■|})) nat.le_O_n m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (q : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) q) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|})) sym_eq_mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) q sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) x0 sttfa.{|■|}))))))) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) sym_eq_mod_aux_body_S q sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) x0 sttfa.{|■|})))))) (Hind : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) x0 sttfa.{|■|}))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (len : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))))))) nat.leb_elim n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|})) => auto)) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (notlenm : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) Hind (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus p sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus p sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}))))))) nat.le_plus_to_minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) z sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) z sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) z sttfa.{|■|})))))))) nat.transitive_le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) len sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m0 sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m0 sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))) nat.le_plus_n_r m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|})) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.plus_n_Sm q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.plus_n_Sm m sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}))))))))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) p sttfa.{|■|}))).
def lt_mod_m_m : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))).
[] lt_mod_m_m --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop return_ nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop return_ z sttfa.{|■|})))))) nat.match_nat_prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (abs : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) nat.O sttfa.{|■|})) => (sttfa.{|el-⇒|} connectives.False (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (t : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} connectives.False t)) connectives.falsity (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.O) connectives.False (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) logic.absurd (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) abs sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.not_le_Sn_O nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})) (p : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|})) ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})) p) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) q sttfa.{|■|}))) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) q sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) q sttfa.{|■|}))) n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) q sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) nat.sym_eq_match_nat_type_S nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) q sttfa.{|■|}))) sttfa.{|■|}) p sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) (__ : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S_S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n0 sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))))) le_mod_aux_m_m n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))).
def div_aux_mod_aux : (sttfa.Prf (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))).
[] div_aux_mod_aux --> (sttfa.{|in-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (p : (sttfa.El nat.nat) => (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux nat.O sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (Q : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|})))))) nat.nat_ind (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux nat.O sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (m : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|})) sym_eq_div_aux nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}))) sym_eq_div_aux_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => nat.O)))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) case_O sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) case_O sttfa.{|■|})))))) nat.eq_match_nat_type_O nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|})) sym_eq_mod_aux nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body nat.O sttfa.{|■|}) sttfa.{|■|}))) sym_eq_mod_aux_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => m)))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) case_O sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_match_nat_type_O nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => y)))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_times nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => nat.O)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => nat.O)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}))) nat.sym_eq_times_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => nat.O)) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) n) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}))) nat.sym_eq_plus_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (q : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux _x_365 sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) q) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) sttfa.{|■|})) sym_eq_div_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) div_aux_body sttfa.{|■|}) q sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) sym_eq_div_aux_body_S q sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (Hind : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (m : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) q sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) n0 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type case_S n sttfa.{|■|}) sttfa.{|■|})))))))) nat.eq_match_nat_type_S nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) sttfa.{|■|})) sym_eq_mod_aux (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) mod_aux_body sttfa.{|■|}) q sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux_body (sttfa.app nat.nat nat.nat nat.S p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) sym_eq_mod_aux_body_S q sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m0 : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (q0 : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m0 sttfa.{|■|}) n0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}))))) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) y n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (m : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) nat.sym_eq_match_nat_type_S nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (z : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux z sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))))))) nat.leb_elim n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_times nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => nat.O)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => nat.O)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body nat.O sttfa.{|■|}) sttfa.{|■|}))) nat.sym_eq_times_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => nat.O)) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}))) nat.sym_eq_plus_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y n sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) n sttfa.{|■|}) sttfa.{|■|}) (lenm : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|})) => (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_times (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_times_body_S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) m sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus_body_S m sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus_body_S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (lenm : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} ((z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.eq_ind nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.plus_minus_m_m n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) n sttfa.{|■|}))))) nat.not_le_to_lt n sttfa.{|■|}) m sttfa.{|■|}) lenm sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.plus_n_Sm m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.plus_n_Sm (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.plus_n_Sm m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.eq_minus_S_pred n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.pred (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.eq_minus_S_pred n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) Hind (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) z sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.associative_plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux q sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) p sttfa.{|■|}))).
def div_mod : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))).
[] div_mod --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (m : (sttfa.El nat.nat) => (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) z sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) z sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) z sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop return_ nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop return_ z sttfa.{|■|})))))) nat.match_nat_prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) case_O sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_match_nat_type_O nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.times_body sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_times_body_S n sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) case_O sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_match_nat_type_O nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) sttfa.{|■|})) nat.sym_eq_plus nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} nat.nat nat.nat) sttfa.{|■|}) nat.plus_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus_body nat.O sttfa.{|■|}) sttfa.{|■|}))) nat.sym_eq_plus_body_O (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat y (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => m)) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) n) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.plus_n_O n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.times_n_O n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})) (auto : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) auto sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})) auto) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) nat.sym_eq_match_nat_type_S nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) auto sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) n sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (case_O : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type nat.nat sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} return_type (case_O : (sttfa.El return_type) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (case_S : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type case_S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.app return_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_))))) nat.match_nat_type return_type sttfa.{|■|}) case_O sttfa.{|■|}) case_S sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) nat.sym_eq_match_nat_type_S nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) sttfa.{|■|}) auto sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) auto) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) p sttfa.{|■|}))) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n0 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux n sttfa.{|■|}) n0 sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux n sttfa.{|■|}) n0 sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) div_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) mod_aux p sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) div_aux_mod_aux n sttfa.{|■|}) n sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))).
def eq_times_div_minus_mod : (sttfa.Prf (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))).
[] eq_times_div_minus_mod --> (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (b : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))) nat.minus_plus_m_m (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|})) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) div_mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))).
div_mod_spec : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)))))).
div_mod_spec_intro : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))))))).
match_div_mod_spec_prop : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))))))).
def div_mod_spec_div_mod : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))))).
[] div_mod_spec_div_mod --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (posm : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))))) div_mod_spec_intro n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) lt_mod_m_m n sttfa.{|■|}) m sttfa.{|■|}) posm sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) n) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) div_mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))).
def let_clause_1078 : (sttfa.Prf (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))))))).
[] let_clause_1078 --> (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))) (q : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))) (r : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))) (q1 : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))) (r1 : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (_clearme : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (ltrb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (spec : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (_clearme0 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (ltr1b : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (spec1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (leqq1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (ltqq1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|})) => (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) spec sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))))))))))))).
def let_clause_1062 : (sttfa.Prf (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))))).
[] let_clause_1062 --> (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))) (q : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))) (r : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))) (q1 : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))) (r1 : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (_clearme : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (ltrb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (spec : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (_clearme0 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (ltr1b : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (spec1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (leqq1 : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) spec1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))))))))))).
def div_mod_spec_to_eq : (sttfa.Prf (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))))))).
[] div_mod_spec_to_eq --> (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))) (q : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))) (r : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))) (q1 : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))) (r1 : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (_clearme : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))))) match_div_mod_spec_prop a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) (ltrb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (spec : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (_clearme0 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) return_))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))))) match_div_mod_spec_prop a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (ltr1b : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (spec1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop P (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.leb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})))))))) nat.leb_elim q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) bool.true sttfa.{|■|}) (leqq1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}))) bool.true sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (ltqq1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|})) => (sttfa.{|el-⇒|} connectives.False (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (t : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} connectives.False t)) connectives.falsity (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) a) connectives.False (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) logic.absurd (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) p sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) p sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) p sttfa.{|■|})))))))) nat.lt_to_le_to_lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) r sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} A A) sttfa.prop)))) relations.monotonic nat.nat sttfa.{|■|}) nat.lt sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|})) nat.monotonic_lt_plus_r (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) b sttfa.{|■|}) ltrb sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))))) let_clause_1078 a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) _clearme sttfa.{|■|}) ltrb sttfa.{|■|}) spec sttfa.{|■|}) _clearme0 sttfa.{|■|}) ltr1b sttfa.{|■|}) spec1 sttfa.{|■|}) leqq1 sttfa.{|■|}) ltqq1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.times_n_Sm b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))))))))))))))))) let_clause_1078 a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) _clearme sttfa.{|■|}) ltrb sttfa.{|■|}) spec sttfa.{|■|}) _clearme0 sttfa.{|■|}) ltr1b sttfa.{|■|}) spec1 sttfa.{|■|}) leqq1 sttfa.{|■|}) ltqq1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) spec sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) z sttfa.{|■|})))))))) nat.transitive_le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} A A) sttfa.prop)))) relations.monotonic nat.nat sttfa.{|■|}) nat.le sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|})) nat.monotonic_le_times_r b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) q1 sttfa.{|■|}) ltqq1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.times_n_Sm b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.times_n_Sm b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat nat.S q sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))) nat.le_plus_n_r r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) spec1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) nat.not_le_Sn_n a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (_x_172 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) q) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P q sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) q sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) q1 sttfa.{|■|}) _x_172 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_to_or_lt_eq q sttfa.{|■|}) q1 sttfa.{|■|}) leqq1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (leqq1 : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} connectives.False (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (t : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} connectives.False t)) connectives.falsity (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) a) connectives.False (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) logic.absurd (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) p sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) p sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (p : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) p sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) p sttfa.{|■|})))))))) nat.lt_to_le_to_lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) r1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (n : (sttfa.El nat.nat) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))))) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} A A) sttfa.prop)))) relations.monotonic nat.nat sttfa.{|■|}) nat.lt sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|})) nat.monotonic_lt_plus_r (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) b sttfa.{|■|}) ltr1b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))) let_clause_1062 a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) _clearme sttfa.{|■|}) ltrb sttfa.{|■|}) spec sttfa.{|■|}) _clearme0 sttfa.{|■|}) ltr1b sttfa.{|■|}) spec1 sttfa.{|■|}) leqq1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.times_n_Sm b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))) let_clause_1062 a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) _clearme sttfa.{|■|}) ltrb sttfa.{|■|}) spec sttfa.{|■|}) _clearme0 sttfa.{|■|}) ltr1b sttfa.{|■|}) spec1 sttfa.{|■|}) leqq1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) spec1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) z sttfa.{|■|})))))))) nat.transitive_le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q1 sttfa.{|■|}) q sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)) (sttfa.{|⇝|} (sttfa.{|⇝|} A A) sttfa.prop)))) relations.monotonic nat.nat sttfa.{|■|}) nat.le sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|})) nat.monotonic_le_times_r b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt q1 sttfa.{|■|}) q sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) q sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) n sttfa.{|■|}))))) nat.not_le_to_lt q sttfa.{|■|}) q1 sttfa.{|■|}) leqq1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) q1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.times_n_Sm b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) nat.times_n_Sm b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat nat.S q1 sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))) nat.le_plus_n_r r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) spec sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) nat.not_le_Sn_n a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))))) sttfa.{|■|}) _clearme0 sttfa.{|■|}))))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))))))))))))).
def div_mod_spec_to_eq2 : (sttfa.Prf (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))))))))))))))).
[] div_mod_spec_to_eq2 --> (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))))))))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))))))))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))))))))) (q : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))))))) (r : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))))) (q1 : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})))) (r1 : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})) (spec : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (spec1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))))) match_div_mod_spec_prop a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})) (__ : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (eqa : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) return_))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) return_))))))))))) match_div_mod_spec_prop a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|})) (_0 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r1 sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (eqa1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) r sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.{|el-∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat B) sttfa.prop))) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A B) sttfa.prop))))) relations.injective_ nat.nat sttfa.{|■|}) nat.nat sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|})) nat.injective_plus_r (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) a) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) __1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) __1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) q1 sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) __1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P q1 sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) __1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r1) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) __1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) q1 sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) eqa1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q1 sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q1 sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q1 sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) q sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))))) div_mod_spec_to_eq a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) spec sttfa.{|■|}) spec1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) r) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) b) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) __1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __1 sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) eqa sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus r sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times b sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) q sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) spec1 sttfa.{|■|}))))) sttfa.{|■|}) spec sttfa.{|■|}))))))))))))))))).
def div_times : (sttfa.Prf (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))))))).
[] div_times --> (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) (b : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (posb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) q1 sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) q1 sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))) (sttfa.{|el-∀|} nat.nat (b0 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b0 sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b0 sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))))) div_mod_spec_to_eq (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) div_mod_spec_div_mod (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) posb sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) r sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))))) div_mod_spec_intro (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) a sttfa.{|■|}) nat.O sttfa.{|■|}) posb sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) nat.O) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) nat.plus_O_n (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times a sttfa.{|■|}) b sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))).
def eq_div_O : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))))))).
[] eq_div_O --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (ltnm : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) q1 sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) q1 sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q1 : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec a sttfa.{|■|}) b sttfa.{|■|}) q1 sttfa.{|■|}) r1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) q sttfa.{|■|}) q1 sttfa.{|■|})))))))))))))) div_mod_spec_to_eq n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) div_mod_spec_div_mod n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt nat.O sttfa.{|■|}) m sttfa.{|■|}))))) nat.ltn_to_ltO n sttfa.{|■|}) m sttfa.{|■|}) ltnm sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) r sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (q : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (r : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt r sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times q sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) r sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop)) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop))) div_mod_spec n sttfa.{|■|}) m sttfa.{|■|}) q sttfa.{|■|}) r sttfa.{|■|})))))))))) div_mod_spec_intro n sttfa.{|■|}) m sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}) ltnm sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) m) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) n) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.plus_n_O n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times m sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.times_n_O m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times nat.O sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))).
def mod_O_n : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))).
[] mod_O_n --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) nat.O sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}))) nat.le_n_O_to_eq (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|})))) nat.minus_le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((h : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus __ sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) div_mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_times (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|})))) nat.commutative_plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus n sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) nat.minus_n_O (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (h : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus nat.O sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (h : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (h : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus x sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.plus y sttfa.{|■|}) h sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.minus x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|})))))) nat.minus_plus_plus_l (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) nat.times n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) div nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) mod nat.O sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))).
