#REQUIRE connectives.
#REQUIRE sttfa.
eq : (sttfa.Els (sttfa.{|∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))))).
refl : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))))).
eq_ind : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))))).
def eq_rect_r : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))))).
[] eq_rect_r --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))) (a : (sttfa.El A) => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) (x : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))) (p : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P __ sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (x0 : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop x0 x sttfa.{|■|}) (sttfa.app A sttfa.prop x0 x sttfa.{|■|})))) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P __ sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) eq_ind A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P __ sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) sttfa.{|■|}) (sttfa.{|in-∀|} (sttfa.{|⇝|} A sttfa.prop) (x0 : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop x0 x sttfa.{|■|}) (sttfa.app A sttfa.prop x0 x sttfa.{|■|}))) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app A sttfa.prop P x sttfa.{|■|})) => auto)))) sttfa.{|■|}) a sttfa.{|■|}) p sttfa.{|■|}))))))))).
def eq_ind_r : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))))).
[] eq_ind_r --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))) (a : (sttfa.El A) => (sttfa.{|in-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))) (p : (sttfa.Prf (sttfa.app A sttfa.prop P a sttfa.{|■|})) => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|}))) (x0 : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x0 sttfa.{|■|}) (p0 : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) a sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x0 sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x0 sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x0 sttfa.{|■|})))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) eq_rect_r A sttfa.{|■|}) a sttfa.{|■|}) x0 sttfa.{|■|}) p0 sttfa.{|■|}) (sttfa.abs A sttfa.prop (x01' : (sttfa.El A) => (sttfa.app A sttfa.prop P x01' sttfa.{|■|}))) sttfa.{|■|}) p sttfa.{|■|}))))))))))))).
def rewrite_l : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))))).
[] rewrite_l --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (x : (sttfa.El A) => (sttfa.{|in-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))) (Hx : (sttfa.Prf (sttfa.app A sttfa.prop P x sttfa.{|■|})) => (sttfa.{|in-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|}))) (y : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|}) (Heq : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop P __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop P __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) eq_ind A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop P __ sttfa.{|■|}))) sttfa.{|■|}) Hx sttfa.{|■|}) y sttfa.{|■|}) Heq sttfa.{|■|}))))))))))))).
def sym_eq : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))))).
[] sym_eq --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (x : (sttfa.El A) => (sttfa.{|in-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))) (y : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (Heq : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) x sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) x) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) x sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) x sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) refl A sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) x) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) refl A sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) Heq sttfa.{|■|}) sttfa.{|■|}))))))))).
def rewrite_r : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))))).
[] rewrite_r --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (x : (sttfa.El A) => (sttfa.{|in-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))) (Hx : (sttfa.Prf (sttfa.app A sttfa.prop P x sttfa.{|■|})) => (sttfa.{|in-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|}))) (y : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|}) (Heq : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop P __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop P __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) eq_ind A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop P __ sttfa.{|■|}))) sttfa.{|■|}) Hx sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-∀|} A (y0 : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) sym_eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) Heq sttfa.{|■|}) sttfa.{|■|}))))))))))))).
def eq_coerc : (sttfa.Prf (sttfa.{|∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))))).
[] eq_coerc --> (sttfa.{|in-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) (A : (sttfa.El sttfa.prop) => (sttfa.{|in-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))) (B : (sttfa.El sttfa.prop) => (sttfa.{|in-⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B) (Ha : (sttfa.Prf A) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B (Heq : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B (sttfa.{|el-∀|} sttfa.prop (y : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.abs sttfa.prop sttfa.prop (x_19 : (sttfa.El sttfa.prop) => x_19)) y sttfa.{|■|}))) (sttfa.{|el-⇒|} A (sttfa.{|∀|} sttfa.prop (y : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.abs sttfa.prop sttfa.prop (x_19 : (sttfa.El sttfa.prop) => x_19)) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} sttfa.prop sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} sttfa.prop sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop P A sttfa.{|■|}) (sttfa.{|∀|} sttfa.prop (y : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.{|∀|} (sttfa.{|⇝|} sttfa.prop sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} sttfa.prop sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} sttfa.prop (y : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) eq_ind sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) (sttfa.abs sttfa.prop sttfa.prop (x_19 : (sttfa.El sttfa.prop) => x_19)) sttfa.{|■|}) Ha sttfa.{|■|}) B sttfa.{|■|}) Heq sttfa.{|■|}))))))))).
def trans_eq : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|∀|} A (z : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|})))))))))))).
[] trans_eq --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|∀|} A (z : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|})))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|∀|} A (z : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|})))))))) (x : (sttfa.El A) => (sttfa.{|in-∀|} A (y : (sttfa.El A) => (sttfa.{|∀|} A (z : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|})))))) (y : (sttfa.El A) => (sttfa.{|in-∀|} A (z : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|})))) (z : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|})) (H1 : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|}) (H2 : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) z sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) z sttfa.{|■|}))) y sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) z sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P y sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) eq_ind_r A sttfa.{|■|}) y sttfa.{|■|}) (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) z sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x0 sttfa.{|■|}) z sttfa.{|■|}))) y sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) x) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) refl A sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) z sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) z sttfa.{|■|}) (sttfa.{|el-∀|} A (y0 : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) y0 sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) z sttfa.{|■|}) (sttfa.{|∀|} A (y0 : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) y0 sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P y sttfa.{|■|}) (sttfa.{|∀|} A (y0 : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y0 sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_r A sttfa.{|■|}) y sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) __ sttfa.{|■|}) z sttfa.{|■|}))) sttfa.{|■|}) H2 sttfa.{|■|}) x sttfa.{|■|}) H1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) H1 sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) H1 sttfa.{|■|}))))))))))))).
def eq_f : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (B : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A B) (f : (sttfa.El (sttfa.{|⇝|} A B)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))))))))))))).
[] eq_f --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (B : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A B) (f : (sttfa.El (sttfa.{|⇝|} A B)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀ₚ|} (B : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A B) (f : (sttfa.El (sttfa.{|⇝|} A B)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))))))))) (B : sttfa.{|Type|} => (sttfa.{|in-∀|} (sttfa.{|⇝|} A B) (f : (sttfa.El (sttfa.{|⇝|} A B)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))))))) (f : (sttfa.El (sttfa.{|⇝|} A B)) => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))))) (x : (sttfa.El A) => (sttfa.{|in-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) (y : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}) (H : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P y sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) eq_ind_r A sttfa.{|■|}) y sttfa.{|■|}) (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x0 : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}) (sttfa.{|el-∀|} A (y0 : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) y0 sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.{|∀|} A (y0 : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) y0 sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f y sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El B) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app A B f x sttfa.{|■|})) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app A B f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} B (x : (sttfa.El B) => (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) refl B sttfa.{|■|}) (sttfa.app A B f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) H sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) H sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) H sttfa.{|■|}))))))))))))).
def eq_f2 : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (B : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (C : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A (sttfa.{|⇝|} B C)) (f : (sttfa.El (sttfa.{|⇝|} A (sttfa.{|⇝|} B C))) => (sttfa.{|∀|} A (x1 : (sttfa.El A) => (sttfa.{|∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))))))))))))))).
[] eq_f2 --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (B : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (C : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A (sttfa.{|⇝|} B C)) (f : (sttfa.El (sttfa.{|⇝|} A (sttfa.{|⇝|} B C))) => (sttfa.{|∀|} A (x1 : (sttfa.El A) => (sttfa.{|∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))))))))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀ₚ|} (B : sttfa.{|Type|} => (sttfa.{|∀ₚ|} (C : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A (sttfa.{|⇝|} B C)) (f : (sttfa.El (sttfa.{|⇝|} A (sttfa.{|⇝|} B C))) => (sttfa.{|∀|} A (x1 : (sttfa.El A) => (sttfa.{|∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))))))))))) (B : sttfa.{|Type|} => (sttfa.{|in-∀ₚ|} (C : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A (sttfa.{|⇝|} B C)) (f : (sttfa.El (sttfa.{|⇝|} A (sttfa.{|⇝|} B C))) => (sttfa.{|∀|} A (x1 : (sttfa.El A) => (sttfa.{|∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))))))))) (C : sttfa.{|Type|} => (sttfa.{|in-∀|} (sttfa.{|⇝|} A (sttfa.{|⇝|} B C)) (f : (sttfa.El (sttfa.{|⇝|} A (sttfa.{|⇝|} B C))) => (sttfa.{|∀|} A (x1 : (sttfa.El A) => (sttfa.{|∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))))))) (f : (sttfa.El (sttfa.{|⇝|} A (sttfa.{|⇝|} B C))) => (sttfa.{|in-∀|} A (x1 : (sttfa.El A) => (sttfa.{|∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))))) (x1 : (sttfa.El A) => (sttfa.{|in-∀|} A (x2 : (sttfa.El A) => (sttfa.{|∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))))) (x2 : (sttfa.El A) => (sttfa.{|in-∀|} B (y1 : (sttfa.El B) => (sttfa.{|∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))))) (y1 : (sttfa.El B) => (sttfa.{|in-∀|} B (y2 : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})))) (y2 : (sttfa.El B) => (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|})) (E1 : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (E2 : (sttfa.Prf (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x2 sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x2 sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) eq_ind_r A sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.abs A sttfa.prop (x : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (x : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x2 sttfa.{|■|}) (sttfa.{|el-∀|} B (x : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (x : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (x : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y2 sttfa.{|■|}) (sttfa.{|∀|} B (x : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (x : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} B sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} B sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop P y2 sttfa.{|■|}) (sttfa.{|∀|} B (x : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app B sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} B (a : (sttfa.El B) => (sttfa.{|∀|} (sttfa.{|⇝|} B sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} B sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} B (x : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app B sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) eq_ind_r B sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.abs B sttfa.prop (x : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (x : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y2 sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x1 sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x1 sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x1 sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x1 sttfa.{|■|}) (sttfa.{|el-∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y1 sttfa.{|■|}) (sttfa.{|∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} B sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} B sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop P y1 sttfa.{|■|}) (sttfa.{|∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} B (x : (sttfa.El B) => (sttfa.{|∀|} (sttfa.{|⇝|} B sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} B sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l B sttfa.{|■|}) y1 sttfa.{|■|}) (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) x2 sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x2 sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y1 sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x1 sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x1 sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l A sttfa.{|■|}) x1 sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y2 sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f __ sttfa.{|■|}) y2 sttfa.{|■|}) sttfa.{|■|}))) x1 sttfa.{|■|}) (sttfa.{|el-∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El C) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|})) (sttfa.{|∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} B sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} B sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop P y1 sttfa.{|■|}) (sttfa.{|∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) y1 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} B (x : (sttfa.El B) => (sttfa.{|∀|} (sttfa.{|⇝|} B sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} B sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} B (y : (sttfa.El B) => (sttfa.{|⇒|} (sttfa.app B sttfa.prop (sttfa.app B (sttfa.{|⇝|} B sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq B sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app B sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_l B sttfa.{|■|}) y1 sttfa.{|■|}) (sttfa.abs B sttfa.prop (__ : (sttfa.El B) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} C (x : (sttfa.El C) => (sttfa.app C sttfa.prop (sttfa.app C (sttfa.{|⇝|} C sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq C sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) refl C sttfa.{|■|}) (sttfa.app B C (sttfa.app A (sttfa.{|⇝|} B C) f x1 sttfa.{|■|}) y1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y2 sttfa.{|■|}) E2 sttfa.{|■|}) sttfa.{|■|}) x2 sttfa.{|■|}) E1 sttfa.{|■|}) sttfa.{|■|}) y2 sttfa.{|■|}) E2 sttfa.{|■|}) sttfa.{|■|}) x2 sttfa.{|■|}) E1 sttfa.{|■|}) sttfa.{|■|}) y1 sttfa.{|■|}) E2 sttfa.{|■|}) sttfa.{|■|}) x1 sttfa.{|■|}) E1 sttfa.{|■|}))))))))))))))))))))).
def absurd : (sttfa.Prf (sttfa.{|∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))))).
[] absurd --> (sttfa.{|in-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) (A : (sttfa.El sttfa.prop) => (sttfa.{|in-⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False) (H : (sttfa.Prf A) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False (Hn : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) connectives.False) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (Q : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) Q) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) Q))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (Q : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) Q) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) Q))))) connectives.Not_ind A sttfa.{|■|}) connectives.False sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|⇒|} A connectives.False) connectives.False (_x_80 : (sttfa.Prf (sttfa.{|⇒|} A connectives.False)) => (sttfa.{|el-⇒|} A connectives.False _x_80 H sttfa.{|■|}))) sttfa.{|■|}) Hn sttfa.{|■|}))))))).
def not_to_not : (sttfa.Prf (sttfa.{|∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A B) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|})))))))).
[] not_to_not --> (sttfa.{|in-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A B) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|})))))) (A : (sttfa.El sttfa.prop) => (sttfa.{|in-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A B) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|})))) (B : (sttfa.El sttfa.prop) => (sttfa.{|in-⇒|} (sttfa.{|⇒|} A B) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|})) (auto : (sttfa.Prf (sttfa.{|⇒|} A B)) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) (auto' : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.{|⇒|} A connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}))) connectives.nmk A sttfa.{|■|}) (sttfa.{|in-⇒|} A connectives.False (auto'' : (sttfa.Prf A) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) connectives.False (sttfa.{|el-⇒|} B (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) absurd B sttfa.{|■|}) (sttfa.{|el-⇒|} A B auto auto'' sttfa.{|■|}) sttfa.{|■|}) auto' sttfa.{|■|}))) sttfa.{|■|}))))))))).
def sym_not_eq : (sttfa.Prf (sttfa.{|∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))))))))).
[] sym_not_eq --> (sttfa.{|in-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))))))) (A : sttfa.{|Type|} => (sttfa.{|in-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))))) (x : (sttfa.El A) => (sttfa.{|in-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) (y : (sttfa.El A) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}))) connectives.nmk (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) connectives.False (auto' : (sttfa.Prf (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) connectives.False (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) absurd (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) x) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) rewrite_r A sttfa.{|■|}) x sttfa.{|■|}) (sttfa.abs A sttfa.prop (__ : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) refl A sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) auto' sttfa.{|■|}) sttfa.{|■|}) auto sttfa.{|■|}))) sttfa.{|■|}))))))))).
def proj1 : (sttfa.Prf (sttfa.{|∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) A)))))).
[] proj1 --> (sttfa.{|in-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) A)))) (A : (sttfa.El sttfa.prop) => (sttfa.{|in-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) A)) (B : (sttfa.El sttfa.prop) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) A (AB : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) A (sttfa.{|el-⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B A)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) A) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop A sttfa.{|■|}) B sttfa.{|■|}) A sttfa.{|■|}) (sttfa.{|in-⇒|} A (sttfa.{|⇒|} B A) (_x_120 : (sttfa.Prf A) => (sttfa.{|in-⇒|} B A (_x_119 : (sttfa.Prf B) => _x_120)))) sttfa.{|■|}) AB sttfa.{|■|}))))))).
def proj2 : (sttfa.Prf (sttfa.{|∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) B)))))).
[] proj2 --> (sttfa.{|in-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) B)))) (A : (sttfa.El sttfa.prop) => (sttfa.{|in-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) B)) (B : (sttfa.El sttfa.prop) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) B (AB : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) B (sttfa.{|el-⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B B)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) B) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop A sttfa.{|■|}) B sttfa.{|■|}) B sttfa.{|■|}) (sttfa.{|in-⇒|} A (sttfa.{|⇒|} B B) (_x_120 : (sttfa.Prf A) => (sttfa.{|in-⇒|} B B (_x_119 : (sttfa.Prf B) => _x_119)))) sttfa.{|■|}) AB sttfa.{|■|}))))))).
def decidable : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} sttfa.prop sttfa.prop))).
[] decidable --> (sttfa.abs sttfa.prop sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) sttfa.{|■|}))).
