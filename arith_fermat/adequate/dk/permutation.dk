#REQUIRE bool.
#REQUIRE connectives.
#REQUIRE leibniz.
#REQUIRE logic.
#REQUIRE nat.
#REQUIRE relations.
#REQUIRE sttfa.
def injn : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop)))).
[] injn --> (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat sttfa.prop (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))))))).
def injn_Sn_n : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}))))))).
[] injn_Sn_n --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (H : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (j : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (lei : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (lej : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (eqf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) H i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S i sttfa.{|■|}) n sttfa.{|■|}) lei sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S j sttfa.{|■|}) n sttfa.{|■|}) lej sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat nat.nat f i sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) eqf sttfa.{|■|}) sttfa.{|■|}))))))))))))))))).
def permut : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop)))).
[] permut --> (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat sttfa.prop (m : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))).
def transpose : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat))))).
[] transpose --> (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) (i : (sttfa.El nat.nat) => (sttfa.abs nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (j : (sttfa.El nat.nat) => (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))))))).
def transpose_i_j_i : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))).
[] transpose_i_j_i --> (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) (j : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) i) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n i sttfa.{|■|}) sttfa.{|■|}))))).
def transpose_i_j_j : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))).
[] transpose_i_j_j --> (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (j : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (Hc : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) i) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq j sttfa.{|■|}) i sttfa.{|■|}) Hc sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hc sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (Hc : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) j) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hc sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))).
def transpose_i_j_j_i : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))))))).
[] transpose_i_j_j_i --> (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))) (j : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose j sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hni : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hnj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x_1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x_1 sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x_1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.eq_ind nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x_1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x_1 sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) n sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) n) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) n sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.eq_ind nat.nat sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq n sttfa.{|■|}) j sttfa.{|■|}) Hnj sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq n sttfa.{|■|}) i sttfa.{|■|}) Hni sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hnj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) j) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) j sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hni sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hni : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hnj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) i) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hnj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) n) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hni sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))).
def transpose_transpose : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))))).
[] transpose_transpose --> (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (j : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (Hni : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (Hji : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq j sttfa.{|■|}) i sttfa.{|■|}) Hji sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq n sttfa.{|■|}) i sttfa.{|■|}) Hni sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hji sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (Hji : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) j) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq n sttfa.{|■|}) i sttfa.{|■|}) Hni sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hji sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hni sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (Hni : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (Hnj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) i) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq n sttfa.{|■|}) j sttfa.{|■|}) Hnj sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (Hnj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb y sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) n sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) n sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hni sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hnj sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hni sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))).
def injective_transpose : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.{|el-∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat B) sttfa.prop))) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A B) sttfa.prop))))) relations.injective_ nat.nat sttfa.{|■|}) nat.nat sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})))))).
[] injective_transpose --> (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.{|el-∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat B) sttfa.prop))) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A B) sttfa.prop))))) relations.injective_ nat.nat sttfa.{|■|}) nat.nat sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.{|el-∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat B) sttfa.prop))) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A B) sttfa.prop))))) relations.injective_ nat.nat sttfa.{|■|}) nat.nat sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})) (j : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}))))) (x : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}))) (y : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) y0 sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) y) (sttfa.{|∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) y0 sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y0 sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y0 sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) x) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) y0 sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) y0 sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) y0 sttfa.{|■|}))) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) y) (sttfa.{|∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) y0 sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y0 sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))) transpose_transpose i sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))) transpose_transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))).
def permut_S_to_permut_transpose : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))))).
[] permut_S_to_permut_transpose --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (_clearme : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (permf1 : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (permf2 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x0 sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|})))))))) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x0 sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|})))))))) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (i : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (leim : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (Hfi : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}))))) nat.le_S_S_to_le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) Hfi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}))))) nat.not_eq_to_eqb_false (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.lt_to_not_eq (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) Hfi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (Hfi : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_true sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_true nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (H : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}))))) nat.le_S_S_to_le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) H sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (H : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} connectives.False (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (t : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} connectives.False t)) connectives.falsity (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) logic.absurd (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) permf2 i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S i sttfa.{|■|}) m sttfa.{|■|}) leim sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat nat.nat f i sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) H sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) Hfi sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) Hfi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) Hfi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) B) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A B) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not B sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|})))))) logic.not_to_not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) leim sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le __ sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|})) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m0 sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}))))) nat.lt_to_not_le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_to_or_lt_eq (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) permf1 (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}))))) nat.eq_to_eqb_true (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) Hfi sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_to_or_lt_eq (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) permf1 i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S i sttfa.{|■|}) m sttfa.{|■|}) leim sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}))))) nat.not_eq_to_eqb_false (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}))) connectives.nmk (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False (H : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) logic.absurd (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) permf2 i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S i sttfa.{|■|}) m sttfa.{|■|}) leim sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) H sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.lt_to_not_eq i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S_S i sttfa.{|■|}) m sttfa.{|■|}) leim sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (x0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x0 sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x0 sttfa.{|■|}))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}))) (leam : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) m sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|})) (lebm : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) m sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (H : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) permf2 a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S a sttfa.{|■|}) m sttfa.{|■|}) leam sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S b sttfa.{|■|}) m sttfa.{|■|}) lebm sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.{|el-∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat B) sttfa.prop))) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A B) sttfa.prop))))) relations.injective_ nat.nat sttfa.{|■|}) nat.nat sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) sttfa.prop (sttfa.{|el-∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat B) sttfa.prop))) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|∀ₖ|} (B : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A B) sttfa.prop))))) relations.injective_ nat.nat sttfa.{|■|}) nat.nat sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})))) injective_transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) H sttfa.{|■|}) sttfa.{|■|}))))))))))) sttfa.{|■|}))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))))).
def bijn : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop)))).
[] bijn --> (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat sttfa.prop (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))))))).
def eq_to_bijn : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})))))))))).
[] eq_to_bijn --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})))))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})))))) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})) (H : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (bijf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (i : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}) return_))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}) return_))))))) connectives.match_ex_prop nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (fa : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) lean sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.eq_ind nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|}))) H a sttfa.{|■|}) lean sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) fa sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) bijf i sttfa.{|■|}) lein sttfa.{|■|}) sttfa.{|■|}))))))))))))))).
def bijn_n_Sn : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})))))))).
[] bijn_n_Sn --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) (bijf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (fS : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (i : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (Hi : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}) return_))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}) return_))))))) connectives.match_ex_prop nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (fa : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S a sttfa.{|■|}) n sttfa.{|■|}) lean sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) i) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) fa sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) bijf i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}))))) nat.le_S_S_to_le i sttfa.{|■|}) n sttfa.{|■|}) Hi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (Hi : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) i) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) B))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) A sttfa.{|■|}) B sttfa.{|■|}) B))))) logic.eq_coerc (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (x : (sttfa.El sttfa.prop) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq sttfa.prop sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl sttfa.prop sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) Hi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) i) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) fS sttfa.{|■|}) i sttfa.{|■|}) Hi sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) Hi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_to_or_lt_eq i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) lein sttfa.{|■|}) sttfa.{|■|}))))))))))))).
def bijn_fg : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))))))))).
[] bijn_fg --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))))) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})) (bijf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}) (bijg : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (i : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}) return_))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}) return_))))))) connectives.match_ex_prop nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (ga : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}) return_))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}) return_))))))) connectives.match_ex_prop nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (b : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (_clearme0 : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (lebn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (gb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) lebn sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) i) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __ sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) ga sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g b sttfa.{|■|}) sttfa.{|■|}) gb sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) _clearme0 sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) bijg a sttfa.{|■|}) lean sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) bijf i sttfa.{|■|}) lein sttfa.{|■|}) sttfa.{|■|}))))))))))))))).
def bijn_transpose : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))))))).
[] bijn_transpose --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (j : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (lejn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (Hi : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) lejn sttfa.{|■|}) (sttfa.{|el-⇒|} ((j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) j) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) a sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq a sttfa.{|■|}) i sttfa.{|■|}) Hi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))) transpose_i_j_j i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (Hi : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} ((b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) return_)))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_)))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A return_) (sttfa.{|⇒|} (sttfa.{|⇒|} B return_) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or A sttfa.{|■|}) B sttfa.{|■|}) return_)))))))) connectives.match_Or_prop (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (Hj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) lein sttfa.{|■|}) (sttfa.{|el-⇒|} ((j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) j) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) a sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}))))) nat.eqb_true_to_eq a sttfa.{|■|}) j sttfa.{|■|}) Hj sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))) transpose_i_j_i i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (Hj : (sttfa.Prf (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) p sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) lean sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) a sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) i sttfa.{|■|}) a sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) Hj sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) Hi sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (b : (sttfa.El bool.bool) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.Or (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) b sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) bool.true_or_false (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb a sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))).
def permut_to_bijn : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}))))))).
[] permut_to_bijn --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}))))) (n : (sttfa.El nat.nat) => (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) _x_365 sttfa.{|■|})))))) x sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) x sttfa.{|■|})))) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x0 : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut x0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) _x_365 sttfa.{|■|})))))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat x i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat x i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat x j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) x sttfa.{|■|})))) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x0 : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut x0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) _x_365 sttfa.{|■|})))))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (Q : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|})))))) nat.nat_ind (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) _x_365 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) _x_365 sttfa.{|■|})))))) sttfa.{|■|}) (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat x i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat x i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat x j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x sttfa.{|■|}) nat.O sttfa.{|■|}))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) nat.O sttfa.{|■|}) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))))) (H : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (H1 : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))))) => (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (lem0 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) nat.O sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}))))))) connectives.ex_intro nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) n sttfa.{|■|})) nat.O) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) n sttfa.{|■|})) nat.le_O_n nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P m sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P m sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P n sttfa.{|■|})))))) nat.le_n_O_elim m sttfa.{|■|}) lem0 sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) nat.O sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) logic.sym_eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) n sttfa.{|■|}))) nat.le_n_O_to_eq (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) n sttfa.{|■|})) nat.O) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) H nat.O sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le nat.O sttfa.{|■|}) n sttfa.{|■|})) nat.le_O_n nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) x sttfa.{|■|})))) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x0 : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut x0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x0 sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (Hind : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) m sttfa.{|■|}))))) => (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (x : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (permf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g i sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|})))))))) eq_to_bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}))) (i : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (lei : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))) transpose_transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (g : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn g sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (p : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat g p sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|})))))))) bijn_fg (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (lef : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (__ : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose i sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))))))) bijn_transpose (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) lef (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) permf sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|})))))) bijn_n_Sn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) m sttfa.{|■|}))) Hind (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.abs nat.nat nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f n sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}))))) permut_S_to_permut_transpose f sttfa.{|■|}) m sttfa.{|■|}) permf sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.abs nat.nat nat.nat (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} nat.nat nat.nat)) transpose (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))) sttfa.{|■|}) n sttfa.{|■|}))).
invert_permut : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))))).
invert_permut_body : (sttfa.Els (sttfa.{|↑|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))))).
axiom_invert_permut : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))).
def eq_invert_permut : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})))).
[] eq_invert_permut --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) axiom_invert_permut n sttfa.{|■|}) sttfa.{|■|}))).
def sym_eq_invert_permut : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})))).
[] sym_eq_invert_permut --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) n) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|})) eq_invert_permut n sttfa.{|■|}) sttfa.{|■|}))).
axiom_invert_permut_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})).
def eq_invert_permut_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})).
[] eq_invert_permut_body_O --> (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) axiom_invert_permut_body_O sttfa.{|■|}).
def sym_eq_invert_permut_body_O : (sttfa.Prf (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|})).
[] sym_eq_invert_permut_body_O --> (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) eq_invert_permut_body_O sttfa.{|■|}).
axiom_invert_permut_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})))).
def eq_invert_permut_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})))).
[] eq_invert_permut_body_S --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) n) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P x sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) connectives.equal_leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) connectives.equal (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) axiom_invert_permut_body_S n sttfa.{|■|}) sttfa.{|■|}))).
def sym_eq_invert_permut_body_S : (sttfa.Prf (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))).
[] sym_eq_invert_permut_body_S --> (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (n : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) n) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (x : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}))))))) leibniz.sym_leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|})) eq_invert_permut_body_S n sttfa.{|■|}) sttfa.{|■|}))).
def invert_permut_f : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))))).
[] invert_permut_f --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (lenm : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_417 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x_417 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x_417 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) m0 sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_417 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x_417 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x_417 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) m0 sttfa.{|■|})))) (sttfa.{|el-⇒|} ((z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|})) m) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_417 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x_417 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x_417 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) m0 sttfa.{|■|}))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (Q : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q m0 sttfa.{|■|}))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (Q : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q m sttfa.{|■|}))))))))) nat.le_ind m sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_417 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x_417 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x_417 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) z sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop return_ nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|∀|} nat.nat (z : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop return_ z sttfa.{|■|})))))) nat.match_nat_prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}))) sym_eq_invert_permut_body_O (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))))) => (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})) (a : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) __ sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut __ sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __ sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|})))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})) a) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut_body_S a sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.true sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.true sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))))) => (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut a sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) nat.eqb_n_n (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (m0 : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) x sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut x sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) m0) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut_body_S m0 sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (lem : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (H : (sttfa.Prf (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (H1 : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} bool.bool (a : (sttfa.El bool.bool) => (sttfa.{|∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} bool.bool (x : (sttfa.El bool.bool) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r bool.bool sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (x : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) m sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut m0 sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) H (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}))))) injn_Sn_n f sttfa.{|■|}) m0 sttfa.{|■|}) H1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.app bool.bool (sttfa.{|⇝|} bool.bool sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq bool.bool sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}))))) nat.not_eq_to_eqb_false (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A connectives.False) (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}))) connectives.nmk (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False (eqf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) connectives.False) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop connectives.Not A sttfa.{|■|}) connectives.False))) logic.absurd (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|})) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) H1 m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S m sttfa.{|■|}) m0 sttfa.{|■|}) lem sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.app nat.nat nat.nat f m sttfa.{|■|})) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__ : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) eqf sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) m sttfa.{|■|}) m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.lt n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app sttfa.prop sttfa.prop connectives.Not (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) n sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))))) nat.lt_to_not_eq m sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) m0 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m0 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S_S m sttfa.{|■|}) m0 sttfa.{|■|}) lem sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}) lenm sttfa.{|■|}))))))))).
def let_clause_1063 : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))))))).
[] let_clause_1063 --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))) (permf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))))) (j : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))) (lejn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))) (fa : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))) (_clearme0 : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))) (lebn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))) (fb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) (__ : (sttfa.Prf (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) (injf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P b sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) b sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) sttfa.{|■|}) fb sttfa.{|■|}) a sttfa.{|■|}) auto sttfa.{|■|}))))))))))))))))))))))))))))))))))))).
def let_clause_1068 : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))))))).
[] let_clause_1068 --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))) (permf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))))) (j : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))) (lejn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))) (fa : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))) (b : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))) (_clearme0 : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))) (lebn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))) (fb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) (__ : (sttfa.Prf (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (injf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P j sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) j sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) __1 sttfa.{|■|}))) j sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))))) let_clause_1063 f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) lein sttfa.{|■|}) lejn sttfa.{|■|}) a sttfa.{|■|}) _clearme sttfa.{|■|}) lean sttfa.{|■|}) fa sttfa.{|■|}) b sttfa.{|■|}) _clearme0 sttfa.{|■|}) lebn sttfa.{|■|}) fb sttfa.{|■|}) __ sttfa.{|■|}) injf sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) j sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) i sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) i sttfa.{|■|}))) sttfa.{|■|}) fa sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))))))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})))))))))))))))))))))))) let_clause_1063 f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) lein sttfa.{|■|}) lejn sttfa.{|■|}) a sttfa.{|■|}) _clearme sttfa.{|■|}) lean sttfa.{|■|}) fa sttfa.{|■|}) b sttfa.{|■|}) _clearme0 sttfa.{|■|}) lebn sttfa.{|■|}) fb sttfa.{|■|}) __ sttfa.{|■|}) injf sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))))))))))))))))))))))))))))))))))).
def injective_invert_permut : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))))).
[] injective_invert_permut --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (permf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) (i : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (j : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (lejn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}) return_))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}) return_))))))) connectives.match_ex_prop nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))) (a : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (_clearme : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (lean : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (fa : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}))) x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) P sttfa.{|■|}) return_))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) return_))) (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} A sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex A sttfa.{|■|}) P sttfa.{|■|}) return_))))))) connectives.match_ex_prop nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f x sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))) (b : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (_clearme0 : (sttfa.Prf (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (lebn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (fb : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i1 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i1 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i1 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i1 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i1 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i1 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i1 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i1 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.{|∀|} nat.nat (i1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i1 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i1 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))) (__ : (sttfa.Prf (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (injf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) j sttfa.{|■|})))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) j sttfa.{|■|})))) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) j sttfa.{|■|})))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.eq_ind nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) j sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x_1 sttfa.{|■|}) j sttfa.{|■|})))) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|})))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|})))) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|})))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.eq_ind nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x_1 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x_1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) x_1 sttfa.{|■|})))) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P b sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (a : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) a sttfa.{|■|}) (sttfa.app A sttfa.prop P x sttfa.{|■|})))))))))) logic.eq_ind_r nat.nat sttfa.{|■|}) b sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (auto : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) __1 sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}))) i sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P a sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) y sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_l nat.nat sttfa.{|■|}) a sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f __1 sttfa.{|■|}) sttfa.{|■|}))) a sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|}))) (sttfa.{|el-⇒|} ((x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) i) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) __1 sttfa.{|■|}))) y sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) i sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} nat.nat (y : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P y sttfa.{|■|})))))))) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.{|∀|} (sttfa.{|⇝|} A sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} A sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop P x sttfa.{|■|}) (sttfa.{|∀|} A (y : (sttfa.El A) => (sttfa.{|⇒|} (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) y sttfa.{|■|}) x sttfa.{|■|}) (sttfa.app A sttfa.prop P y sttfa.{|■|})))))))))) logic.rewrite_r nat.nat sttfa.{|■|}) i sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (__1 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) __1 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (A : sttfa.{|Type|} => (sttfa.{|∀|} A (x : (sttfa.El A) => (sttfa.app A sttfa.prop (sttfa.app A (sttfa.{|⇝|} A sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq A sttfa.{|■|}) x sttfa.{|■|}) x sttfa.{|■|})))) logic.refl nat.nat sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))))) let_clause_1068 f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) lein sttfa.{|■|}) lejn sttfa.{|■|}) a sttfa.{|■|}) _clearme sttfa.{|■|}) lean sttfa.{|■|}) fa sttfa.{|■|}) b sttfa.{|■|}) _clearme0 sttfa.{|■|}) lebn sttfa.{|■|}) fb sttfa.{|■|}) __ sttfa.{|■|}) injf sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))) (sttfa.{|el-∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))) (sttfa.{|el-⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))) (sttfa.{|el-∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}))))))))))))))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (a : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) (sttfa.{|∀|} nat.nat (b : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i0 : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i0 sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i0 sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) a sttfa.{|■|}) b sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|})))))))))))))))))))))))) let_clause_1068 f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}) lein sttfa.{|■|}) lejn sttfa.{|■|}) a sttfa.{|■|}) _clearme sttfa.{|■|}) lean sttfa.{|■|}) fa sttfa.{|■|}) b sttfa.{|■|}) _clearme0 sttfa.{|■|}) lebn sttfa.{|■|}) fb sttfa.{|■|}) __ sttfa.{|■|}) injf sttfa.{|■|}) auto sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le b sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f b sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) b sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) invert_permut_f f sttfa.{|■|}) n sttfa.{|■|}) b sttfa.{|■|}) lebn sttfa.{|■|}) injf sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le a sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f a sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) a sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) invert_permut_f f sttfa.{|■|}) n sttfa.{|■|}) a sttfa.{|■|}) lean sttfa.{|■|}) injf sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) fb sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) fa sttfa.{|■|}))))) sttfa.{|■|}) permf sttfa.{|■|}))))) sttfa.{|■|}) _clearme0 sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}))))) permut_to_bijn n sttfa.{|■|}) f sttfa.{|■|}) permf sttfa.{|■|}) j sttfa.{|■|}) lejn sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) _clearme sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} nat.nat sttfa.prop) sttfa.prop (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} A sttfa.prop) sttfa.prop))) connectives.ex nat.nat sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (p : (sttfa.El nat.nat) => (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le p sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f p sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) bijn f sttfa.{|■|}) n sttfa.{|■|}))))) permut_to_bijn n sttfa.{|■|}) f sttfa.{|■|}) permf sttfa.{|■|}) i sttfa.{|■|}) lein sttfa.{|■|}) sttfa.{|■|}))))))))))))))).
def permut_invert_permut : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))))).
[] permut_invert_permut --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (n : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (permf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|})))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} A (sttfa.{|⇒|} B (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|})))))) connectives.conj (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le x sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) x sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) n sttfa.{|■|}))) (i : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) n sttfa.{|■|}) (lein : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (Q : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q nat.O sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop Q (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop Q x sttfa.{|■|})))))) nat.nat_ind (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) nat.O sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut nat.O sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) nat.O sttfa.{|■|}) sttfa.{|■|})))) nat.sym_eq_filter_nat_type_O (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) z sttfa.{|■|})) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body nat.O sttfa.{|■|}) sttfa.{|■|}))) sym_eq_invert_permut_body_O (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) z sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) z sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) z sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (return_ : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop return_ bool.true sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop return_ bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop return_ z sttfa.{|■|})))))) bool.match_bool_prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.false sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) nat.O sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P nat.O sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|})))))) bool.eq_match_bool_type_false nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) nat.O sttfa.{|■|}) nat.O sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f nat.O sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-∀|} nat.nat (x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) (n1 : (sttfa.El nat.nat) => (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) ((x : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) x sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.abs nat.nat sttfa.prop (_x_365 : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut _x_365 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) _x_365 sttfa.{|■|}))) (sttfa.app nat.nat nat.nat nat.S x sttfa.{|■|}) sttfa.{|■|}))) n1) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)))) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.app (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_type : sttfa.{|Type|} => (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat return_type) (return_ : (sttfa.El (sttfa.{|⇝|} nat.nat return_type)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app return_type sttfa.prop (sttfa.app return_type (sttfa.{|⇝|} return_type sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_type sttfa.{|■|}) (sttfa.app nat.nat return_type return_ (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat return_type (sttfa.app (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|⇝|} nat.nat return_type) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat return_) (sttfa.{|⇝|} nat.nat return_)))) nat.filter_nat_type return_type sttfa.{|■|}) return_ sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})))))) nat.sym_eq_filter_nat_type_S (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) invert_permut_body sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop P (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (sttfa.app (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) (sttfa.{|⇝|} (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.abs nat.nat nat.nat (m : (sttfa.El nat.nat) => (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb m sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut_body (sttfa.app nat.nat nat.nat nat.S n sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|})) sym_eq_invert_permut_body_S n1 sttfa.{|■|}) (sttfa.abs (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) sttfa.prop (y : (sttfa.El (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat))) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) y f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})))) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (Hind : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|})) => (sttfa.{|el-∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) z sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) z sttfa.{|■|}))) (sttfa.{|el-⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) z sttfa.{|■|})))) (sttfa.{|el-∀|} (sttfa.{|⇝|} bool.bool sttfa.prop) (return_ : (sttfa.El (sttfa.{|⇝|} bool.bool sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop return_ bool.true sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app bool.bool sttfa.prop return_ bool.false sttfa.{|■|}) (sttfa.{|∀|} bool.bool (z : (sttfa.El bool.bool) => (sttfa.app bool.bool sttfa.prop return_ z sttfa.{|■|})))))) bool.match_bool_prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} ((n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|})) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) bool.true sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) case_true sttfa.{|■|})))))) bool.eq_match_bool_type_true nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) y sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) n sttfa.{|■|})) nat.le_n (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.true sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app bool.bool sttfa.prop (sttfa.abs bool.bool sttfa.prop (__ : (sttfa.El bool.bool) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) __ sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) bool.false sttfa.{|■|}) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat sttfa.prop) (P : (sttfa.El (sttfa.{|⇝|} nat.nat sttfa.prop)) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop P (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop P (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (case_true : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (case_false : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz nat.nat sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool nat.nat (sttfa.app nat.nat (sttfa.{|⇝|} bool.bool nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat (sttfa.{|⇝|} bool.bool nat.nat)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type nat.nat sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))) (sttfa.{|el-∀ₚ|} (return_ : sttfa.{|Type|} => (sttfa.{|∀|} return_ (case_true : (sttfa.El return_) => (sttfa.{|∀|} return_ (case_false : (sttfa.El return_) => (sttfa.app return_ sttfa.prop (sttfa.app return_ (sttfa.{|⇝|} return_ sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) leibniz.leibniz return_ sttfa.{|■|}) case_false sttfa.{|■|}) (sttfa.app bool.bool return_ (sttfa.app return_ (sttfa.{|⇝|} bool.bool return_) (sttfa.app return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_)) (sttfa.{|el-∀ₖ|} (return_ : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} return_ (sttfa.{|⇝|} return_ (sttfa.{|⇝|} bool.bool return_))))) bool.match_bool_type return_ sttfa.{|■|}) case_true sttfa.{|■|}) case_false sttfa.{|■|}) bool.false sttfa.{|■|}) sttfa.{|■|})))))) bool.sym_eq_match_bool_type_false nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.abs nat.nat sttfa.prop (y : (sttfa.El nat.nat) => (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le y sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) m sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le n sttfa.{|■|}) (sttfa.app nat.nat nat.nat nat.S m sttfa.{|■|}) sttfa.{|■|}))))) nat.le_S (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n1 sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n1 sttfa.{|■|}) Hind sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat bool.bool (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat bool.bool) nat.eqb i sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat nat.S n1 sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}))) sttfa.{|■|}) n sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) injective_invert_permut f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) sttfa.{|■|}))))))).
def f_invert_permut : (sttfa.Prf (sttfa.{|∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))))).
[] f_invert_permut --> (sttfa.{|in-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|in-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (n : (sttfa.El nat.nat) => (sttfa.{|in-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (m : (sttfa.El nat.nat) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (lemn : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|in-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (permf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (Hle : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (Hinj : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) return_))) (sttfa.{|el-∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) B sttfa.{|■|}) return_))))) (sttfa.{|el-∀|} sttfa.prop (A : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (B : (sttfa.El sttfa.prop) => (sttfa.{|∀|} sttfa.prop (return_ : (sttfa.El sttfa.prop) => (sttfa.{|⇒|} (sttfa.{|⇒|} A (sttfa.{|⇒|} B return_)) (sttfa.{|⇒|} (sttfa.app sttfa.prop sttfa.prop (sttfa.app sttfa.prop (sttfa.{|⇝|} sttfa.prop sttfa.prop) connectives.And A sttfa.{|■|}) B sttfa.{|■|}) return_))))))) connectives.match_And_prop (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|})))) (sttfa.{|⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (lef : (sttfa.Prf (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) => (sttfa.{|in-⇒|} (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat f j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (injf : (sttfa.Prf (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|})) => (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}))) (sttfa.{|el-∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) j sttfa.{|■|}))))) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|}))))))) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (j : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le j sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) j sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) i sttfa.{|■|}) j sttfa.{|■|})))))))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) injective_invert_permut f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat f i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) lef (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) Hle m sttfa.{|■|}) lemn sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) lemn sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|})) (sttfa.{|el-∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|∀|} nat.nat (m : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) injn f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) (sttfa.{|el-∀ₖ|} (A : sttfa.{|Type|} => (sttfa.{|↑|} (sttfa.{|⇝|} A (sttfa.{|⇝|} A sttfa.prop)))) logic.eq nat.nat sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) (sttfa.app nat.nat nat.nat f m sttfa.{|■|}) sttfa.{|■|}) sttfa.{|■|}) m sttfa.{|■|})))))))) invert_permut_f f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le m sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) m sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (i : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le i sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app nat.nat (sttfa.{|⇝|} nat.nat sttfa.prop) nat.le (sttfa.app nat.nat nat.nat (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) i sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) Hle m sttfa.{|■|}) lemn sttfa.{|■|}) sttfa.{|■|}) injf sttfa.{|■|}) sttfa.{|■|}))))) sttfa.{|■|}) permf sttfa.{|■|}))))) sttfa.{|■|}) (sttfa.{|el-⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}) (sttfa.{|el-∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))) (sttfa.{|el-∀|} (sttfa.{|⇝|} nat.nat nat.nat) (f : (sttfa.El (sttfa.{|⇝|} nat.nat nat.nat)) => (sttfa.{|∀|} nat.nat (n : (sttfa.El nat.nat) => (sttfa.{|⇒|} (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut f sttfa.{|■|}) n sttfa.{|■|}) (sttfa.app nat.nat sttfa.prop (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat sttfa.prop) permut (sttfa.app (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.app nat.nat (sttfa.{|⇝|} (sttfa.{|⇝|} nat.nat nat.nat) (sttfa.{|⇝|} nat.nat nat.nat)) invert_permut n sttfa.{|■|}) f sttfa.{|■|}) sttfa.{|■|}) n sttfa.{|■|}))))) permut_invert_permut f sttfa.{|■|}) n sttfa.{|■|}) permf sttfa.{|■|}) sttfa.{|■|}))))))))))).
