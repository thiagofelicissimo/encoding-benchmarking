require open coq.sttfa;
require coq.bigops;
require coq.bool;
require coq.exp;
require coq.logic;
require coq.nat;
symbol exp_pi_l : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ a : El (coq.nat.nat), ∀ (λ f : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) n ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) n ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) n ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■)))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (abs (λ _x_365 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) _x_365 ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) _x_365 ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) _x_365 ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_O) (coq.nat.nat) ■) (abs (λ y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (app (app (y) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_body_O) (coq.nat.nat) ■) (abs (λ y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (app (app (y) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■)) ■) (el-⇒ (el-∀ (coq.nat.eq_times_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (coq.nat.S) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.times_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (coq.nat.S) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (coq.nat.S) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (coq.nat.eq_plus_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (coq.nat.S) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.plus_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (coq.nat.S) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (coq.nat.S) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus_body_S) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.plus_body) ■) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times_body_S) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.times_body) ■) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_match_nat_type_O) (coq.nat.nat) ■) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ k : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) k ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) coq.bool.true ■)) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) y ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.exp.eq_exp_body_O) (a) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) y ■) (app (app (app (app (abs (λ p : El ((coq.nat.nat ⇝ coq.bool.bool)), abs (λ nil : El (coq.nat.nat), abs (λ op : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), abs (λ f0 : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) nil ■) (abs (λ k : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (op) (app (f0) k ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) p ■) nil ■) op ■) f0 ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) p ■) nil ■) op ■) f0 ■) ■) (app (p) k ■) ■)) ■) coq.nat.O ■))))) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat) ■) (app (coq.exp.exp_body) a ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) y ■) (app (app (app (app (abs (λ p : El ((coq.nat.nat ⇝ coq.bool.bool)), abs (λ nil : El (coq.nat.nat), abs (λ op : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), abs (λ f0 : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) nil ■) (abs (λ k : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (op) (app (f0) k ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) p ■) nil ■) op ■) f0 ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) p ■) nil ■) op ■) f0 ■) ■) (app (p) k ■) ■)) ■) coq.nat.O ■))))) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.exp.eq_exp) (a) ■) (coq.nat.O) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) y ■) (app (app (app (app (abs (λ p : El ((coq.nat.nat ⇝ coq.bool.bool)), abs (λ nil : El (coq.nat.nat), abs (λ op : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), abs (λ f0 : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) nil ■) (abs (λ k : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (op) (app (f0) k ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) p ■) nil ■) op ■) f0 ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) p ■) nil ■) op ■) f0 ■) ■) (app (p) k ■) ■)) ■) coq.nat.O ■))))) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_O) (coq.nat.nat) ■) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ k : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) k ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) k ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i ■) ■)) ■) ■) coq.bool.true ■)) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) y ■) ■)) ■) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.eq_bigop_body_O) (coq.nat.nat) ■) (abs (λ y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (y) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.eq_bigop_O) (coq.nat.nat) ■) (abs (λ y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (y) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) coq.nat.O ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) coq.nat.O ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) i ■)) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i0 ■) ■)) ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) x ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) (app (coq.nat.S) i ■) ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i0 ■) ■)) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i0 ■) ■)) ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) x ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) x_1 ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (f) i ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x_1 ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (f) i ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) x_1 ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f2) (coq.nat.nat) ■) (coq.nat.nat) ■) (coq.nat.nat) ■) (coq.nat.times) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.exp.sym_eq_exp) (a) ■) (app (coq.nat.S) i ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) y ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat) ■) (app (coq.exp.exp_body) a ■) ■) (i) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) y ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.exp.sym_eq_exp_body_S) (a) ■) (i) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) y ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) __ ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (f) i ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) (app (app (coq.nat.times) a ■) __ ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (f) i ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (f) i ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (app (app (coq.exp.exp) a ■) i ■) ■) (a) ■) (app (f) i ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (app (f) i ■) ■) (a) ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (app (f) i ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.nat.times) a ■) (app (app (coq.exp.exp) a ■) i ■) ■) ■) (app (f) i ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.exp.exp) a ■) i ■) ■) (a) ■) ■) ■) ■) ■) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (app (app (coq.nat.times) a ■) (app (f) i ■) ■) ■) (app (app (coq.exp.exp) a ■) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (app (coq.nat.times) (app (f) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (app (app (coq.exp.exp) a ■) (app (coq.nat.S) i ■) ■) ■) (app (f) i ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) i ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i0 ■) ■)) ■) ■) (Hind) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) (app (coq.nat.S) i ■) ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) i0 ■) ■)) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bigops.bigop_Strue) (coq.nat.nat) ■) (i) ■) (abs (λ __ : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) (coq.nat.times) ■) (abs (λ __ : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) __ ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool) ■) (coq.bool.true) ■) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) (app (coq.nat.S) i ■) ■) (abs (λ i0 : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i0 : El (coq.nat.nat), app (f) i0 ■)) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bigops.bigop_Strue) (coq.nat.nat) ■) (i) ■) (abs (λ __ : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) (coq.nat.times) ■) (f) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool) ■) (coq.bool.true) ■) ■) ■))) ■) (n) ■)));
symbol exp_pi_bc : Prf (∀ (λ a : El (coq.nat.nat), ∀ (λ b : El (coq.nat.nat), ∀ (λ c : El (coq.nat.nat), ∀ (λ f : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.exp.exp) a ■) (app (app (coq.nat.minus) c ■) b ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) (app (app (coq.nat.minus) c ■) b ■) ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (f) (app (app (coq.nat.plus) i ■) b ■) ■)) ■) ■) ■) (app (app (app (app (app (el-∀ₖ (coq.bigops.bigop) (coq.nat.nat) ■) (app (app (coq.nat.minus) c ■) b ■) ■) (abs (λ i : El (coq.nat.nat), coq.bool.true)) ■) (app (coq.nat.S) coq.nat.O ■) ■) coq.nat.times ■) (abs (λ i : El (coq.nat.nat), app (app (coq.nat.times) a ■) (app (f) (app (app (coq.nat.plus) i ■) b ■) ■) ■)) ■) ■))))) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ c : El (coq.nat.nat),  in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  el-∀ (el-∀ (el-∀ (exp_pi_l) (app (app (coq.nat.minus) c ■) b ■) ■) (a) ■) (abs (λ __ : El (coq.nat.nat), app (f) (app (app (coq.nat.plus) __ ■) b ■) ■)) ■))));
