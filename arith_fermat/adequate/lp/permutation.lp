require open coq.sttfa;
require coq.bool;
require coq.connectives;
require coq.leibniz;
require coq.logic;
require coq.nat;
require coq.relations;
symbol injn : Els (↑ ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ prop)) ≔ `λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' n : El (coq.nat.nat), `∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ (((coq.nat.le) ▪ j) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j;
symbol injn_Sn_n : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((injn) ▪ f) ▪ ((coq.nat.S) ▪ n)) ⇒ ((injn) ▪ f) ▪ n) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ H : Prf (((injn) ▪ f) ▪ ((coq.nat.S) ▪ n)), in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ lei : Prf (((coq.nat.le) ▪ i) ▪ n), in-⇒ (λ lej : Prf (((coq.nat.le) ▪ j) ▪ n), in-⇒ (λ eqf : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (H) (i)) (j)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (i)) (n)) (lei))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (j)) (n)) (lej))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((f) ▪ i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((f) ▪ i))) ((f) ▪ j)) (eqf))))))))));
symbol permut : Els (↑ ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ prop)) ≔ `λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ m) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ m)) ▪ (((injn) ▪ f) ▪ m);
symbol transpose : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ≔ `λ' i : El (coq.nat.nat), `λ' j : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i);
symbol transpose_i_j_i : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ i)) ▪ j) ≔ in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ i) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) ▪ x)) ▪ j)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ i) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ i) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ i) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) ▪ coq.bool.true)))) (((coq.nat.eqb) ▪ i) ▪ i)) (el-∀ (coq.nat.eqb_n_n) (i))));
symbol transpose_i_j_j : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ j)) ▪ i) ≔ in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ (((coq.nat.eqb) ▪ j) ▪ i))) ▪ i)) (in-⇒ (λ Hc : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ x)) ▪ i)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (i)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) (j)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (j)) (i)) (Hc))))) (((coq.nat.eqb) ▪ j) ▪ i)) (Hc)))) (in-⇒ (λ Hc : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ x)) ▪ i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ x)) ▪ coq.bool.false)) ▪ i)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ i)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) (i)) (j)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) ▪ coq.bool.false))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ coq.bool.true)) ▪ coq.bool.false))))))) (((coq.nat.eqb) ▪ j) ▪ j)) (el-∀ (coq.nat.eqb_n_n) (j)))) (((coq.nat.eqb) ▪ j) ▪ i)) (Hc)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ j) ▪ i))));
symbol transpose_i_j_j_i : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ n)) ▪ ((((transpose) ▪ j) ▪ i) ▪ n)) ≔ in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ (((coq.nat.eqb) ▪ n) ▪ j)))) (in-⇒ (λ Hni : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ x)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)))) (in-⇒ (λ Hnj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ coq.bool.true))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ j) ▪ y)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (n)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ j) ▪ x_1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (n)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x_1) ▪ n)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))) (j)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (n)) (j)) (Hnj)))) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (n)) (i)) (Hni)))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj)))) (in-⇒ (λ Hnj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ y) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ coq.bool.false))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ j)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (j))))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ n) ▪ j)))) (((coq.nat.eqb) ▪ n) ▪ i)) (Hni)))) (in-⇒ (λ Hni : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ x)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.false)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.false)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)))) (in-⇒ (λ Hnj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ coq.bool.false)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.false)) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.false)) ▪ coq.bool.true))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ y) ▪ coq.bool.true))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj)))) (in-⇒ (λ Hnj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ coq.bool.false)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.false)) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ y) ▪ coq.bool.false)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.false)) ▪ coq.bool.false))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ n) ▪ coq.bool.false)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ y) ▪ coq.bool.false))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ n) ▪ j)))) (((coq.nat.eqb) ▪ n) ▪ i)) (Hni)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ n) ▪ i)))));
symbol transpose_transpose : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ ((((transpose) ▪ i) ▪ j) ▪ n))) ▪ n) ≔ in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ i))) ▪ n)) (in-⇒ (λ Hni : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.true)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.true)) ▪ j))) ▪ (((coq.nat.eqb) ▪ y) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.true)) ▪ (((coq.nat.eqb) ▪ y) ▪ j))) ▪ (((coq.nat.eqb) ▪ j) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ y) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ (((coq.nat.eqb) ▪ j) ▪ i))) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ (((coq.nat.eqb) ▪ j) ▪ i))) ▪ n)) (in-⇒ (λ Hji : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ x)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (i)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ j) ▪ x)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (j)) (i)) (Hji))) (n)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (n)) (i)) (Hni))))) (((coq.nat.eqb) ▪ j) ▪ i)) (Hji)))) (in-⇒ (λ Hji : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ j) ▪ i)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) ▪ x)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ (((coq.nat.eqb) ▪ j) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ j) ▪ x)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (j)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (n)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (n)) (i)) (Hni))))) (((coq.nat.eqb) ▪ j) ▪ j)) (el-∀ (coq.nat.eqb_n_n) (j))))) (((coq.nat.eqb) ▪ j) ▪ i)) (Hji)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ j) ▪ i))))))) (((coq.nat.eqb) ▪ n) ▪ i)) (Hni)))) (in-⇒ (λ Hni : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ i)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.false)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.false)) ▪ j))) ▪ (((coq.nat.eqb) ▪ y) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ coq.bool.false)) ▪ (((coq.nat.eqb) ▪ y) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ y) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ i))) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ i))) ▪ n)) (in-⇒ (λ Hnj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) ▪ j))) ▪ (((coq.nat.eqb) ▪ y) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.true)) ▪ (((coq.nat.eqb) ▪ y) ▪ j))) ▪ (((coq.nat.eqb) ▪ i) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ y) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) ▪ (((coq.nat.eqb) ▪ i) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ i) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) ▪ x)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ i) ▪ (((coq.nat.eqb) ▪ i) ▪ j))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (n)) (j)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (n)) (j)) (Hnj))))) (((coq.nat.eqb) ▪ i) ▪ i)) (el-∀ (coq.nat.eqb_n_n) (i))))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj)))) (in-⇒ (λ Hnj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ n) ▪ j)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ j))) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) ▪ (((coq.nat.eqb) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) ▪ j))) ▪ (((coq.nat.eqb) ▪ y) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) ▪ (((coq.nat.eqb) ▪ y) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ y) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ (((coq.nat.eqb) ▪ n) ▪ i))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ (((coq.nat.eqb) ▪ n) ▪ j))) ▪ x)) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ x)) ▪ coq.bool.false)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (i)) (n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) ▪ coq.bool.false)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) ▪ coq.bool.false)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ n) ▪ coq.bool.false)) ▪ coq.bool.false))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj))) (((coq.nat.eqb) ▪ n) ▪ i)) (Hni)))))) (((coq.nat.eqb) ▪ n) ▪ j)) (Hnj)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ n) ▪ j))))))) (((coq.nat.eqb) ▪ n) ▪ i)) (Hni)))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ n) ▪ i)))));
symbol injective_transpose : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.relations.injective_) at (coq.nat.nat)) at (coq.nat.nat)) ▪ (((transpose) ▪ i) ▪ j)) ≔ in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-∀ (λ x : El (coq.nat.nat),  in-∀ (λ y : El (coq.nat.nat),  in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ x)) ▪ ((((transpose) ▪ i) ▪ j) ▪ y)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (y)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (y))) (x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((((transpose) ▪ i) ▪ j) ▪ ((((transpose) ▪ i) ▪ j) ▪ x))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ y)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((transpose) ▪ i) ▪ j) ▪ y)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ __)) ▪ y)) (el-∀ (el-∀ (el-∀ (transpose_transpose) (i)) (j)) (y))) ((((transpose) ▪ i) ▪ j) ▪ x)) (auto))) (x)) (el-∀ (el-∀ (el-∀ (transpose_transpose) (i)) (j)) (x))))))));
symbol permut_S_to_permut_transpose : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ m : El (coq.nat.nat), (((permut) ▪ f) ▪ ((coq.nat.S) ▪ m)) ⇒ ((permut) ▪ (`λ' n : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ n))) ▪ m) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((permut) ▪ f) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ m)) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m))) (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m))) (((permut) ▪ (`λ' n : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ n))) ▪ m)) (in-⇒ (λ permf1 : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ m)) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)), in-⇒ (λ permf2 : Prf (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (`∀ x : El (coq.nat.nat), (((coq.nat.le) ▪ x) ▪ m) ⇒ ((coq.nat.le) ▪ ((((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ x))) ▪ m)) (((injn) ▪ (`λ' n : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ n))) ▪ m)) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ leim : Prf (((coq.nat.le) ▪ i) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ i)) ▪ (((coq.nat.eqb) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)))) ▪ x)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((coq.nat.S) ▪ m)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ i)) ▪ (((coq.nat.eqb) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)))) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ y) ▪ m)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m))) (((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ i)) ▪ (((coq.nat.eqb) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)))) ▪ m)) (in-⇒ (λ Hfi : Prf (((coq.nat.lt) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ i)) ▪ x)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((f) ▪ ((coq.nat.S) ▪ m))) ((f) ▪ i)) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ y) ▪ m)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) ((f) ▪ i)) (m)) (Hfi)))) (((coq.nat.eqb) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) ((f) ▪ i)) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_eq) ((f) ▪ i)) ((coq.nat.S) ▪ m)) (Hfi)))))) (in-⇒ (λ Hfi : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ i)) ▪ x)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) ((f) ▪ ((coq.nat.S) ▪ m))) ((f) ▪ i)) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ y) ▪ m)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m))) (((coq.nat.le) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (in-⇒ (λ H : Prf (((coq.nat.lt) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) ((f) ▪ ((coq.nat.S) ▪ m))) (m)) (H)))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.le) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (permf2) (i)) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (i)) (m)) (leim))) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((f) ▪ i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((f) ▪ i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((f) ▪ i))) ((f) ▪ ((f) ▪ i))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.S) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((f) ▪ i))) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.S) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ __)) ▪ ((coq.nat.S) ▪ m))) (H)) ((f) ▪ i)) (Hfi))) ((f) ▪ i)) (Hfi)))) ((coq.nat.S) ▪ m)) (Hfi)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((coq.nat.S) ▪ m))) (((coq.nat.le) ▪ ((coq.nat.S) ▪ m)) ▪ m)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ i) ▪ m)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ m)) ▪ m)) (leim)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ i) ▪ m)) ▪ (((coq.nat.le) ▪ __) ▪ m))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ i) ▪ m))) ((coq.nat.S) ▪ m)) (auto))))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_le) (m)) ((coq.nat.S) ▪ m)) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m)))))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) ((f) ▪ ((coq.nat.S) ▪ m))) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (permf1) ((coq.nat.S) ▪ m)) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m))))))) (((coq.nat.eqb) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_to_eqb_true) ((f) ▪ i)) ((coq.nat.S) ▪ m)) (Hfi))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) ((f) ▪ i)) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (permf1) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (i)) (m)) (leim))))))) (((coq.nat.eqb) ▪ ((f) ▪ i)) ▪ ((f) ▪ ((coq.nat.S) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) ((f) ▪ i)) ((f) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-∀ (coq.connectives.nmk) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ ((coq.nat.S) ▪ m)))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (permf2) (i)) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (i)) (m)) (leim))) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m))) (H))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_eq) (i)) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S) (i)) (m)) (leim))))))))))) (in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ leam : Prf (((coq.nat.le) ▪ a) ▪ m), in-⇒ (λ lebm : Prf (((coq.nat.le) ▪ b) ▪ m), in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ a))) ▪ ((((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ b))), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (permf2) (a)) (b)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (a)) (m)) (leam))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (b)) (m)) (lebm))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (injective_transpose) ((f) ▪ ((coq.nat.S) ▪ m))) ((coq.nat.S) ▪ m)) ((f) ▪ a)) ((f) ▪ b)) (H)))))))))))) (_clearme))));
symbol bijn : Els (↑ ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ prop)) ≔ `λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ m) ▪ n) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ m));
symbol eq_to_bijn : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ g : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((g) ▪ i)) ⇒ (((bijn) ▪ f) ▪ n) ⇒ ((bijn) ▪ g) ▪ n) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ g : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ H : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((g) ▪ i)), in-⇒ (λ bijf : Prf (((bijn) ▪ f) ▪ n), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ p)) ▪ i)))) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.le) ▪ a) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ p)) ▪ i)))) (in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), in-⇒ (λ fa : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ x)) ▪ i))) (a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ a) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ a)) ▪ i)) (lean)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((f) ▪ a)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ a)) ▪ x_1)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) ((f) ▪ a)) ((g) ▪ a)) (el-⇒ (el-∀ (H) (a)) (lean)))) (i)) (fa))))))) (_clearme))))) (el-⇒ (el-∀ (bijf) (i)) (lein)))))))));
symbol bijn_n_Sn : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((bijn) ▪ f) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ n)) ⇒ ((bijn) ▪ f) ▪ ((coq.nat.S) ▪ n)) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ bijf : Prf (((bijn) ▪ f) ▪ n), in-⇒ (λ fS : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ n)), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ n)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ n))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((coq.nat.S) ▪ n))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i)))) (in-⇒ (λ Hi : Prf (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ n)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i)))) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.le) ▪ a) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i)))) (in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), in-⇒ (λ fa : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ x)) ▪ i))) (a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ a) ▪ ((coq.nat.S) ▪ n))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (a)) (n)) (lean))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) ((f) ▪ a)) (fa))))))) (_clearme))))) (el-⇒ (el-∀ (bijf) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (i)) (n)) (Hi)))))) (in-⇒ (λ Hi : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((coq.nat.S) ▪ n)), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ x)) ▪ i))) (i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ n))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ i) ▪ i)) (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ n))) (el-∀ (coq.nat.le_n) (i))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ i) ▪ i)) ▪ (((coq.nat.le) ▪ i) ▪ __))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ i) ▪ i))) ((coq.nat.S) ▪ n)) (Hi)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) ((f) ▪ i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.S) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.S) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ __)) ▪ ((coq.nat.S) ▪ n))) (fS)) (i)) (Hi))) (i)) (Hi))))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (i)) ((coq.nat.S) ▪ n)) (lein))))))));
symbol bijn_fg : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ g : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((bijn) ▪ f) ▪ n) ⇒ (((bijn) ▪ g) ▪ n) ⇒ ((bijn) ▪ (`λ' p : El (coq.nat.nat), (f) ▪ ((g) ▪ p))) ▪ n) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ g : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ bijf : Prf (((bijn) ▪ f) ▪ n), in-⇒ (λ bijg : Prf (((bijn) ▪ g) ▪ n), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((g) ▪ p))) ▪ i)))) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.le) ▪ a) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((g) ▪ p))) ▪ i)))) (in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), in-⇒ (λ ga : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ p)) ▪ a))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((g) ▪ p))) ▪ i)))) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ b) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ b)) ▪ a)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.le) ▪ b) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ b)) ▪ a)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((g) ▪ p))) ▪ i)))) (in-⇒ (λ lebn : Prf (((coq.nat.le) ▪ b) ▪ n), in-⇒ (λ gb : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((g) ▪ b)) ▪ a), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((g) ▪ x))) ▪ i))) (b)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ b) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((g) ▪ b))) ▪ i)) (lebn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ __)) ▪ i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) ((f) ▪ a)) (ga))) ((g) ▪ b)) (gb))))))) (_clearme0))))) (el-⇒ (el-∀ (bijg) (a)) (lean)))))) (_clearme))))) (el-⇒ (el-∀ (bijf) (i)) (lein)))))))));
symbol bijn_transpose : Prf (`∀ n : El (coq.nat.nat), `∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ (((coq.nat.le) ▪ j) ▪ n) ⇒ ((bijn) ▪ (((transpose) ▪ i) ▪ j)) ▪ n) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), in-⇒ (λ lejn : Prf (((coq.nat.le) ▪ j) ▪ n), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ i)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ i)) ▪ coq.bool.false)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ p)) ▪ a)))) (in-⇒ (λ Hi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ i)) ▪ coq.bool.true), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ x)) ▪ a))) (j)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ j) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ j)) ▪ a)) (lejn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (i)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (a)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (a)) (i)) (Hi)))) ((((transpose) ▪ i) ▪ j) ▪ j)) (el-∀ (el-∀ (transpose_i_j_j) (i)) (j))))))) (in-⇒ (λ Hi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ i)) ▪ coq.bool.false), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ j)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ j)) ▪ coq.bool.false)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ p)) ▪ a)))) (in-⇒ (λ Hj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ j)) ▪ coq.bool.true), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ x)) ▪ a))) (i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ i) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ i)) ▪ a)) (lein)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (j)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (a)) (j)) (el-⇒ (el-∀ (el-∀ (coq.nat.eqb_true_to_eq) (a)) (j)) (Hj)))) ((((transpose) ▪ i) ▪ j) ▪ i)) (el-∀ (el-∀ (transpose_i_j_i) (i)) (j))))))) (in-⇒ (λ Hj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.nat.eqb) ▪ a) ▪ j)) ▪ coq.bool.false), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ x)) ▪ a))) (a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ a) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((transpose) ▪ i) ▪ j) ▪ a)) ▪ a)) (lean)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ a) ▪ (((coq.nat.eqb) ▪ a) ▪ j))) ▪ x)) ▪ a)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ a) ▪ x)) ▪ coq.bool.false)) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (i)) (a)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ a) ▪ coq.bool.false)) ▪ coq.bool.false)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (j)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ a) ▪ coq.bool.false)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ a) ▪ coq.bool.false)) ▪ coq.bool.false)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ j) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ i) ▪ a) ▪ coq.bool.false)) ▪ coq.bool.false))))) (((coq.nat.eqb) ▪ a) ▪ j)) (Hj))) (((coq.nat.eqb) ▪ a) ▪ i)) (Hi)))))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ a) ▪ j))))) (el-∀ (coq.bool.true_or_false) (((coq.nat.eqb) ▪ a) ▪ i)))))))));
symbol permut_to_bijn : Prf (`∀ n : El (coq.nat.nat), `∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), (((permut) ▪ f) ▪ n) ⇒ ((bijn) ▪ f) ▪ n) ≔ in-∀ (λ n : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), (((permut) ▪ f) ▪ _x_365) ⇒ ((bijn) ▪ f) ▪ _x_365)) (in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ coq.nat.O)) ▪ (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ (((coq.nat.le) ▪ j) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ coq.nat.O)) (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ (((coq.nat.le) ▪ j) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (`∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ m) ▪ coq.nat.O) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ coq.nat.O)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ m)))) (in-⇒ (λ H : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ coq.nat.O), in-⇒ (λ H1 : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ (((coq.nat.le) ▪ j) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j), in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ lem0 : Prf (((coq.nat.le) ▪ m) ▪ coq.nat.O), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ x) ▪ coq.nat.O)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ x)) ▪ m))) (coq.nat.O)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.le) ▪ coq.nat.O) ▪ coq.nat.O)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ coq.nat.O)) ▪ m)) (el-∀ (coq.nat.le_O_n) (coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (coq.nat.le_n_O_elim) (m)) (lem0)) (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (coq.nat.O)) ((f) ▪ coq.nat.O)) (el-⇒ (el-∀ (coq.nat.le_n_O_to_eq) ((f) ▪ coq.nat.O)) (el-⇒ (el-∀ (H) (coq.nat.O)) (el-∀ (coq.nat.le_O_n) (coq.nat.O))))))))))))) (_clearme))))) (in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), (((permut) ▪ f) ▪ m) ⇒ ((bijn) ▪ f) ▪ m), in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ permf : Prf (((permut) ▪ f) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (eq_to_bijn) (`λ' p : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ p)))) (f)) ((coq.nat.S) ▪ m)) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lei : Prf (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ m)), el-∀ (el-∀ (el-∀ (transpose_transpose) ((f) ▪ ((coq.nat.S) ▪ m))) ((coq.nat.S) ▪ m)) ((f) ▪ i))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (bijn_fg) (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m))) (`λ' __ : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ __))) ((coq.nat.S) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ m)) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m))) (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m))) (((bijn) ▪ (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m))) (in-⇒ (λ lef : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ m)) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ ((coq.nat.S) ▪ m)), in-⇒ (λ __ : Prf (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (bijn_transpose) ((coq.nat.S) ▪ m)) ((f) ▪ ((coq.nat.S) ▪ m))) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (lef) ((coq.nat.S) ▪ m)) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m)))) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m)))))) (permf))) (el-⇒ (el-⇒ (el-∀ (el-∀ (bijn_n_Sn) (`λ' __ : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ __))) (m)) (el-⇒ (el-∀ (Hind) (`λ' __ : El (coq.nat.nat), (((transpose) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)) ▪ ((f) ▪ __))) (el-⇒ (el-∀ (el-∀ (permut_S_to_permut_transpose) (f)) (m)) (permf)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ (((coq.nat.eqb) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) ▪ x)) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) ((coq.nat.S) ▪ m)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ (((coq.nat.eqb) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ (((coq.nat.eqb) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ (((coq.nat.eqb) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) ▪ coq.bool.true)))) (((coq.nat.eqb) ▪ ((f) ▪ ((coq.nat.S) ▪ m))) ▪ ((f) ▪ ((coq.nat.S) ▪ m)))) (el-∀ (coq.nat.eqb_n_n) ((f) ▪ ((coq.nat.S) ▪ m)))))))))))) (n));
constant symbol invert_permut : Els (↑ (coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol invert_permut_body : Els (↑ (coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_invert_permut : Prf (`∀ n : El (coq.nat.nat), (((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((invert_permut) ▪ n)) ▪ ((((coq.nat.filter_nat_type) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ invert_permut_body) ▪ n));
symbol eq_invert_permut : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((invert_permut) ▪ n)) ▪ ((((coq.nat.filter_nat_type) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ invert_permut_body) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((invert_permut) ▪ n)) ((((coq.nat.filter_nat_type) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ invert_permut_body) ▪ n)) (el-∀ (axiom_invert_permut) (n)));
symbol sym_eq_invert_permut : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((((coq.nat.filter_nat_type) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ invert_permut_body) ▪ n)) ▪ ((invert_permut) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((invert_permut) ▪ n)) ((((coq.nat.filter_nat_type) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ invert_permut_body) ▪ n)) (el-∀ (eq_invert_permut) (n)));
constant symbol axiom_invert_permut_body_O : Prf ((((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((invert_permut_body) ▪ coq.nat.O)) ▪ (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ coq.nat.O))));
symbol eq_invert_permut_body_O : Prf ((((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((invert_permut_body) ▪ coq.nat.O)) ▪ (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ coq.nat.O)))) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((invert_permut_body) ▪ coq.nat.O)) (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ coq.nat.O)))) (axiom_invert_permut_body_O);
symbol sym_eq_invert_permut_body_O : Prf ((((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ coq.nat.O)))) ▪ ((invert_permut_body) ▪ coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((invert_permut_body) ▪ coq.nat.O)) (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ coq.nat.O)))) (eq_invert_permut_body_O);
constant symbol axiom_invert_permut_body_S : Prf (`∀ n : El (coq.nat.nat), (((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((invert_permut_body) ▪ ((coq.nat.S) ▪ n))) ▪ (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m)) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ ((coq.nat.S) ▪ n)))));
symbol eq_invert_permut_body_S : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((invert_permut_body) ▪ ((coq.nat.S) ▪ n))) ▪ (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m)) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ ((coq.nat.S) ▪ n))))) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((invert_permut_body) ▪ ((coq.nat.S) ▪ n))) (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m)) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ ((coq.nat.S) ▪ n))))) (el-∀ (axiom_invert_permut_body_S) (n)));
symbol sym_eq_invert_permut_body_S : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m)) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ ((coq.nat.S) ▪ n))))) ▪ ((invert_permut_body) ▪ ((coq.nat.S) ▪ n))) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((invert_permut_body) ▪ ((coq.nat.S) ▪ n))) (`λ' f : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m)) ▪ (((coq.nat.eqb) ▪ m) ▪ ((f) ▪ ((coq.nat.S) ▪ n))))) (el-∀ (eq_invert_permut_body_S) (n)));
symbol invert_permut_f : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ m) ▪ n) ⇒ (((injn) ▪ f) ▪ n) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ ((f) ▪ m))) ▪ m) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ m) ▪ n), el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.le_ind) (m)) (`λ' x_417 : El (coq.nat.nat), (((injn) ▪ f) ▪ x_417) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ x_417) ▪ f) ▪ ((f) ▪ m))) ▪ m)) (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.match_nat_prop) (`λ' __ : El (coq.nat.nat), (((injn) ▪ f) ▪ __) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ __) ▪ f) ▪ ((f) ▪ __))) ▪ __)) (el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut) (coq.nat.O)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((injn) ▪ f) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ coq.nat.O))) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) (invert_permut_body)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((injn) ▪ f) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ coq.nat.O))) ▪ coq.nat.O)) (el-⇒ (el-∀ (sym_eq_invert_permut_body_O) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((injn) ▪ f) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ coq.nat.O))) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ (((coq.nat.le) ▪ j) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ x)) ▪ coq.nat.O)) (in-⇒ (λ auto : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ coq.nat.O) ⇒ (((coq.nat.le) ▪ j) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j), el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) (coq.nat.O)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ coq.bool.true))))) (((coq.nat.eqb) ▪ ((f) ▪ coq.nat.O)) ▪ ((f) ▪ coq.nat.O))) (el-∀ (coq.nat.eqb_n_n) ((f) ▪ coq.nat.O))))))) (in-∀ (λ a : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut) ((coq.nat.S) ▪ a)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((injn) ▪ f) ▪ ((coq.nat.S) ▪ a)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) ▪ ((coq.nat.S) ▪ a))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) (invert_permut_body)) (a)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((injn) ▪ f) ▪ ((coq.nat.S) ▪ a)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) ▪ ((coq.nat.S) ▪ a))) (el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut_body_S) (a)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((injn) ▪ f) ▪ ((coq.nat.S) ▪ a)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) ▪ ((coq.nat.S) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ a)) ⇒ (((coq.nat.le) ▪ j) ▪ ((coq.nat.S) ▪ a)) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ a)) ▪ ((((invert_permut) ▪ a) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) ▪ x)) ▪ ((coq.nat.S) ▪ a))) (in-⇒ (λ auto : Prf (`∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.S) ▪ a)) ⇒ (((coq.nat.le) ▪ j) ▪ ((coq.nat.S) ▪ a)) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ i)) ▪ ((f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j), el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) ((coq.nat.S) ▪ a)) ((((invert_permut) ▪ a) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ a)) ▪ ((((invert_permut) ▪ a) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ a)) ▪ ((((invert_permut) ▪ a) ▪ f) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) ▪ coq.bool.true))))) (((coq.nat.eqb) ▪ ((f) ▪ ((coq.nat.S) ▪ a))) ▪ ((f) ▪ ((coq.nat.S) ▪ a)))) (el-∀ (coq.nat.eqb_n_n) ((f) ▪ ((coq.nat.S) ▪ a))))))))) (m))) (in-∀ (λ m0 : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut) ((coq.nat.S) ▪ m0)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ m) ▪ m0) ⇒ ((((injn) ▪ f) ▪ m0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ m0) ▪ f) ▪ ((f) ▪ m))) ▪ m) ⇒ (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m0)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ m))) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) (invert_permut_body)) (m0)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ m) ▪ m0) ⇒ ((((injn) ▪ f) ▪ m0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ m0) ▪ f) ▪ ((f) ▪ m))) ▪ m) ⇒ (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m0)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ m))) ▪ m)) (el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut_body_S) (m0)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ m) ▪ m0) ⇒ ((((injn) ▪ f) ▪ m0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ m0) ▪ f) ▪ ((f) ▪ m))) ▪ m) ⇒ (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m0)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ f) ▪ ((f) ▪ m))) ▪ m)) (in-⇒ (λ lem : Prf (((coq.nat.le) ▪ m) ▪ m0), in-⇒ (λ H : Prf ((((injn) ▪ f) ▪ m0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ m0) ▪ f) ▪ ((f) ▪ m))) ▪ m), in-⇒ (λ H1 : Prf (((injn) ▪ f) ▪ ((coq.nat.S) ▪ m0)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ m0)) ▪ ((((invert_permut) ▪ m0) ▪ f) ▪ ((f) ▪ m))) ▪ x)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((coq.nat.S) ▪ m0)) ((((invert_permut) ▪ m0) ▪ f) ▪ ((f) ▪ m))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ m)) (el-⇒ (H) (el-⇒ (el-∀ (el-∀ (injn_Sn_n) (f)) (m0)) (H1))))) (((coq.nat.eqb) ▪ ((f) ▪ m)) ▪ ((f) ▪ ((coq.nat.S) ▪ m0)))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) ((f) ▪ m)) ((f) ▪ ((coq.nat.S) ▪ m0))) (el-⇒ (el-∀ (coq.connectives.nmk) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ m)) ▪ ((f) ▪ ((coq.nat.S) ▪ m0)))) (in-⇒ (λ eqf : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ m)) ▪ ((f) ▪ ((coq.nat.S) ▪ m0))), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ ((coq.nat.S) ▪ m0))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (H1) (m)) ((coq.nat.S) ▪ m0)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) (m)) (m0)) (lem))) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ m0))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((f) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ m)) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((f) ▪ m))) ((f) ▪ ((coq.nat.S) ▪ m0))) (eqf)))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_eq) (m)) ((coq.nat.S) ▪ m0)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S) (m)) (m0)) (lem)))))))))))))))) (n)) (lenm)))));
symbol let_clause_1063 : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((permut) ▪ f) ▪ n) ⇒ `∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ (((coq.nat.le) ▪ j) ▪ n) ⇒ `∀ a : El (coq.nat.nat), (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) ⇒ (((coq.nat.le) ▪ a) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i) ⇒ `∀ b : El (coq.nat.nat), (((coq.connectives.And) ▪ (((coq.nat.le) ▪ b) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j)) ⇒ (((coq.nat.le) ▪ b) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j) ⇒ (`∀ i0 : El (coq.nat.nat), (((coq.nat.le) ▪ i0) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i0)) ▪ n) ⇒ (((injn) ▪ f) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ b) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ j) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ permf : Prf (((permut) ▪ f) ▪ n), in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), in-⇒ (λ lejn : Prf (((coq.nat.le) ▪ j) ▪ n), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)), in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), in-⇒ (λ fa : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i), in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ b) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j)), in-⇒ (λ lebn : Prf (((coq.nat.le) ▪ b) ▪ n), in-⇒ (λ fb : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j), in-⇒ (λ __ : Prf (`∀ i0 : El (coq.nat.nat), (((coq.nat.le) ▪ i0) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i0)) ▪ n), in-⇒ (λ injf : Prf (((injn) ▪ f) ▪ n), in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ b), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (b)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ __1)) ▪ j)) (fb)) (a)) (auto)))))))))))))))))));
symbol let_clause_1068 : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((permut) ▪ f) ▪ n) ⇒ `∀ i : El (coq.nat.nat), `∀ j : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ (((coq.nat.le) ▪ j) ▪ n) ⇒ `∀ a : El (coq.nat.nat), (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) ⇒ (((coq.nat.le) ▪ a) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i) ⇒ `∀ b : El (coq.nat.nat), (((coq.connectives.And) ▪ (((coq.nat.le) ▪ b) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j)) ⇒ (((coq.nat.le) ▪ b) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j) ⇒ (`∀ i0 : El (coq.nat.nat), (((coq.nat.le) ▪ i0) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i0)) ▪ n) ⇒ (((injn) ▪ f) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ b) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ permf : Prf (((permut) ▪ f) ▪ n), in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), in-⇒ (λ lejn : Prf (((coq.nat.le) ▪ j) ▪ n), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)), in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), in-⇒ (λ fa : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i), in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ b) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j)), in-⇒ (λ lebn : Prf (((coq.nat.le) ▪ b) ▪ n), in-⇒ (λ fb : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j), in-⇒ (λ __ : Prf (`∀ i0 : El (coq.nat.nat), (((coq.nat.le) ▪ i0) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i0)) ▪ n), in-⇒ (λ injf : Prf (((injn) ▪ f) ▪ n), in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ b), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (j)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ __1)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1063) (f)) (n)) (permf)) (i)) (j)) (lein)) (lejn)) (a)) (_clearme)) (lean)) (fa)) (b)) (_clearme0)) (lebn)) (fb)) (__)) (injf)) (auto))) (i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((f) ▪ a)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __1) ▪ i)) (fa)) (j)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1063) (f)) (n)) (permf)) (i)) (j)) (lein)) (lejn)) (a)) (_clearme)) (lean)) (fa)) (b)) (_clearme0)) (lebn)) (fb)) (__)) (injf)) (auto)))))))))))))))))))));
symbol injective_invert_permut : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((permut) ▪ f) ▪ n) ⇒ ((injn) ▪ (((invert_permut) ▪ n) ▪ f)) ▪ n) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ permf : Prf (((permut) ▪ f) ▪ n), in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), in-⇒ (λ lejn : Prf (((coq.nat.le) ▪ j) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ i))) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ a) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.le) ▪ a) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-⇒ (λ lean : Prf (((coq.nat.le) ▪ a) ▪ n), in-⇒ (λ fa : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ i), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' p : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.nat.le) ▪ p) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ p)) ▪ j))) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.And) ▪ (((coq.nat.le) ▪ b) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.le) ▪ b) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-⇒ (λ lebn : Prf (((coq.nat.le) ▪ b) ▪ n), in-⇒ (λ fb : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ b)) ▪ j), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i1 : El (coq.nat.nat), (((coq.nat.le) ▪ i1) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i1)) ▪ n)) (((injn) ▪ f) ▪ n)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-⇒ (λ __ : Prf (`∀ i0 : El (coq.nat.nat), (((coq.nat.le) ▪ i0) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i0)) ▪ n), in-⇒ (λ injf : Prf (((injn) ▪ f) ▪ n), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((f) ▪ a)) (`λ' x_1 : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ x_1)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ j)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ x_1) ▪ j)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((f) ▪ b)) (`λ' x_1 : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ ((f) ▪ a))) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ x_1)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ x_1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (a)) (`λ' x : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ ((f) ▪ b))) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ ((f) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (b)) (`λ' x : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ x) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ a)) ▪ ((f) ▪ b))) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ b), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __1) ▪ ((f) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ ((f) ▪ __1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ __1)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) ((f) ▪ a)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1068) (f)) (n)) (permf)) (i)) (j)) (lein)) (lejn)) (a)) (_clearme)) (lean)) (fa)) (b)) (_clearme0)) (lebn)) (fb)) (__)) (injf)) (auto)))) (b)) (auto))) ((f) ▪ a)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1068) (f)) (n)) (permf)) (i)) (j)) (lein)) (lejn)) (a)) (_clearme)) (lean)) (fa)) (b)) (_clearme0)) (lebn)) (fb)) (__)) (injf)) (auto))))) ((((invert_permut) ▪ n) ▪ f) ▪ ((f) ▪ b))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (invert_permut_f) (f)) (n)) (b)) (lebn)) (injf)))) ((((invert_permut) ▪ n) ▪ f) ▪ ((f) ▪ a))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (invert_permut_f) (f)) (n)) (a)) (lean)) (injf)))) (j)) (fb))) (i)) (fa))))) (permf))))) (_clearme0))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (permut_to_bijn) (n)) (f)) (permf)) (j)) (lejn)))))) (_clearme))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (permut_to_bijn) (n)) (f)) (permf)) (i)) (lein)))))))));
symbol permut_invert_permut : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((permut) ▪ f) ▪ n) ⇒ ((permut) ▪ (((invert_permut) ▪ n) ▪ f)) ▪ n) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ permf : Prf (((permut) ▪ f) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (`∀ x : El (coq.nat.nat), (((coq.nat.le) ▪ x) ▪ n) ⇒ ((coq.nat.le) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ x)) ▪ n)) (((injn) ▪ (((invert_permut) ▪ n) ▪ f)) ▪ n)) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lein : Prf (((coq.nat.le) ▪ i) ▪ n), el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), ((coq.nat.le) ▪ ((((invert_permut) ▪ _x_365) ▪ f) ▪ i)) ▪ _x_365)) (el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut) (coq.nat.O)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ (((y) ▪ f) ▪ i)) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) (invert_permut_body)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ (((y) ▪ f) ▪ i)) ▪ coq.nat.O)) (el-⇒ (el-∀ (sym_eq_invert_permut_body_O) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ (((y) ▪ f) ▪ i)) ▪ coq.nat.O)) (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.bool.match_bool_prop) (`λ' __ : El (coq.bool.bool), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ __)) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) (coq.nat.O)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ coq.bool.true)) ▪ y)) (el-∀ (coq.nat.le_n) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ coq.bool.true)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) (coq.nat.O)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ coq.bool.false)) ▪ y)) (el-∀ (coq.nat.le_n) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ coq.nat.O) ▪ coq.bool.false)))) (((coq.nat.eqb) ▪ i) ▪ ((f) ▪ coq.nat.O))))))) (in-∀ (λ n1 : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut) ((coq.nat.S) ▪ n1)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ n1) ⇒ ((coq.nat.le) ▪ (((y) ▪ f) ▪ i)) ▪ ((coq.nat.S) ▪ n1))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) ((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)) (invert_permut_body)) (n1)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ n1) ⇒ ((coq.nat.le) ▪ (((y) ▪ f) ▪ i)) ▪ ((coq.nat.S) ▪ n1))) (el-⇒ (el-∀ (el-∀ (sym_eq_invert_permut_body_S) (n1)) (`λ' y : El (((coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ n1) ⇒ ((coq.nat.le) ▪ (((y) ▪ f) ▪ i)) ▪ ((coq.nat.S) ▪ n1))) (in-⇒ (λ Hind : Prf (((coq.nat.le) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ n1), el-∀ (el-⇒ (el-⇒ (el-∀ (coq.bool.match_bool_prop) (`λ' __ : El (coq.bool.bool), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n1)) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ __)) ▪ ((coq.nat.S) ▪ n1))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) ((coq.nat.S) ▪ n1)) ((((invert_permut) ▪ n1) ▪ f) ▪ i)) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n1)) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ coq.bool.true)) ▪ y)) (el-∀ (coq.nat.le_n) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n1)) ▪ ((((invert_permut) ▪ n1) ▪ f) ▪ i)) ▪ coq.bool.true)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((coq.nat.S) ▪ n1)) ((((invert_permut) ▪ n1) ▪ f) ▪ i)) (`λ' y : El (coq.nat.nat), ((coq.nat.le) ▪ y) ▪ ((coq.nat.S) ▪ n1))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) ((((invert_permut) ▪ n1) ▪ f) ▪ i)) (n1)) (Hind)))) (((coq.nat.eqb) ▪ i) ▪ ((f) ▪ ((coq.nat.S) ▪ n1)))))))))) (n))))) (el-⇒ (el-∀ (el-∀ (injective_invert_permut) (f)) (n)) (permf)))));
symbol f_invert_permut : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ m) ▪ n) ⇒ (((permut) ▪ f) ▪ n) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m))) ▪ m) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ lemn : Prf (((coq.nat.le) ▪ m) ▪ n), in-⇒ (λ permf : Prf (((permut) ▪ f) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ ((coq.nat.le) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ n)) (((injn) ▪ (((invert_permut) ▪ n) ▪ f)) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m))) ▪ m)) (in-⇒ (λ Hle : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ ((coq.nat.le) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ i)) ▪ n), in-⇒ (λ Hinj : Prf (((injn) ▪ (((invert_permut) ▪ n) ▪ f)) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ n)) (((injn) ▪ f) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((f) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m))) ▪ m)) (in-⇒ (λ lef : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ n) ⇒ ((coq.nat.le) ▪ ((f) ▪ i)) ▪ n), in-⇒ (λ injf : Prf (((injn) ▪ f) ▪ n), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (injective_invert_permut) (f)) (n)) (permf)) ((f) ▪ ((((invert_permut) ▪ n) ▪ f) ▪ m))) (m)) (el-⇒ (el-∀ (lef) ((((invert_permut) ▪ n) ▪ f) ▪ m)) (el-⇒ (el-∀ (Hle) (m)) (lemn)))) (lemn)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (invert_permut_f) (f)) (n)) ((((invert_permut) ▪ n) ▪ f) ▪ m)) (el-⇒ (el-∀ (Hle) (m)) (lemn))) (injf)))))) (permf))))) (el-⇒ (el-∀ (el-∀ (permut_invert_permut) (f)) (n)) (permf)))))));
