require open coq.sttfa;
require coq.bigops;
require coq.bool;
require coq.cong;
require coq.connectives;
require coq.div_mod;
require coq.exp;
require coq.fact;
require coq.gcd;
require coq.logic;
require coq.nat;
require coq.permutation;
require coq.primes;
require coq.sigma_pi;
symbol prime_to_not_divides_fact : Prf (`∀ p : El (coq.nat.nat), ((coq.primes.prime) ▪ p) ⇒ `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ n) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-⇒ (λ primep : Prf ((coq.primes.prime) ▪ p), in-∀ (λ n : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), (((coq.nat.lt) ▪ _x_365) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ _x_365)))) (el-⇒ (el-∀ (el-∀ (coq.fact.sym_eq_fact) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ y))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat)) (coq.fact.fact_body)) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ y))) (el-⇒ (el-∀ (coq.fact.sym_eq_fact_body_O) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ y))) (in-⇒ (λ __ : Prf (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ p), el-⇒ (el-∀ (coq.connectives.nmk) (((coq.primes.divides) ▪ p) ▪ ((coq.nat.S) ▪ coq.nat.O))) (in-⇒ (λ divp : Prf (((coq.primes.divides) ▪ p) ▪ ((coq.nat.S) ▪ coq.nat.O)), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ p) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_le) (p)) ((coq.nat.S) ▪ coq.nat.O)) (el-∀ (coq.nat.lt_O_S) (coq.nat.O))) (divp))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_le) ((coq.nat.S) ▪ coq.nat.O)) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_SO) (p)) (primep))))))))))) (in-∀ (λ n1 : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.fact.sym_eq_fact) ((coq.nat.S) ▪ n1)) (`λ' y : El (coq.nat.nat), ((((coq.nat.lt) ▪ n1) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1))) ⇒ (((coq.nat.lt) ▪ ((coq.nat.S) ▪ n1)) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ y))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat)) (coq.fact.fact_body)) (n1)) (`λ' y : El (coq.nat.nat), ((((coq.nat.lt) ▪ n1) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1))) ⇒ (((coq.nat.lt) ▪ ((coq.nat.S) ▪ n1)) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ y))) (el-⇒ (el-∀ (el-∀ (coq.fact.sym_eq_fact_body_S) (n1)) (`λ' y : El (coq.nat.nat), ((((coq.nat.lt) ▪ n1) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1))) ⇒ (((coq.nat.lt) ▪ ((coq.nat.S) ▪ n1)) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ y))) (in-⇒ (λ Hind : Prf ((((coq.nat.lt) ▪ n1) ▪ p) ⇒ (coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1))), in-⇒ (λ ltn1 : Prf (((coq.nat.lt) ▪ ((coq.nat.S) ▪ n1)) ▪ p), el-⇒ (el-∀ (coq.connectives.nmk) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ ((coq.fact.fact) ▪ n1)) ▪ ((coq.nat.S) ▪ n1)))) (in-⇒ (λ Hdiv : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ ((coq.fact.fact) ▪ n1)) ▪ ((coq.nat.S) ▪ n1))), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1))) (((coq.primes.divides) ▪ p) ▪ ((coq.nat.S) ▪ n1))) (coq.connectives.False)) (in-⇒ (λ Hdiv0 : Prf (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1)), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ n1))) (Hdiv0)) (el-⇒ (Hind) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) ((coq.nat.S) ▪ n1)) (p)) (ltn1)))))) (in-⇒ (λ Hdiv0 : Prf (((coq.primes.divides) ▪ p) ▪ ((coq.nat.S) ▪ n1)), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ p) ▪ ((coq.nat.S) ▪ n1))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_le) (p)) ((coq.nat.S) ▪ n1)) (el-∀ (coq.nat.lt_O_S) (n1))) (Hdiv0))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_le) ((coq.nat.S) ▪ n1)) (p)) (ltn1))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.gcd.divides_times_to_divides) (p)) ((coq.fact.fact) ▪ n1)) ((coq.nat.S) ▪ n1)) (primep)) (Hdiv)))))))))))) (n))));
symbol permut_mod : Prf (`∀ p : El (coq.nat.nat), `∀ a : El (coq.nat.nat), ((coq.primes.prime) ▪ p) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ a)) ⇒ ((coq.permutation.permut) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ▪ ((coq.nat.pred) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ primep : Prf ((coq.primes.prime) ▪ p), in-⇒ (λ ndiv : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ a)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (`∀ x : El (coq.nat.nat), (((coq.nat.le) ▪ x) ▪ ((coq.nat.pred) ▪ p)) ⇒ ((coq.nat.le) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ x)) ▪ p)) ▪ ((coq.nat.pred) ▪ p))) (((coq.permutation.injn) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ▪ ((coq.nat.pred) ▪ p))) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lei : Prf (((coq.nat.le) ▪ i) ▪ ((coq.nat.pred) ▪ p)), el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) ((coq.nat.S) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (p)) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (((coq.nat.times) ▪ a) ▪ i)) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (p)) (`λ' x : El (coq.nat.nat), ((coq.nat.le) ▪ p) ▪ x)) (el-∀ (coq.nat.le_n) (p))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (el-⇒ (el-∀ (coq.nat.S_pred) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))))))))) (in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ lei : Prf (((coq.nat.le) ▪ i) ▪ ((coq.nat.pred) ▪ p)), in-⇒ (λ lej : Prf (((coq.nat.le) ▪ j) ▪ ((coq.nat.pred) ▪ p)), in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ j)) ▪ p)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ i) ▪ j)) ((coq.connectives.Not) ▪ (((coq.nat.lt) ▪ i) ▪ j))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-⇒ (λ ltij : Prf (((coq.nat.lt) ▪ i) ▪ j), el-⇒ (el-∀ (coq.connectives.falsity) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.lt) ▪ (((coq.nat.minus) ▪ j) ▪ i)) ▪ p)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (`λ' x_1 : El (coq.nat.nat), ((coq.nat.lt) ▪ (((coq.nat.minus) ▪ j) ▪ i)) ▪ x_1)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S) (((coq.nat.minus) ▪ j) ▪ i)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.le_plus_to_minus) (j)) (i)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (j)) ((coq.nat.pred) ▪ p)) (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ p)) ▪ i)) (lej)) (el-∀ (el-∀ (coq.nat.le_plus_n_r) (i)) ((coq.nat.pred) ▪ p)))))) (p)) (el-⇒ (el-∀ (coq.nat.S_pred) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) (p)) (((coq.nat.minus) ▪ j) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_le) (p)) (((coq.nat.minus) ▪ j) ▪ i)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_plus_to_minus_r) (coq.nat.O)) (i)) (j)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ i))) ▪ j)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ i))) ▪ j)) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ i))) ▪ j)) (ltij)))))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ p) ▪ a)) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ j) ▪ i))) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ j) ▪ i))) (in-⇒ (λ Hdiv : Prf (((coq.primes.divides) ▪ p) ▪ a), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ j) ▪ i))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ p) ▪ a)) (Hdiv)) (ndiv))))) (in-⇒ (λ auto : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ j) ▪ i)), auto))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.gcd.divides_times_to_divides) (p)) (a)) (((coq.nat.minus) ▪ j) ▪ i)) (primep)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ j)) ▪ (((coq.nat.times) ▪ a) ▪ i))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ x)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.eq_mod_to_divides) (((coq.nat.times) ▪ a) ▪ j)) (((coq.nat.times) ▪ a) ▪ i)) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ j)) ▪ p)) (H)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.minus) ▪ j) ▪ i))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (a)) (j)) (i))))))))))) (in-⇒ (λ Hij : Prf ((coq.connectives.Not) ▪ (((coq.nat.lt) ▪ i) ▪ j)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ j) ▪ i)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ j) ▪ i)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (in-⇒ (λ Hij0 : Prf (((coq.nat.lt) ▪ j) ▪ i), el-⇒ (el-∀ (coq.connectives.falsity) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ j)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.lt) ▪ (((coq.nat.minus) ▪ i) ▪ j)) ▪ p)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (`λ' x_1 : El (coq.nat.nat), ((coq.nat.lt) ▪ (((coq.nat.minus) ▪ i) ▪ j)) ▪ x_1)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S) (((coq.nat.minus) ▪ i) ▪ j)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.le_plus_to_minus) (i)) (j)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (i)) ((coq.nat.pred) ▪ p)) (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ p)) ▪ j)) (lei)) (el-∀ (el-∀ (coq.nat.le_plus_n_r) (j)) ((coq.nat.pred) ▪ p)))))) (p)) (el-⇒ (el-∀ (coq.nat.S_pred) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) (p)) (((coq.nat.minus) ▪ i) ▪ j)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_le) (p)) (((coq.nat.minus) ▪ i) ▪ j)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_plus_to_minus_r) (coq.nat.O)) (j)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ j))) ▪ i)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ j))) ▪ i)) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ j))) ▪ i)) (Hij0)))))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ p) ▪ a)) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ i) ▪ j))) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ i) ▪ j))) (in-⇒ (λ Hdiv : Prf (((coq.primes.divides) ▪ p) ▪ a), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ i) ▪ j))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ p) ▪ a)) (Hdiv)) (ndiv))))) (in-⇒ (λ auto : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ i) ▪ j)), auto))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.gcd.divides_times_to_divides) (p)) (a)) (((coq.nat.minus) ▪ i) ▪ j)) (primep)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ (((coq.nat.times) ▪ a) ▪ j))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ x)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.eq_mod_to_divides) (((coq.nat.times) ▪ a) ▪ i)) (((coq.nat.times) ▪ a) ▪ j)) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ j)) ▪ p)) (H)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.minus) ▪ i) ▪ j))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (a)) (i)) (j))))))))))) (in-⇒ (λ Hij0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ j) ▪ i), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) (j)) (Hij0)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (j)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_lt_to_le) (i)) (j)) (Hij)))))) (el-∀ (el-∀ (coq.nat.decidable_lt) (i)) (j))))))))))));
symbol eq_fact_pi_p : Prf (`∀ n : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ n)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ n)) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ≔ in-∀ (λ n : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ _x_365)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ _x_365)) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) ((coq.nat.S) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus_body_S) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) ((coq.nat.S) ▪ coq.nat.O)) (`λ' q : El (coq.nat.nat), ((coq.nat.minus) ▪ coq.nat.O) ▪ q)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ coq.nat.O)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ coq.nat.O)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (coq.nat.sym_eq_minus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ coq.nat.O)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (coq.fact.eq_fact_body_O) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat)) (coq.fact.fact_body)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ y)) (el-⇒ (el-∀ (el-∀ (coq.fact.eq_fact) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ coq.nat.O)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((coq.fact.fact) ▪ coq.nat.O))))))))))))))) (in-∀ (λ n1 : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.fact.sym_eq_fact) ((coq.nat.S) ▪ n1)) (`λ' y : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.S) ▪ n1))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat)) (coq.fact.fact_body)) (n1)) (`λ' y : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.S) ▪ n1))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.fact.sym_eq_fact_body_S) (n1)) (`λ' y : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.S) ▪ n1))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (in-⇒ (λ Hind : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.S) ▪ n1))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) ((coq.nat.S) ▪ ((coq.nat.S) ▪ n1))) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) ((coq.nat.S) ▪ n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus_body_S) ((coq.nat.S) ▪ n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) ((coq.nat.S) ▪ ((coq.nat.S) ▪ n1))) (`λ' q : El (coq.nat.nat), ((coq.nat.minus) ▪ ((coq.nat.S) ▪ n1)) ▪ q)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) ((coq.nat.S) ▪ n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ coq.nat.O)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ coq.nat.O)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus_body_S) (n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((y) ▪ coq.nat.O)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_O) (coq.nat.nat)) ((coq.nat.S) ▪ n1)) (`λ' q : El (coq.nat.nat), ((coq.nat.minus) ▪ n1) ▪ q)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.plus) ▪ n1) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((coq.nat.S) ▪ (((coq.nat.plus) ▪ n1) ▪ coq.nat.O))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((coq.nat.times) ▪ x_1) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (n1)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.fact.fact) ▪ n1))) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ x_1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f) (coq.nat.nat)) (coq.nat.nat)) ((coq.nat.times) ▪ ((coq.nat.S) ▪ n1))) ((coq.fact.fact) ▪ n1)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ n1)) ▪ ((coq.nat.S) ▪ coq.nat.O))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.fact.fact) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ x_1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (Hind)) (n1)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) ((coq.nat.S) ▪ n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ n1)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ n1)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus_body_S) (n1)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ n1)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) ((coq.nat.S) ▪ n1)) (`λ' q : El (coq.nat.nat), ((coq.nat.minus) ▪ n1) ▪ q)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ n1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ n1)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n1))) (((coq.nat.minus) ▪ n1) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) (n1)))))))))) (((coq.nat.plus) ▪ n1) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_n_O) (n1)))) (((coq.nat.plus) ▪ n1) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) (n1)) (coq.nat.O)))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n1)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bigops.bigop_Strue) (coq.nat.nat)) (n1)) (`λ' __ : El (coq.nat.nat), coq.bool.true)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (`λ' __ : El (coq.nat.nat), ((coq.nat.plus) ▪ __) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))))))))))))) (((coq.nat.times) ▪ ((coq.fact.fact) ▪ n1)) ▪ ((coq.nat.S) ▪ n1))) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.fact.fact) ▪ n1)) ((coq.nat.S) ▪ n1))))))))) (n));
symbol congruent_pi : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), `∀ p : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p) ≔ in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ p : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p)) (in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p)) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p)) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ p)) (el-⇒ (el-∀ (el-∀ₚ (coq.bigops.eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ p)) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ p), el-∀ (el-∀ (coq.cong.congruent_n_n) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (p))))))))) (in-∀ (λ n1 : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ p : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.cong.congruent) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p), in-∀ (λ p : El (coq.nat.nat),  in-⇒ (λ posp : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ p), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (`λ' x : El (coq.nat.nat), (((coq.cong.congruent) ▪ x) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n1)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_S) (coq.nat.nat)) (n1)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.cong.congruent) ▪ (((coq.nat.times) ▪ ((f) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.bigops.sym_eq_bigop_body_S) (coq.nat.nat)) (n1)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.cong.congruent) ▪ (((coq.nat.times) ▪ ((f) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) ▪ p)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.div_mod.mod) ▪ ((f) ▪ n1)) ▪ p)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p)))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) (`λ' y : El (coq.nat.nat), (((coq.cong.congruent) ▪ (((coq.nat.times) ▪ ((f) ▪ n1)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ y) ▪ p)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (coq.cong.congruent_times) ((f) ▪ n1)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (((coq.div_mod.mod) ▪ ((f) ▪ n1)) ▪ p)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ ((f) ▪ i)) ▪ p))) (p)) (posp)) (el-⇒ (el-∀ (el-∀ (coq.cong.congruent_n_mod_n) ((f) ▪ n1)) (p)) (posp))) (el-⇒ (el-∀ (Hind) (p)) (posp))))))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n1)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bigops.bigop_Strue) (coq.nat.nat)) (n1)) (`λ' __ : El (coq.nat.nat), coq.bool.true)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))))))))) (n)));
symbol congruent_exp_pred_SO : Prf (`∀ p : El (coq.nat.nat), `∀ a : El (coq.nat.nat), ((coq.primes.prime) ▪ p) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ a)) ⇒ (((coq.cong.congruent) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ p) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ primep : Prf ((coq.primes.prime) ▪ p), in-⇒ (λ ndiv : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ a)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.cong.divides_to_congruent) (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ((coq.nat.S) ▪ coq.nat.O)) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))) (el-⇒ (el-∀ (el-∀ (coq.exp.lt_O_exp) (a)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.match_nat_prop) (`λ' __ : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ __)) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ __)) (in-⇒ (λ _clearme : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ coq.nat.O)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.Not_ind) (((coq.primes.divides) ▪ p) ▪ coq.nat.O)) (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O)) (in-⇒ (λ div0 : Prf ((((coq.primes.divides) ▪ p) ▪ coq.nat.O) ⇒ coq.connectives.False), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O)) (el-⇒ (div0) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p)) (coq.nat.O)) (coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O))) (((coq.nat.times) ▪ p) ▪ coq.nat.O)) (el-∀ (coq.nat.times_n_O) (p)))))))) (_clearme)))) (in-∀ (λ auto : El (coq.nat.nat),  in-⇒ (λ auto' : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ ((coq.nat.S) ▪ auto))), el-∀ (coq.nat.lt_O_S) (auto))))) (a)) (ndiv)))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p)))) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (in-⇒ (λ auto : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))), auto))) (in-⇒ (λ Hdiv : Prf (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ p) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p)))) (Hdiv)) (el-⇒ (el-∀ (el-⇒ (el-∀ (prime_to_not_divides_fact) (p)) (primep)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (p)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (p)) (`λ' x : El (coq.nat.nat), ((coq.nat.le) ▪ ((coq.nat.S) ▪ x)) ▪ ((coq.nat.S) ▪ p))) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ p))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (el-⇒ (el-∀ (coq.nat.S_pred) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep)))))))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.gcd.divides_times_to_divides) (p)) (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) (primep)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p)))) ▪ (((coq.nat.times) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) (`λ' x_1 : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p)))) ▪ x_1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p)))) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ x) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.exp.exp) ▪ a) ▪ x)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (`λ' x : El (coq.nat.nat), ((coq.primes.divides) ▪ p) ▪ (((coq.nat.minus) ▪ x) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.cong.congruent_to_divides) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (coq.cong.transitive_congruent) (p)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ p))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (el-∀ (congruent_pi) (`λ' m : El (coq.nat.nat), ((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (`λ' x_1 : El (coq.nat.nat), (((coq.cong.congruent) ▪ x_1) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ p)) (el-∀ (el-∀ (coq.cong.congruent_n_n) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (p))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ p))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), i))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ p)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), i))) ▪ x)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), i))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (coq.bigops.bigop_iso) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ __)) ▪ coq.bool.true)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ __)) ▪ coq.bool.true)) (`λ' __ : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ __)) ▪ p)) (`λ' __ : El (coq.nat.nat), __)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat ⇝ coq.nat.nat)) (`λ' x : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ ((x) ▪ i))) ▪ (((((((((coq.bigops.sub_hk) ▪ x) ▪ k) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p)) ▪ (`λ' _0 : El (coq.nat.nat), _0)))) ▪ (((((((((coq.bigops.sub_hk) ▪ k) ▪ x) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), _0)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p))))) (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat ⇝ coq.nat.nat)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ (((((((((coq.bigops.sub_hk) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ y) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p)) ▪ (`λ' _0 : El (coq.nat.nat), _0)))) ▪ (((((((((coq.bigops.sub_hk) ▪ y) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), _0)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p)))) (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ (((((((((coq.bigops.sub_hk) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p)) ▪ (`λ' _0 : El (coq.nat.nat), _0)))) (((((((((coq.bigops.sub_hk) ▪ (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), _0)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (`∀ x : El (coq.nat.nat), (((coq.nat.lt) ▪ x) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ x)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ x)) ▪ p)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ x)) ▪ p))) (((((((((coq.bigops.sub_hk) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p)) ▪ (`λ' _0 : El (coq.nat.nat), _0))) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))), in-⇒ (λ __ : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ coq.bool.true), el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)))))) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))), in-⇒ (λ posi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p)))) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ coq.bool.true)) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p)))) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ coq.bool.true)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (p)) (`λ' x : El (coq.nat.nat), ((coq.nat.lt) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ x)) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (((coq.nat.times) ▪ a) ▪ i)) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep)))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (el-⇒ (el-∀ (coq.nat.S_pred) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ x) ▪ coq.bool.true)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) (coq.bool.true)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ coq.bool.true) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ coq.bool.true) ▪ coq.bool.true)))) (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_leb_true) ((coq.nat.S) ▪ coq.nat.O)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)), auto))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ i))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.mod_O_to_divides) (p)) (((coq.nat.times) ▪ a) ▪ i)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (coq.nat.O)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) (H)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ i))) (((coq.primes.divides) ▪ p) ▪ a)) (in-⇒ (λ Hdiv : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ i)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ p) ▪ a)) (((coq.primes.divides) ▪ p) ▪ i)) (((coq.primes.divides) ▪ p) ▪ a)) (in-⇒ (λ auto : Prf (((coq.primes.divides) ▪ p) ▪ a), auto))) (in-⇒ (λ divpi : Prf (((coq.primes.divides) ▪ p) ▪ i), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.primes.divides) ▪ p) ▪ a)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p)))) (lti)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (p)) (`λ' x : El (coq.nat.nat), ((coq.nat.le) ▪ x) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_le) (p)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.leb_true_to_le) ((coq.nat.S) ▪ coq.nat.O)) (i)) (el-⇒ (el-∀ (el-∀ (coq.bool.andb_true_l) (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) (coq.bool.true)) (posi)))) (divpi))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (el-⇒ (el-∀ (coq.nat.S_pred) (p)) (el-⇒ (el-∀ (coq.primes.prime_to_lt_O) (p)) (primep))))))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.gcd.divides_times_to_divides) (p)) (a)) (i)) (primep)) (Hdiv))))) (ndiv)))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) (el-∀ (coq.nat.le_O_n) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)))))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.permutation.invert_permut_f) (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ((coq.nat.pred) ▪ p)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (i)) ((coq.nat.pred) ▪ p)) (lti))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i1 : El (coq.nat.nat), (((coq.nat.le) ▪ i1) ▪ ((coq.nat.pred) ▪ p)) ⇒ ((coq.nat.le) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i1)) ▪ p)) ▪ ((coq.nat.pred) ▪ p))) (((coq.permutation.injn) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ▪ ((coq.nat.pred) ▪ p))) (((coq.permutation.injn) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ ((coq.nat.pred) ▪ p))) (in-⇒ (λ auto : Prf (`∀ i0 : El (coq.nat.nat), (((coq.nat.le) ▪ i0) ▪ ((coq.nat.pred) ▪ p)) ⇒ ((coq.nat.le) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ ((coq.nat.pred) ▪ p)), in-⇒ (λ auto' : Prf (((coq.permutation.injn) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ▪ ((coq.nat.pred) ▪ p)), auto')))) (el-⇒ (el-⇒ (el-∀ (el-∀ (permut_mod) (p)) (a)) (primep)) (ndiv)))))))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.pred) ▪ p)) ⇒ ((coq.nat.le) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ▪ i)) ▪ ((coq.nat.pred) ▪ p))) (((coq.permutation.injn) ▪ (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p))) ▪ ((coq.nat.pred) ▪ p))) (((((((((coq.bigops.sub_hk) ▪ (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p))) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i)) ▪ p)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ _0)) ▪ coq.bool.true)) ▪ (`λ' _0 : El (coq.nat.nat), _0)) ▪ (`λ' _0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ _0)) ▪ p))) (in-⇒ (λ le_invert_permut : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.le) ▪ i) ▪ ((coq.nat.pred) ▪ p)) ⇒ ((coq.nat.le) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ▪ i)) ▪ ((coq.nat.pred) ▪ p)), in-⇒ (λ inj_inv_permut : Prf (((coq.permutation.injn) ▪ (((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p))) ▪ ((coq.nat.pred) ▪ p)), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))), in-⇒ (λ posi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ i)) ▪ coq.bool.true)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p)))) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) ▪ coq.bool.true)) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) ▪ p)) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p)))) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) ▪ coq.bool.true)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S) ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-∀ (le_invert_permut) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (i)) ((coq.nat.pred) ▪ p)) (lti))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ x) ▪ coq.bool.true)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) (coq.bool.true)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ coq.bool.true) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ coq.bool.true) ▪ coq.bool.true)))) (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_leb_true) ((coq.nat.S) ▪ coq.nat.O)) ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)), auto))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (coq.nat.O)) (`λ' x : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) ▪ p)) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (i)) (`λ' x : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ x) ⇒ coq.connectives.False)) (in-⇒ (λ eq0i : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ i), el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (coq.nat.O)) (`λ' x_1 : El (coq.nat.nat), ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ x_1)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_leb) ((coq.nat.S) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((y) ▪ coq.nat.O)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.bool.bool)) (coq.nat.leb_body)) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((y) ▪ coq.nat.O)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_leb_body_S) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((y) ▪ coq.nat.O)) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_O) (coq.bool.bool)) (coq.bool.false)) (`λ' q : El (coq.nat.nat), ((coq.nat.leb) ▪ coq.nat.O) ▪ q)) (`λ' y : El (coq.bool.bool), ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ y) ▪ coq.bool.true)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.true)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), ((((coq.logic.eq) at (coq.bool.bool)) ▪ y) ▪ coq.bool.true) ⇒ coq.connectives.False)) (in-⇒ (λ H0 : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true), el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (prop)) (`∀ P : El (prop), P)) (`∀ P : El (prop), P ⇒ P)) (`λ' y : El (prop), y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (prop)) (((((coq.bool.match_bool_type) at (prop)) ▪ (`∀ P : El (prop), P ⇒ P)) ▪ (`∀ P : El (prop), P)) ▪ coq.bool.true)) (((((coq.bool.match_bool_type) at (prop)) ▪ (`∀ P : El (prop), P)) ▪ (`∀ P : El (prop), P ⇒ P)) ▪ coq.bool.true)) (`λ' y : El (prop), y)) (el-⇒ (el-∀ (el-∀ (coq.bool.bool_discr) (coq.bool.false)) (coq.bool.true)) (H0)))) (coq.connectives.False))))))))) (i)) (eq0i)) (posi)))) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i))) ▪ p)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.permutation.f_invert_permut) (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ((coq.nat.pred) ▪ p)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (i)) ((coq.nat.pred) ▪ p)) (lti))) (el-⇒ (el-⇒ (el-∀ (el-∀ (permut_mod) (p)) (a)) (primep)) (ndiv))))) (((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ coq.nat.O)) ▪ p)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (coq.nat.O)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ x_1) ▪ p)) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ coq.nat.O)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O))) (((coq.div_mod.mod) ▪ coq.nat.O) ▪ p)) (el-∀ (coq.div_mod.mod_O_n) (p)))) (((coq.nat.times) ▪ a) ▪ coq.nat.O)) (el-∀ (coq.nat.times_n_O) (a)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f) (coq.nat.nat)) (coq.nat.nat)) (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) (coq.nat.O)) ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O))) ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) (H))))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)) (el-∀ (coq.nat.le_O_n) ((((coq.permutation.invert_permut) ▪ ((coq.nat.pred) ▪ p)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ i0)) ▪ p)) ▪ i)))))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.permutation.f_invert_permut) (`λ' __ : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ __)) ▪ p)) ((coq.nat.pred) ▪ p)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (i)) ((coq.nat.pred) ▪ p)) (lti))) (el-⇒ (el-⇒ (el-∀ (el-∀ (permut_mod) (p)) (a)) (primep)) (ndiv)))))))))) (el-⇒ (el-∀ (el-∀ (coq.permutation.permut_invert_permut) (`λ' n : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ p)) ((coq.nat.pred) ▪ p)) (el-⇒ (el-⇒ (el-∀ (el-∀ (permut_mod) (p)) (a)) (primep)) (ndiv)))))))))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ p))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (coq.bigops.bigop_I_gen) ((coq.nat.S) ▪ coq.nat.O)) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (`λ' __ : El (coq.nat.nat), coq.bool.true)) (`λ' __ : El (coq.nat.nat), ((coq.div_mod.mod) ▪ (((coq.nat.times) ▪ a) ▪ __)) ▪ p)) (el-∀ (coq.nat.lt_O_S) ((coq.nat.pred) ▪ p))))) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (coq.bigops.bigop_I_gen) ((coq.nat.S) ▪ coq.nat.O)) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (`λ' __ : El (coq.nat.nat), coq.bool.true)) (`λ' __ : El (coq.nat.nat), __)) (el-∀ (coq.nat.lt_O_S) ((coq.nat.pred) ▪ p)))))))) (((coq.nat.times) ▪ (((coq.exp.exp) ▪ a) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (el-∀ (el-∀ (el-∀ (el-∀ (coq.sigma_pi.exp_pi_bc) (a)) ((coq.nat.S) ▪ coq.nat.O)) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) (`λ' __ : El (coq.nat.nat), __)))) ((coq.nat.pred) ▪ p)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.minus) ▪ ((coq.nat.pred) ▪ p)) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.pred) ▪ p)) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((coq.nat.pred) ▪ p)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.pred) ▪ p)) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((coq.nat.pred) ▪ p))) (((coq.nat.minus) ▪ ((coq.nat.pred) ▪ p)) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) ((coq.nat.pred) ▪ p)))) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (el-∀ (coq.nat.minus_S_S) ((coq.nat.pred) ▪ p)) (coq.nat.O))))) (((coq.nat.times) ▪ (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p)))) (el-∀ (el-∀ (coq.nat.commutative_times) (((((((coq.bigops.bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (`λ' i : El (coq.nat.nat), coq.bool.true)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), ((coq.nat.plus) ▪ i) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))))) ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) (el-∀ (eq_fact_pi_p) ((coq.nat.pred) ▪ p)))) (((coq.nat.times) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (coq.nat.times_n_1) ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))))) (((coq.nat.times) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))) (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ((coq.nat.S) ▪ coq.nat.O)))) (((coq.nat.times) ▪ (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p)))) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.nat.minus) ▪ (((coq.exp.exp) ▪ a) ▪ ((coq.nat.pred) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ((coq.fact.fact) ▪ ((coq.nat.pred) ▪ p))))))))));
