require open coq.sttfa;
require coq.connectives;
require coq.leibniz;
require coq.nat;
constant symbol exp : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol exp_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_exp : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.connectives.equal) (coq.nat.nat) ■) (app (app (exp) n ■) m ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat) ■) (app (exp_body) n ■) ■) m ■) ■)));
symbol eq_exp : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat) ■) (app (app (exp) n ■) m ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat) ■) (app (exp_body) n ■) ■) m ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat) ■) (app (app (exp) n ■) m ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat) ■) (app (exp_body) n ■) ■) m ■) ■) (el-∀ (el-∀ (axiom_exp) (n) ■) (m) ■) ■));
symbol sym_eq_exp : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat) ■) (app (exp_body) n ■) ■) m ■) ■) (app (app (exp) n ■) m ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat) ■) (app (app (exp) n ■) m ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat) ■) (app (exp_body) n ■) ■) m ■) ■) (el-∀ (el-∀ (eq_exp) (n) ■) (m) ■) ■));
constant symbol axiom_exp_body_O : Prf (∀ (λ n : El (coq.nat.nat), app (app (el-∀ₖ (coq.connectives.equal) (coq.nat.nat) ■) (app (app (exp_body) n ■) coq.nat.O ■) ■) (app (coq.nat.S) coq.nat.O ■) ■));
symbol eq_exp_body_O : Prf (∀ (λ n : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat) ■) (app (app (exp_body) n ■) coq.nat.O ■) ■) (app (coq.nat.S) coq.nat.O ■) ■)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat) ■) (app (app (exp_body) n ■) coq.nat.O ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-∀ (axiom_exp_body_O) (n) ■) ■);
symbol sym_eq_exp_body_O : Prf (∀ (λ n : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat) ■) (app (coq.nat.S) coq.nat.O ■) ■) (app (app (exp_body) n ■) coq.nat.O ■) ■)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat) ■) (app (app (exp_body) n ■) coq.nat.O ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-∀ (eq_exp_body_O) (n) ■) ■);
constant symbol axiom_exp_body_S : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.connectives.equal) (coq.nat.nat) ■) (app (app (exp_body) n ■) (app (coq.nat.S) m ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) m ■) ■) n ■) ■)));
symbol eq_exp_body_S : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat) ■) (app (app (exp_body) n ■) (app (coq.nat.S) m ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) m ■) ■) n ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat) ■) (app (app (exp_body) n ■) (app (coq.nat.S) m ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) m ■) ■) n ■) ■) (el-∀ (el-∀ (axiom_exp_body_S) (n) ■) (m) ■) ■));
symbol sym_eq_exp_body_S : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (exp) n ■) m ■) ■) n ■) ■) (app (app (exp_body) n ■) (app (coq.nat.S) m ■) ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat) ■) (app (app (exp_body) n ■) (app (coq.nat.S) m ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) m ■) ■) n ■) ■) (el-∀ (el-∀ (eq_exp_body_S) (n) ■) (m) ■) ■));
symbol lt_O_exp : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) (app (app (exp) n ■) m ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (abs (λ _x_365 : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) (app (app (exp) n ■) _x_365 ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (sym_eq_exp) (n) ■) (coq.nat.O) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat) ■) (app (exp_body) n ■) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (sym_eq_exp_body_O) (n) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) y ■)) ■) (in-⇒ (λ auto : Prf (app (app (coq.nat.le) (app (coq.nat.S) coq.nat.O ■) ■) n ■), el-∀ (coq.nat.lt_O_S) (coq.nat.O) ■)) ■) ■) ■) ■) (in-∀ (λ a : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (sym_eq_exp) (n) ■) (app (coq.nat.S) a ■) ■) (abs (λ y : El (coq.nat.nat), ((app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) (app (app (exp) n ■) a ■) ■) ⇒ (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat) ■) (app (exp_body) n ■) ■) (a) ■) (abs (λ y : El (coq.nat.nat), ((app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) (app (app (exp) n ■) a ■) ■) ⇒ (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (sym_eq_exp_body_S) (n) ■) (a) ■) (abs (λ y : El (coq.nat.nat), ((app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) (app (app (exp) n ■) a ■) ■) ⇒ (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) y ■)) ■) (in-⇒ (λ Hind : Prf ((app (app (coq.nat.le) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ⇒ app (app (coq.nat.le) (app (coq.nat.S) coq.nat.O ■) ■) (app (app (exp) n ■) a ■) ■), in-⇒ (λ posn : Prf (app (app (coq.nat.le) (app (coq.nat.S) coq.nat.O ■) ■) n ■), el-⇒ (el-∀ (coq.nat.eq_times_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (coq.nat.S) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.times_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (coq.nat.S) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (coq.nat.S) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (coq.nat.eq_plus_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (coq.nat.S) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.plus_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (coq.nat.S) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (coq.nat.S) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus_body_S) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.plus_body) ■) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (y) (app (app (coq.nat.times) coq.nat.O ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times_body_S) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat) ■) (coq.nat.times_body) ■) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.nat.le) (app (y) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (coq.nat.times) (app (app (exp) n ■) a ■) ■) n ■) ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (coq.nat.le_times) (app (coq.nat.S) coq.nat.O ■) ■) (app (app (exp) n ■) a ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) (n) ■) (el-⇒ (Hind) (posn) ■) ■) (posn) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) ■))) ■) ■) ■)) ■) (m) ■));
