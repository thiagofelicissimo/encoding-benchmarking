require open coq.sttfa;
require coq.connectives;
require coq.leibniz;
require coq.nat;
constant symbol exp : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol exp_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_exp : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat)) ▪ (((exp) ▪ n) ▪ m)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ ((exp_body) ▪ n)) ▪ m));
symbol eq_exp : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ (((exp) ▪ n) ▪ m)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ ((exp_body) ▪ n)) ▪ m)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat)) (((exp) ▪ n) ▪ m)) ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ ((exp_body) ▪ n)) ▪ m)) (el-∀ (el-∀ (axiom_exp) (n)) (m))));
symbol sym_eq_exp : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ ((exp_body) ▪ n)) ▪ m)) ▪ (((exp) ▪ n) ▪ m)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat)) (((exp) ▪ n) ▪ m)) ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ ((exp_body) ▪ n)) ▪ m)) (el-∀ (el-∀ (eq_exp) (n)) (m))));
constant symbol axiom_exp_body_O : Prf (`∀ n : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat)) ▪ (((exp_body) ▪ n) ▪ coq.nat.O)) ▪ ((coq.nat.S) ▪ coq.nat.O));
symbol eq_exp_body_O : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ (((exp_body) ▪ n) ▪ coq.nat.O)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat)) (((exp_body) ▪ n) ▪ coq.nat.O)) ((coq.nat.S) ▪ coq.nat.O)) (el-∀ (axiom_exp_body_O) (n)));
symbol sym_eq_exp_body_O : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((exp_body) ▪ n) ▪ coq.nat.O)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat)) (((exp_body) ▪ n) ▪ coq.nat.O)) ((coq.nat.S) ▪ coq.nat.O)) (el-∀ (eq_exp_body_O) (n)));
constant symbol axiom_exp_body_S : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat)) ▪ (((exp_body) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ m)) ▪ n));
symbol eq_exp_body_S : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ (((exp_body) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ m)) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat)) (((exp_body) ▪ n) ▪ ((coq.nat.S) ▪ m))) (((coq.nat.times) ▪ (((exp) ▪ n) ▪ m)) ▪ n)) (el-∀ (el-∀ (axiom_exp_body_S) (n)) (m))));
symbol sym_eq_exp_body_S : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ m)) ▪ n)) ▪ (((exp_body) ▪ n) ▪ ((coq.nat.S) ▪ m))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat)) (((exp_body) ▪ n) ▪ ((coq.nat.S) ▪ m))) (((coq.nat.times) ▪ (((exp) ▪ n) ▪ m)) ▪ n)) (el-∀ (el-∀ (eq_exp_body_S) (n)) (m))));
symbol lt_O_exp : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ (((exp) ▪ n) ▪ m)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ (((exp) ▪ n) ▪ _x_365))) (el-⇒ (el-∀ (el-∀ (el-∀ (sym_eq_exp) (n)) (coq.nat.O)) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat)) ((exp_body) ▪ n)) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ y)) (el-⇒ (el-∀ (el-∀ (sym_eq_exp_body_O) (n)) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ y)) (in-⇒ (λ auto : Prf (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n), el-∀ (coq.nat.lt_O_S) (coq.nat.O))))))) (in-∀ (λ a : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (sym_eq_exp) (n)) ((coq.nat.S) ▪ a)) (`λ' y : El (coq.nat.nat), ((((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ (((exp) ▪ n) ▪ a)) ⇒ (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat)) ((exp_body) ▪ n)) (a)) (`λ' y : El (coq.nat.nat), ((((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ (((exp) ▪ n) ▪ a)) ⇒ (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (sym_eq_exp_body_S) (n)) (a)) (`λ' y : El (coq.nat.nat), ((((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ (((exp) ▪ n) ▪ a)) ⇒ (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ y)) (in-⇒ (λ Hind : Prf ((((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n) ⇒ ((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((exp) ▪ n) ▪ a)), in-⇒ (λ posn : Prf (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n), el-⇒ (el-∀ (coq.nat.eq_times_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (coq.nat.eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ coq.nat.O))))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ coq.nat.O))))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ coq.nat.O))))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus_body_S) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((y) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((y) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_plus) ((coq.nat.S) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((y) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times_body_S) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_times) ((coq.nat.S) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((y) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ (((coq.nat.times) ▪ (((exp) ▪ n) ▪ a)) ▪ n))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (coq.nat.le_times) ((coq.nat.S) ▪ coq.nat.O)) (((exp) ▪ n) ▪ a)) ((coq.nat.S) ▪ coq.nat.O)) (n)) (el-⇒ (Hind) (posn))) (posn))))))))))))))))))))) (m)));
