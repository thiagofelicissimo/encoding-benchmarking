require open coq.sttfa;
require coq.bool;
require coq.connectives;
require coq.div_mod;
require coq.leibniz;
require coq.logic;
require coq.nat;
symbol sameF_upto : Els (∀ₖ (λ A, ↑ (coq.nat.nat ⇝ (coq.nat.nat ⇝ A) ⇝ (coq.nat.nat ⇝ A) ⇝ prop))) ≔ `Λ A, `λ' k : El (coq.nat.nat), `λ' f : El ((coq.nat.nat ⇝ A)), `λ' g : El ((coq.nat.nat ⇝ A)), `∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ k) ⇒ (((coq.logic.eq) at (A)) ▪ ((f) ▪ i)) ▪ ((g) ▪ i);
symbol sameF_p : Els (∀ₖ (λ A, ↑ (coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ (coq.nat.nat ⇝ A) ⇝ (coq.nat.nat ⇝ A) ⇝ prop))) ≔ `Λ A, `λ' k : El (coq.nat.nat), `λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' f : El ((coq.nat.nat ⇝ A)), `λ' g : El ((coq.nat.nat ⇝ A)), `∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ k) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (A)) ▪ ((f) ▪ i)) ▪ ((g) ▪ i);
symbol sameF_upto_le : Prf (`∀ₚ A, `∀ f : El ((coq.nat.nat ⇝ A)), `∀ g : El ((coq.nat.nat ⇝ A)), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((((sameF_upto) at (A)) ▪ m) ▪ f) ▪ g) ⇒ ((((sameF_upto) at (A)) ▪ n) ▪ f) ▪ g) ≔ in-∀ₚ (λ A, in-∀ (λ f : El (coq.nat.nat ⇝ A),  in-∀ (λ g : El (coq.nat.nat ⇝ A),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ samef : Prf (((((sameF_upto) at (A)) ▪ m) ▪ f) ▪ g), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ ltin : Prf (((coq.nat.lt) ▪ i) ▪ n), el-⇒ (el-∀ (samef) (i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_to_le_to_lt) (i)) (n)) (m)) (ltin)) (lenm)))))))))));
symbol sameF_p_le : Prf (`∀ₚ A, `∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f : El ((coq.nat.nat ⇝ A)), `∀ g : El ((coq.nat.nat ⇝ A)), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((((((sameF_p) at (A)) ▪ m) ▪ p) ▪ f) ▪ g) ⇒ (((((sameF_p) at (A)) ▪ n) ▪ p) ▪ f) ▪ g) ≔ in-∀ₚ (λ A, in-∀ (λ p : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f : El (coq.nat.nat ⇝ A),  in-∀ (λ g : El (coq.nat.nat ⇝ A),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ samef : Prf ((((((sameF_p) at (A)) ▪ m) ▪ p) ▪ f) ▪ g), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ ltin : Prf (((coq.nat.lt) ▪ i) ▪ n), in-⇒ (λ pi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (samef) (i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_to_le_to_lt) (i)) (n)) (m)) (ltin)) (lenm))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p) ▪ i)) (pi)))))))))))));
constant symbol bigop : Els (∀ₖ (λ H, ↑ (coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)));
constant symbol bigop_body : Els (∀ₖ (λ H, ↑ (coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)));
constant symbol axiom_bigop_O : Prf (`∀ₚ H, (((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop) at (H)) ▪ coq.nat.O)) ▪ (((bigop_body) at (H)) ▪ coq.nat.O));
symbol eq_bigop_O : Prf (`∀ₚ H, (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop) at (H)) ▪ coq.nat.O)) ▪ (((bigop_body) at (H)) ▪ coq.nat.O)) ≔ in-∀ₚ (λ H, el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop) at (H)) ▪ coq.nat.O)) (((bigop_body) at (H)) ▪ coq.nat.O)) (el-∀ₚ (axiom_bigop_O) (H)));
symbol sym_eq_bigop_O : Prf (`∀ₚ H, (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop_body) at (H)) ▪ coq.nat.O)) ▪ (((bigop) at (H)) ▪ coq.nat.O)) ≔ in-∀ₚ (λ H, el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop) at (H)) ▪ coq.nat.O)) (((bigop_body) at (H)) ▪ coq.nat.O)) (el-∀ₚ (eq_bigop_O) (H)));
constant symbol axiom_bigop_S : Prf (`∀ₚ H, `∀ n : El (coq.nat.nat), (((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop) at (H)) ▪ ((coq.nat.S) ▪ n))) ▪ (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n)));
symbol eq_bigop_S : Prf (`∀ₚ H, `∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop) at (H)) ▪ ((coq.nat.S) ▪ n))) ▪ (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) ≔ in-∀ₚ (λ H, in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop) at (H)) ▪ ((coq.nat.S) ▪ n))) (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) (el-∀ (el-∀ₚ (axiom_bigop_S) (H)) (n))));
symbol sym_eq_bigop_S : Prf (`∀ₚ H, `∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) ▪ (((bigop) at (H)) ▪ ((coq.nat.S) ▪ n))) ≔ in-∀ₚ (λ H, in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop) at (H)) ▪ ((coq.nat.S) ▪ n))) (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) (el-∀ (el-∀ₚ (eq_bigop_S) (H)) (n))));
constant symbol axiom_bigop_body_O : Prf (`∀ₚ H, (((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop_body) at (H)) ▪ coq.nat.O)) ▪ (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), nil));
symbol eq_bigop_body_O : Prf (`∀ₚ H, (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop_body) at (H)) ▪ coq.nat.O)) ▪ (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), nil)) ≔ in-∀ₚ (λ H, el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop_body) at (H)) ▪ coq.nat.O)) (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), nil)) (el-∀ₚ (axiom_bigop_body_O) (H)));
symbol sym_eq_bigop_body_O : Prf (`∀ₚ H, (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), nil)) ▪ (((bigop_body) at (H)) ▪ coq.nat.O)) ≔ in-∀ₚ (λ H, el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop_body) at (H)) ▪ coq.nat.O)) (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), nil)) (el-∀ₚ (eq_bigop_body_O) (H)));
constant symbol axiom_bigop_body_S : Prf (`∀ₚ H, `∀ n : El (coq.nat.nat), (((coq.connectives.equal) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) ▪ (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), ((((coq.bool.match_bool_type) at (H)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f))) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f)) ▪ ((p) ▪ n)));
symbol eq_bigop_body_S : Prf (`∀ₚ H, `∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) ▪ (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), ((((coq.bool.match_bool_type) at (H)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f))) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f)) ▪ ((p) ▪ n))) ≔ in-∀ₚ (λ H, in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), ((((coq.bool.match_bool_type) at (H)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f))) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f)) ▪ ((p) ▪ n))) (el-∀ (el-∀ₚ (axiom_bigop_body_S) (H)) (n))));
symbol sym_eq_bigop_body_S : Prf (`∀ₚ H, `∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) ▪ (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), ((((coq.bool.match_bool_type) at (H)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f))) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f)) ▪ ((p) ▪ n))) ▪ (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) ≔ in-∀ₚ (λ H, in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) ((coq.nat.nat ⇝ coq.bool.bool) ⇝ H ⇝ (H ⇝ H ⇝ H) ⇝ (coq.nat.nat ⇝ H) ⇝ H)) (((bigop_body) at (H)) ▪ ((coq.nat.S) ▪ n))) (`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil : El (H), `λ' op : El ((H ⇝ H ⇝ H)), `λ' f : El ((coq.nat.nat ⇝ H)), ((((coq.bool.match_bool_type) at (H)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f))) ▪ (((((((bigop) at (H)) ▪ n) ▪ p) ▪ nil) ▪ op) ▪ f)) ▪ ((p) ▪ n))) (el-∀ (el-∀ₚ (eq_bigop_body_S) (H)) (n))));
symbol bigop_Strue : Prf (`∀ₚ B, `∀ k : El (coq.nat.nat), `∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ nil : El (B), `∀ op : El ((B ⇝ B ⇝ B)), `∀ f : El ((coq.nat.nat ⇝ B)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ ((coq.nat.S) ▪ k)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ≔ in-∀ₚ (λ B, in-∀ (λ k : El (coq.nat.nat),  in-∀ (λ p : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ nil : El (B),  in-∀ (λ op : El (B ⇝ B ⇝ B),  in-∀ (λ f : El (coq.nat.nat ⇝ B),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_S) (B)) (k)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (B)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_body_S) (B)) (k)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (B)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ x)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (B)) (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (`λ' y : El (B), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (B)) (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ coq.bool.true)))) ((p) ▪ k)) (H))))))))));
symbol bigop_Sfalse : Prf (`∀ₚ B, `∀ k : El (coq.nat.nat), `∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ nil : El (B), `∀ op : El ((B ⇝ B ⇝ B)), `∀ f : El ((coq.nat.nat ⇝ B)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.false) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ ((coq.nat.S) ▪ k)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ≔ in-∀ₚ (λ B, in-∀ (λ k : El (coq.nat.nat),  in-∀ (λ p : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ nil : El (B),  in-∀ (λ op : El (B ⇝ B ⇝ B),  in-∀ (λ f : El (coq.nat.nat ⇝ B),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_S) (B)) (k)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.false) ⇒ (((coq.logic.eq) at (B)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_body_S) (B)) (k)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.false) ⇒ (((coq.logic.eq) at (B)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ x)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (B)) (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (`λ' y : El (B), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ coq.bool.false)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (B)) (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ k)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ coq.bool.false)))) ((p) ▪ k)) (H))))))))));
symbol same_bigop : Prf (`∀ₚ B, `∀ k : El (coq.nat.nat), `∀ p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ nil : El (B), `∀ op : El ((B ⇝ B ⇝ B)), `∀ f : El ((coq.nat.nat ⇝ B)), `∀ g : El ((coq.nat.nat ⇝ B)), (((((sameF_upto) at (coq.bool.bool)) ▪ k) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ k) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ k) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ≔ in-∀ₚ (λ B, in-∀ (λ k : El (coq.nat.nat),  in-∀ (λ p1 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p2 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ nil : El (B),  in-∀ (λ op : El (B ⇝ B ⇝ B),  in-∀ (λ f : El (coq.nat.nat ⇝ B),  in-∀ (λ g : El (coq.nat.nat ⇝ B),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), (((((sameF_upto) at (coq.bool.bool)) ▪ _x_365) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ _x_365) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ _x_365) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ _x_365) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_O) (B)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), (((((sameF_upto) at (coq.bool.bool)) ▪ coq.nat.O) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_body_O) (B)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), (((((sameF_upto) at (coq.bool.bool)) ▪ coq.nat.O) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_body_O) (B)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), (((((sameF_upto) at (coq.bool.bool)) ▪ coq.nat.O) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_O) (B)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), (((((sameF_upto) at (coq.bool.bool)) ▪ coq.nat.O) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (in-⇒ (λ auto : Prf (((((sameF_upto) at (coq.bool.bool)) ▪ coq.nat.O) ▪ p1) ▪ p2), in-⇒ (λ auto' : Prf ((((((sameF_p) at (B)) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ g), el-∀ (el-∀ₚ (coq.logic.refl) (B)) (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))))))))) (in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_S) (B)) (n)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((((sameF_upto) at (coq.bool.bool)) ▪ n) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ n) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ⇒ (((((sameF_upto) at (coq.bool.bool)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_S) (B)) (n)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((((sameF_upto) at (coq.bool.bool)) ▪ n) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ n) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ⇒ (((((sameF_upto) at (coq.bool.bool)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop_body) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_body_S) (B)) (n)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((((sameF_upto) at (coq.bool.bool)) ▪ n) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ n) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ⇒ (((((sameF_upto) at (coq.bool.bool)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop_body) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (sym_eq_bigop_body_S) (B)) (n)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), ((((((sameF_upto) at (coq.bool.bool)) ▪ n) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ n) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ⇒ (((((sameF_upto) at (coq.bool.bool)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((`λ' p : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' nil0 : El (B), `λ' op0 : El ((B ⇝ B ⇝ B)), `λ' f0 : El ((coq.nat.nat ⇝ B)), ((((coq.bool.match_bool_type) at (B)) ▪ (((op0) ▪ ((f0) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ p) ▪ nil0) ▪ op0) ▪ f0))) ▪ (((((((bigop) at (B)) ▪ n) ▪ p) ▪ nil0) ▪ op0) ▪ f0)) ▪ ((p) ▪ n)) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (in-⇒ (λ Hind : Prf ((((((sameF_upto) at (coq.bool.bool)) ▪ n) ▪ p1) ▪ p2) ⇒ ((((((sameF_p) at (B)) ▪ n) ▪ p1) ▪ f) ▪ g) ⇒ (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))), in-⇒ (λ samep : Prf (((((sameF_upto) at (coq.bool.bool)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ p2), in-⇒ (λ samef : Prf ((((((sameF_p) at (B)) ▪ ((coq.nat.S) ▪ n)) ▪ p1) ▪ f) ▪ g), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (B)) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) (`λ' x : El (B), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ x)) ▪ x) ▪ ((p1) ▪ n))) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ ((p2) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.bool.bool)) ((p1) ▪ n)) (`λ' x_1 : El (coq.bool.bool), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ ((p1) ▪ n))) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ x_1))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.false)) ((((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ ((p1) ▪ n))) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ ((p1) ▪ n)))) (in-⇒ (λ H1 : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ x)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (B)) (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) (`λ' y : El (B), (((coq.logic.eq) at (B)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ coq.bool.true))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (B)) (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) (`λ' y : El (B), (((coq.logic.eq) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ y)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (B)) ((f) ▪ n)) (`λ' x_1 : El (B), (((coq.logic.eq) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((op) ▪ x_1) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))))) (el-∀ (el-∀ₚ (coq.logic.refl) (B)) (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))))) ((g) ▪ n)) (el-⇒ (el-⇒ (el-∀ (samef) (n)) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ n))) (H1)))))) ((p1) ▪ n)) (H1)))) (in-⇒ (λ H1 : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (B)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ x)) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (B)) (((op) ▪ ((f) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) (`λ' y : El (B), (((coq.logic.eq) at (B)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (B)) ▪ (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ coq.bool.false))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (B)) (((op) ▪ ((g) ▪ n)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) (`λ' y : El (B), (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i))) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (B)) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (g) ▪ i)))))) ((p1) ▪ n)) (H1)))) (el-∀ (coq.bool.true_or_false) ((p1) ▪ n)))) ((p2) ▪ n)) (el-⇒ (el-∀ (samep) (n)) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ n))))) (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (el-⇒ (el-⇒ (Hind) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (sameF_upto_le) (coq.bool.bool)) (p1)) (p2)) (n)) ((coq.nat.S) ▪ n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ ((coq.nat.pred) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ n))) (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ n))) (el-∀ (coq.nat.le_pred_n) ((coq.nat.S) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ ((coq.nat.S) ▪ n))) ▪ (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ n)))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ n)))) ((coq.nat.pred) ▪ ((coq.nat.S) ▪ n))) (el-∀ (coq.nat.pred_Sn) (n))))) (samep))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (sameF_p_le) (B)) (p1)) (f)) (g)) (n)) ((coq.nat.S) ▪ n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ ((coq.nat.pred) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ n))) (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ n))) (el-∀ (coq.nat.le_pred_n) ((coq.nat.S) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ ((coq.nat.S) ▪ n))) ▪ (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ n)))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ n)))) ((coq.nat.pred) ▪ ((coq.nat.S) ▪ n))) (el-∀ (coq.nat.pred_Sn) (n))))) (samef))))))))))))) (k)))))))));
symbol bigop_false : Prf (`∀ₚ B, `∀ n : El (coq.nat.nat), `∀ nil : El (B), `∀ op : El ((B ⇝ B ⇝ B)), `∀ f : El ((coq.nat.nat ⇝ B)), (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ nil) ≔ in-∀ₚ (λ B, in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ nil : El (B),  in-∀ (λ op : El (B ⇝ B ⇝ B),  in-∀ (λ f : El (coq.nat.nat ⇝ B),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ _x_365) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ nil)) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_body_O) (B)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_O) (B)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ B ⇝ (B ⇝ B ⇝ B) ⇝ (coq.nat.nat ⇝ B) ⇝ B)), (((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-∀ (el-∀ₚ (coq.logic.refl) (B)) (((((((bigop) at (B)) ▪ coq.nat.O) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))))) (in-∀ (λ n1 : El (coq.nat.nat),  in-⇒ (λ Hind : Prf ((((coq.logic.eq) at (B)) ▪ (((((((bigop) at (B)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ▪ nil), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (B)) (((((((bigop) at (B)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (`λ' x : El (B), (((coq.logic.eq) at (B)) ▪ x) ▪ nil)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (B)) (nil)) (`λ' __ : El (B), (((coq.logic.eq) at (B)) ▪ __) ▪ nil)) (el-∀ (el-∀ₚ (coq.logic.refl) (B)) (nil))) (((((((bigop) at (B)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (Hind))) (((((((bigop) at (B)) ▪ ((coq.nat.S) ▪ n1)) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ nil) ▪ op) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (B)) (n1)) (`λ' __ : El (coq.nat.nat), coq.bool.false)) (nil)) (op)) (f)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false))))))) (n))))));
constant symbol Aop : Els (∀ₖ (λ A, ↑ (A ⇝ prop)));
constant symbol mk_Aop : Prf (`∀ₚ A, `∀ nil : El (A), `∀ op : El ((A ⇝ A ⇝ A)), (`∀ a : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ nil) ▪ a)) ▪ a) ⇒ (`∀ a : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ a) ▪ nil)) ▪ a) ⇒ (`∀ a : El (A), `∀ b : El (A), `∀ c : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ a) ▪ (((op) ▪ b) ▪ c))) ▪ (((op) ▪ (((op) ▪ a) ▪ b)) ▪ c)) ⇒ ((Aop) at (A)) ▪ nil);
symbol assoc : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), `∀ c : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ b) ▪ c))) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ c)) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ c : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ c)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ b) ▪ c))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (b)) (c)))));
symbol timesA : Prf (((Aop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ≔ el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (mk_Aop) (coq.nat.nat)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (in-∀ (λ a : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) ((coq.nat.S) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times_body_S) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ a) ▪ ((y) ▪ a))) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ a) ▪ ((y) ▪ a))) ▪ a)) (el-⇒ (el-∀ (coq.nat.sym_eq_times_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ a) ▪ ((y) ▪ a))) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (a)) (((coq.nat.plus) ▪ a) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_n_O) (a))))))))))) (in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (n)) (((coq.nat.times) ▪ n) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (coq.nat.times_n_1) (n))))) (in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ c : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ c)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ b) ▪ c))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (b)) (c))))));
symbol bigop_I_gen : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), `∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ b) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ _x_365) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ _x_365) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (in-∀ (λ p : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))) (el-⇒ (el-∀ (coq.nat.eq_minus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_minus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))) (in-⇒ (λ auto : Prf (((coq.nat.le) ▪ a) ▪ coq.nat.O), el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ coq.nat.O) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))))))))))))) (in-∀ (λ b0 : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ a) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))), in-∀ (λ p : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ lea : Prf (((coq.nat.le) ▪ a) ▪ ((coq.nat.S) ▪ b0)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ a) ▪ ((coq.nat.S) ▪ b0))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ ((coq.nat.S) ▪ b0))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ b0)) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (in-⇒ (λ Ha : Prf (((coq.nat.lt) ▪ a) ▪ ((coq.nat.S) ▪ b0)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ b0)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ b0)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ b0)) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (in-⇒ (λ Hcase : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ b0)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ b0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ a))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ x) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((coq.nat.times) ▪ ((f) ▪ b0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ a))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a))))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((coq.nat.times) ▪ ((f) ▪ b0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f2) (coq.nat.nat)) (coq.nat.nat)) (coq.nat.nat)) (coq.nat.times)) ((f) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ a))) ((f) ▪ b0)) (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f) (coq.nat.nat)) (coq.nat.nat)) (f)) (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ a)) (b0)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (b0)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x_1) ▪ b0)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (b0))) (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.plus_minus_m_m) (b0)) (a)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha)))))) (el-⇒ (el-∀ (el-∀ (Hind) (p)) (f)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ a))) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Strue) (coq.nat.nat)) (((coq.nat.minus) ▪ b0) ▪ a)) (`λ' __ : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ __) ▪ a))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (`λ' __ : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ __) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (b0)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ x_1)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p) ▪ b0)) (Hcase))) (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.plus_minus_m_m) (b0)) (a)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha))))))) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ a)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.match_nat_prop) (`λ' __ : El (coq.nat.nat), (((coq.nat.le) ▪ __) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ __)) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ __)))) (in-⇒ (λ auto : Prf (((coq.nat.le) ▪ coq.nat.O) ▪ b0), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((coq.nat.S) ▪ b0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (b0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ b0)) ▪ ((coq.nat.S) ▪ __))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((coq.nat.S) ▪ b0))) (((coq.nat.minus) ▪ b0) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) (b0)))) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) ((coq.nat.S) ▪ b0))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) ((coq.nat.S) ▪ b0)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((coq.nat.le) ▪ ((coq.nat.S) ▪ n)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ n))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (b0)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((coq.nat.le) ▪ ((coq.nat.S) ▪ n)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ n))))) (in-∀ (λ a1 : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus_body_S) (b0)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ ((coq.nat.S) ▪ a1)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ a1))) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ a1))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) ((coq.nat.S) ▪ b0)) (`λ' q : El (coq.nat.nat), ((coq.nat.minus) ▪ b0) ▪ q)) (a1)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ ((coq.nat.S) ▪ a1)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ a1))))) (in-⇒ (λ lta1 : Prf (((coq.nat.le) ▪ ((coq.nat.S) ▪ a1)) ▪ b0), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ b0) ▪ a1))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a1)) ▪ ((coq.nat.S) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ b0) ▪ a1)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a1)) ▪ x)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.nat.minus) ▪ b0) ▪ a1))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ b0) ▪ a1)))) (el-⇒ (el-∀ (coq.nat.S_pred) (((coq.nat.minus) ▪ b0) ▪ a1)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_plus_to_minus_r) (coq.nat.O)) (a1)) (b0)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ a1))) ▪ b0)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ a1))) ▪ b0)) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ a1))) ▪ b0)) (lta1)))))))) (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ a1))) (el-∀ (el-∀ (coq.nat.eq_minus_S_pred) (b0)) (a1)))))))))) (a)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ b0)) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Strue) (coq.nat.nat)) (b0)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ __)) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ b0)) ▪ x)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ x) ▪ coq.bool.true)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) (coq.bool.true)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.true) ▪ coq.bool.false) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ coq.bool.true) ▪ coq.bool.true)))) (((coq.nat.leb) ▪ a) ▪ b0)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_leb_true) (a)) (b0)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha))))) ((p) ▪ b0)) (Hcase)))))) (in-⇒ (λ Hcase : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ b0)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ a))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ x) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((((((bigop) at (coq.nat.nat)) ▪ b0) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ (Hind) (p)) (f)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha)))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ a))) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (((coq.nat.minus) ▪ b0) ▪ a)) (`λ' __ : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ __) ▪ a))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (`λ' __ : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ __) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (b0)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ x_1)) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.false)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.false)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false))) ((p) ▪ b0)) (Hcase))) (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ b0) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.plus_minus_m_m) (b0)) (a)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha))))))) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ a)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.match_nat_prop) (`λ' __ : El (coq.nat.nat), (((coq.nat.le) ▪ __) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ __)) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ __)))) (in-⇒ (λ auto : Prf (((coq.nat.le) ▪ coq.nat.O) ▪ b0), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((coq.nat.S) ▪ b0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (b0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ b0)) ▪ ((coq.nat.S) ▪ __))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((coq.nat.S) ▪ b0))) (((coq.nat.minus) ▪ b0) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) (b0)))) (((coq.nat.minus) ▪ ((coq.nat.S) ▪ b0)) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) ((coq.nat.S) ▪ b0))))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus) ((coq.nat.S) ▪ b0)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((coq.nat.le) ▪ ((coq.nat.S) ▪ n)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ n))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.minus_body)) (b0)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n : El (coq.nat.nat), (((coq.nat.le) ▪ ((coq.nat.S) ▪ n)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ n))) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ n))))) (in-∀ (λ a1 : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_minus_body_S) (b0)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ ((coq.nat.S) ▪ a1)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ ((coq.nat.S) ▪ a1))) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ a1))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) ((coq.nat.S) ▪ b0)) (`λ' q : El (coq.nat.nat), ((coq.nat.minus) ▪ b0) ▪ q)) (a1)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ ((coq.nat.S) ▪ a1)) ▪ b0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ ((coq.nat.S) ▪ (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ a1))))) (in-⇒ (λ lta1 : Prf (((coq.nat.le) ▪ ((coq.nat.S) ▪ a1)) ▪ b0), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ b0) ▪ a1))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a1)) ▪ ((coq.nat.S) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ b0) ▪ a1)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ b0) ▪ a1)) ▪ x)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.nat.minus) ▪ b0) ▪ a1))) ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ b0) ▪ a1)))) (el-⇒ (el-∀ (coq.nat.S_pred) (((coq.nat.minus) ▪ b0) ▪ a1)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_plus_to_minus_r) (coq.nat.O)) (a1)) (b0)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ a1))) ▪ b0)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ a1))) ▪ b0)) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.nat.le) ▪ ((coq.nat.S) ▪ ((y) ▪ a1))) ▪ b0)) (lta1)))))))) (((coq.nat.minus) ▪ b0) ▪ ((coq.nat.S) ▪ a1))) (el-∀ (el-∀ (coq.nat.eq_minus_S_pred) (b0)) (a1)))))))))) (a)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (a)) (b0)) (Ha))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ b0)) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (b0)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ __)) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ b0)) ▪ x)) ▪ coq.bool.false)) (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.bool.match_bool_prop) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ __) ▪ coq.bool.false)) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) (coq.bool.false)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.false) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ coq.bool.true) ▪ coq.bool.false)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.false) ▪ coq.bool.false)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ coq.bool.false) ▪ coq.bool.false)))) (((coq.nat.leb) ▪ a) ▪ b0))) ((p) ▪ b0)) (Hcase)))))) (el-∀ (coq.bool.true_or_false) ((p) ▪ b0))))) (in-⇒ (λ Ha : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ ((coq.nat.S) ▪ b0)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (a)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ x_1) ▪ a)) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ x_1) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (coq.nat.O)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ x_1) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ a) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ a) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((y) ▪ (`λ' i : El (coq.nat.nat), (p) ▪ (((coq.nat.plus) ▪ i) ▪ a))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ (((coq.nat.plus) ▪ i) ▪ a)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ a) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ a) ▪ (`λ' i : El (coq.nat.nat), coq.bool.false)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x_1) ▪ (((((((bigop) at (coq.nat.nat)) ▪ a) ▪ (`λ' i : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ i)) ▪ ((p) ▪ i))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f) ▪ i)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (same_bigop) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), coq.bool.false)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ (((coq.nat.leb) ▪ a) ▪ __)) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (f)) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ ltia : Prf (((coq.nat.lt) ▪ i) ▪ a), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.false) ▪ (((coq.bool.andb) ▪ x) ▪ ((p) ▪ i)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) ((p) ▪ i)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.false) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false)))) (((coq.nat.leb) ▪ a) ▪ i)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_leb_false) (a)) (i)) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_le) (i)) (a)) (ltia))))))) (in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ i) ▪ a), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true), el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((f) ▪ i))))))) ((coq.nat.S) ▪ coq.nat.O)) (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_false) (coq.nat.nat)) (a)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)))))) (((coq.nat.minus) ▪ a) ▪ a)) (el-∀ (coq.nat.minus_n_n) (a)))) ((coq.nat.S) ▪ b0)) (Ha)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (a)) ((coq.nat.S) ▪ b0)) (lea))))))))) (b)));
constant symbol ACop : Els (∀ₖ (λ A, ↑ (A ⇝ prop)));
constant symbol mk_ACop : Prf (`∀ₚ A, `∀ nil : El (A), `∀ op : El ((A ⇝ A ⇝ A)), (`∀ a : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ nil) ▪ a)) ▪ a) ⇒ (`∀ a : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ a) ▪ nil)) ▪ a) ⇒ (`∀ a : El (A), `∀ b : El (A), `∀ c : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ a) ▪ (((op) ▪ b) ▪ c))) ▪ (((op) ▪ (((op) ▪ a) ▪ b)) ▪ c)) ⇒ (`∀ a : El (A), `∀ b : El (A), (((coq.logic.eq) at (A)) ▪ (((op) ▪ a) ▪ b)) ▪ (((op) ▪ b) ▪ a)) ⇒ ((ACop) at (A)) ▪ nil);
symbol timesAC : Prf (((ACop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ≔ el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (mk_ACop) (coq.nat.nat)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (in-∀ (λ a : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) ((coq.nat.S) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times_body_S) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((y) ▪ a)) ▪ a)) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ a) ▪ ((y) ▪ a))) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ a) ▪ ((y) ▪ a))) ▪ a)) (el-⇒ (el-∀ (coq.nat.sym_eq_times_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ a) ▪ ((y) ▪ a))) ▪ a)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (a)) (((coq.nat.plus) ▪ a) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_n_O) (a))))))))))) (in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (n)) (((coq.nat.times) ▪ n) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (coq.nat.times_n_1) (n))))) (in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ c : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ c)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ b) ▪ c))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (b)) (c))))))) (coq.nat.commutative_times);
symbol bigop_diff : Prf (`∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ i : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x)))) ≔ in-∀ (λ p : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ _x_365) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))))) (in-⇒ (λ ltO : Prf (((coq.nat.lt) ▪ i) ▪ coq.nat.O), el-⇒ (el-∀ (coq.connectives.falsity) (((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ coq.nat.O)) (ltO)) (el-∀ (coq.nat.not_le_Sn_O) (i)))))) (in-∀ (λ n0 : El (coq.nat.nat),  in-⇒ (λ Hind : Prf ((((coq.nat.lt) ▪ i) ▪ n0) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x)))), in-⇒ (λ lein : Prf (((coq.nat.lt) ▪ i) ▪ ((coq.nat.S) ▪ n0)), in-⇒ (λ pi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ i) ▪ n0)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ n0)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))))) (in-⇒ (λ Hi : Prf (((coq.nat.lt) ▪ i) ▪ n0), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))))) (in-⇒ (λ pn : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' x0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x0))) ▪ ((p) ▪ x0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x0 : El (coq.nat.nat), (f) ▪ x0))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ ((f) ▪ n0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ ((f) ▪ i))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) ▪ (((coq.nat.times) ▪ x) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) ▪ x_1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ x)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x)))))) (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) (el-⇒ (el-⇒ (Hind) (Hi)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p) ▪ i)) (pi))))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ ((f) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) (el-∀ (el-∀ (el-∀ (assoc) ((f) ▪ n0)) ((f) ▪ i)) (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))))) (((coq.nat.times) ▪ ((f) ▪ i)) ▪ ((f) ▪ n0))) (el-∀ (el-∀ (coq.nat.commutative_times) ((f) ▪ i)) ((f) ▪ n0)))) (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((coq.nat.times) ▪ ((f) ▪ n0)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))))) (el-∀ (el-∀ (el-∀ (assoc) ((f) ▪ i)) ((f) ▪ n0)) (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ (((coq.nat.eqb) ▪ i) ▪ i0)))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Strue) (coq.nat.nat)) (n0)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ __))) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ __)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.bool.bool)) ((p) ▪ n0)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ coq.bool.true)) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.bool.bool)) ((p) ▪ n0)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ __)) ▪ ((p) ▪ n0))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ x)) ▪ ((p) ▪ n0))) ▪ ((p) ▪ n0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ y)) ▪ ((p) ▪ n0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) ((p) ▪ n0)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ y))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ y)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ coq.bool.false)))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ coq.bool.false)) ▪ ((p) ▪ n0)))))))) (((coq.nat.eqb) ▪ i) ▪ n0)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) (i)) (n0)) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_eq) (i)) (n0)) (Hi))))) (coq.bool.true)) (pn))) (coq.bool.true)) (pn)))) ((p) ▪ n0)) (pn))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Strue) (coq.nat.nat)) (n0)) (p)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p) ▪ n0)) (pn)))))) (in-⇒ (λ pn : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' x0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x0))) ▪ ((p) ▪ x0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x0 : El (coq.nat.nat), (f) ▪ x0))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))))) (((((((bigop) at (coq.nat.nat)) ▪ n0) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) (el-⇒ (el-⇒ (Hind) (Hi)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p) ▪ i)) (pi))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (n0)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ __))) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.false)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ __)) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.false)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.false)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false))) (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.bool.bool)) ((p) ▪ n0)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ coq.bool.false)) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.bool.bool)) ((p) ▪ n0)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ n0))) ▪ __)) ▪ ((p) ▪ n0))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ x)) ▪ ((p) ▪ n0))) ▪ ((p) ▪ n0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ y)) ▪ ((p) ▪ n0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) ((p) ▪ n0)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ y))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ y)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ n0)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ coq.bool.false)))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ coq.bool.false)) ▪ ((p) ▪ n0)))))))) (((coq.nat.eqb) ▪ i) ▪ n0)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) (i)) (n0)) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_eq) (i)) (n0)) (Hi))))) (coq.bool.false)) (pn))) (coq.bool.false)) (pn)))) ((p) ▪ n0)) (pn))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n0)) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (n0)) (p)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.false)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.false)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false))) ((p) ▪ n0)) (pn)))))) (el-∀ (coq.bool.true_or_false) ((p) ▪ n0))))) (in-⇒ (λ Hi : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ n0), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (i)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ x_1)) ▪ (`λ' x : El (coq.nat.nat), (p) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ x_1)) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ i) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((coq.nat.times) ▪ ((f) ▪ i)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ i)) ▪ (`λ' x0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x0))) ▪ ((p) ▪ x0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x0 : El (coq.nat.nat), (f) ▪ x0))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f) (coq.nat.nat)) (coq.nat.nat)) ((coq.nat.times) ▪ ((f) ▪ i))) (((((((bigop) at (coq.nat.nat)) ▪ i) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ i)) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ x))) ▪ ((p) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ i) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ i) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) ▪ x)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (same_bigop) (coq.nat.nat)) (i)) (p)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ __))) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (f)) (in-∀ (λ k : El (coq.nat.nat),  in-⇒ (λ ltki : Prf (((coq.nat.lt) ▪ k) ▪ i), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ x)) ▪ ((p) ▪ k)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ coq.bool.false) ▪ y))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.bool.bool)) ((p) ▪ k)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ k)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) ((p) ▪ k))))) (((coq.nat.eqb) ▪ i) ▪ k)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) (i)) (k)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ k)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ i)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ k), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ ((coq.nat.S) ▪ k)) ▪ i)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ i)) (ltki)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ __)) ▪ i)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ i))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ i))) (k)) (auto))))) (el-∀ (coq.nat.not_le_Sn_n) (i)))))))) (in-∀ (λ i0 : El (coq.nat.nat),  in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ i0) ▪ i), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p) ▪ i0)) ▪ coq.bool.true), el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((f) ▪ i0))))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ i)) ▪ (`λ' i0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ i0))) ▪ ((p) ▪ i0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ i) ▪ __))) ▪ ((p) ▪ __))) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ x)) ▪ ((p) ▪ i))) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.bool.bool)) ((p) ▪ i)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ coq.bool.true))) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.false) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true) ▪ coq.bool.true))) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p) ▪ i)) ▪ coq.bool.false) ▪ y))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ coq.bool.true)) ▪ ((p) ▪ i)))))) (((coq.nat.eqb) ▪ i) ▪ i)) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_to_eqb_true) (i)) (i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i)))))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ i)) ▪ (`λ' i0 : El (coq.nat.nat), (p) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Strue) (coq.nat.nat)) (i)) (p)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p) ▪ i)) (pi))))) (n0)) (Hi)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (i)) (n0)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (i)) (n0)) (lein))))))))) (n)))));
symbol sub_hk : Els (↑ ((coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ prop)) ≔ `λ' h : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' n1 : El (coq.nat.nat), `λ' n2 : El (coq.nat.nat), `λ' p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h) ▪ i))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i))) ▪ i);
symbol iso : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ (coq.nat.nat ⇝ coq.bool.bool) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ prop)) ≔ `λ' n1 : El (coq.nat.nat), `λ' n2 : El (coq.nat.nat), `λ' p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `λ' f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `λ' f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' h : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1)));
symbol sub_hkO : Prf (`∀ h : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ k : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n1 : El (coq.nat.nat), `∀ n2 : El (coq.nat.nat), `∀ p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), ((((coq.logic.eq) at (coq.nat.nat)) ▪ n1) ▪ coq.nat.O) ⇒ ((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2) ≔ in-∀ (λ h : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ k : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n1 : El (coq.nat.nat),  in-∀ (λ n2 : El (coq.nat.nat),  in-∀ (λ p1 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p2 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ up0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n1) ▪ coq.nat.O), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ n1), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (coq.nat.O)) (`λ' x : El (coq.nat.nat), ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h) ▪ i))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i))) ▪ i))) (el-⇒ (el-∀ (coq.connectives.falsity) (((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h) ▪ i))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i))) ▪ i))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ coq.nat.O)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ n1)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ coq.nat.O)) (lti)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ __)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ coq.nat.O))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ i)) ▪ coq.nat.O))) (n1)) (up0)))) (el-∀ (coq.nat.not_le_Sn_O) (i))))) (n1)) (up0))))))))))));
symbol sub0_to_false : Prf (`∀ h : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ k : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n1 : El (coq.nat.nat), `∀ n2 : El (coq.nat.nat), `∀ p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), ((((coq.logic.eq) at (coq.nat.nat)) ▪ n1) ▪ coq.nat.O) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1) ⇒ `∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n2) ⇒ (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false) ≔ in-∀ (λ h : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ k : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n1 : El (coq.nat.nat),  in-∀ (λ n2 : El (coq.nat.nat),  in-∀ (λ p1 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p2 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ up0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n1) ▪ coq.nat.O), in-⇒ (λ sub : Prf (((((((((sub_hk) ▪ h) ▪ k) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ n2), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false)) (in-⇒ (λ ptrue : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n1)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((h) ▪ i))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i))) ▪ i)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false)) (in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n1)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((h) ▪ i))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n1)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((h) ▪ i))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i))) ▪ i) ⇒ (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false)) (in-⇒ (λ hi : Prf (((coq.nat.lt) ▪ ((h) ▪ i)) ▪ n1), el-⇒ (el-∀ (coq.connectives.falsity) (((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((h) ▪ i))) ▪ coq.bool.true) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i))) ▪ i) ⇒ (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ ((coq.nat.S) ▪ ((h) ▪ i))) ▪ coq.nat.O)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ ((coq.nat.S) ▪ ((h) ▪ i))) ▪ n1)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ ((h) ▪ i))) ▪ coq.nat.O)) (hi)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ ((h) ▪ i))) ▪ __)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ ((h) ▪ i))) ▪ coq.nat.O))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ ((h) ▪ i))) ▪ coq.nat.O))) (n1)) (up0)))) (el-∀ (coq.nat.not_le_Sn_O) ((h) ▪ i)))))) (_clearme)))) (el-⇒ (el-⇒ (el-∀ (sub) (i)) (lti)) (ptrue))))) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ i)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.false)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.false)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false))) ((p2) ▪ i)) (auto)))) (el-∀ (coq.bool.true_or_false) ((p2) ▪ i))))))))))))));
symbol sub_lt : Prf (`∀ e : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ p : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((((((((sub_hk) ▪ (`λ' x : El (coq.nat.nat), x)) ▪ (`λ' x : El (coq.nat.nat), x)) ▪ n) ▪ m) ▪ p) ▪ p) ▪ e) ▪ e) ≔ in-∀ (λ e : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ n), in-⇒ (λ fi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((f) ▪ i)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ i) ▪ m)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((f) ▪ i)) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ i) ▪ m)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((f) ▪ i)) ▪ coq.bool.true)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_to_le_to_lt) (i)) (n)) (m)) (lti)) (lenm))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((f) ▪ i)) (fi)))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))))))))));
symbol transitive_sub : Prf (`∀ h1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ k1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ h2 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ k2 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ n1 : El (coq.nat.nat), `∀ n2 : El (coq.nat.nat), `∀ n3 : El (coq.nat.nat), `∀ p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p3 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ f3 : El ((coq.nat.nat ⇝ coq.nat.nat)), (((((((((sub_hk) ▪ h1) ▪ k1) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ h2) ▪ k2) ▪ n2) ▪ n3) ▪ p2) ▪ p3) ▪ f2) ▪ f3) ⇒ ((((((((sub_hk) ▪ (`λ' x : El (coq.nat.nat), (h2) ▪ ((h1) ▪ x))) ▪ (`λ' x : El (coq.nat.nat), (k1) ▪ ((k2) ▪ x))) ▪ n1) ▪ n3) ▪ p1) ▪ p3) ▪ f1) ▪ f3) ≔ in-∀ (λ h1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ k1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ h2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ k2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ n1 : El (coq.nat.nat),  in-∀ (λ n2 : El (coq.nat.nat),  in-∀ (λ n3 : El (coq.nat.nat),  in-∀ (λ p1 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p2 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p3 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f3 : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ sub1 : Prf (((((((((sub_hk) ▪ h1) ▪ k1) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2), in-⇒ (λ sub2 : Prf (((((((((sub_hk) ▪ h2) ▪ k2) ▪ n2) ▪ n3) ▪ p2) ▪ p3) ▪ f2) ▪ f3), in-∀ (λ i : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i) ▪ n1), in-⇒ (λ fi : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h1) ▪ i)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h1) ▪ i))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((h1) ▪ i))) ▪ i)) (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i))))) ▪ i))) (in-⇒ (λ _clearme : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h1) ▪ i)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h1) ▪ i))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((h1) ▪ i)) ▪ n2)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h1) ▪ i))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((h1) ▪ i))) ▪ i) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i))))) ▪ i))) (in-⇒ (λ lth1i : Prf (((coq.nat.lt) ▪ ((h1) ▪ i)) ▪ n2), in-⇒ (λ fh1i : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p2) ▪ ((h1) ▪ i))) ▪ coq.bool.true), in-⇒ (λ ei : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((h1) ▪ i))) ▪ i), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ ((h1) ▪ i))) (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i))))) ▪ i))) (in-⇒ (λ _clearme0 : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ ((h1) ▪ i)) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i))))) ▪ i))) (in-⇒ (λ H1 : Prf (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3), in-⇒ (λ H2 : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true), in-⇒ (λ H3 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ ((h1) ▪ i)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ ((k2) ▪ ((h2) ▪ ((h1) ▪ i))))) ▪ i)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ ((h2) ▪ ((h1) ▪ i))) ▪ n3)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) ▪ coq.bool.true)) (H1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p3) ▪ ((h2) ▪ ((h1) ▪ i)))) (H2)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((h1) ▪ i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((k1) ▪ __)) ▪ i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ i)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i))) ((k1) ▪ ((h1) ▪ i))) (ei))) ((k2) ▪ ((h2) ▪ ((h1) ▪ i)))) (H3))))))) (_clearme0)))) (el-⇒ (el-⇒ (el-∀ (sub2) ((h1) ▪ i)) (lth1i)) (fh1i))))))) (_clearme)))) (el-⇒ (el-⇒ (el-∀ (sub1) (i)) (lti)) (fi))))))))))))))))))));
symbol let_clause_10471 : Prf (`∀ n1 : El (coq.nat.nat), `∀ n2 : El (coq.nat.nat), `∀ p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), (((((((iso) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2) ⇒ `∀ h : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1))) ⇒ `∀ k : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1)) ⇒ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2)) ⇒ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i))) ⇒ `∀ i : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (`∀ f : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ m) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ m) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ m) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0))) ⇒ `∀ p20 : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ m)) ▪ p1) ▪ p20) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ ((coq.nat.S) ▪ m)) ▪ coq.nat.O) ▪ p20) ▪ p1) ▪ f2) ▪ f1) ⇒ `∀ x2571 : El (coq.nat.nat), `∀ x2572 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x2571) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ x2572) ▪ (((coq.div_mod.div) ▪ x2571) ▪ x2572))) ▪ (((coq.div_mod.mod) ▪ x2571) ▪ x2572))) ≔ in-∀ (λ n1 : El (coq.nat.nat),  in-∀ (λ n2 : El (coq.nat.nat),  in-∀ (λ p1 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p2 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme : Prf (((((((iso) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2), in-∀ (λ h : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1))), in-∀ (λ k : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme1 : Prf (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1)), in-⇒ (λ _clearme2 : Prf (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2)), in-⇒ (λ same : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i))), in-∀ (λ i : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ m) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ m) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ m) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0))), in-∀ (λ p20 : El (coq.nat.nat ⇝ coq.bool.bool),  in-⇒ (λ __ : Prf (((coq.nat.le) ▪ coq.nat.O) ▪ n1), in-⇒ (λ sub1 : Prf (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ m)) ▪ p1) ▪ p20) ▪ f1) ▪ f2), in-⇒ (λ sub2 : Prf (((((((((sub_hk) ▪ k) ▪ h) ▪ ((coq.nat.S) ▪ m)) ▪ coq.nat.O) ▪ p20) ▪ p1) ▪ f2) ▪ f1), in-∀ (λ x2571 : El (coq.nat.nat),  in-∀ (λ x2572 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ x2571) ▪ x2572)) ▪ x2572)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x2571) ▪ (((coq.nat.plus) ▪ __1) ▪ (((coq.div_mod.mod) ▪ x2571) ▪ x2572)))) (el-∀ (el-∀ (coq.div_mod.div_mod) (x2571)) (x2572))) (((coq.nat.times) ▪ x2572) ▪ (((coq.div_mod.div) ▪ x2571) ▪ x2572))) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.div_mod.div) ▪ x2571) ▪ x2572)) (x2572))))))))))))))))))))))));
symbol bigop_iso : Prf (`∀ n1 : El (coq.nat.nat), `∀ n2 : El (coq.nat.nat), `∀ p1 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ p2 : El ((coq.nat.nat ⇝ coq.bool.bool)), `∀ f1 : El ((coq.nat.nat ⇝ coq.nat.nat)), `∀ f2 : El ((coq.nat.nat ⇝ coq.nat.nat)), (((((((iso) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f1) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f2) ▪ i))) ≔ in-∀ (λ n1 : El (coq.nat.nat),  in-∀ (λ n2 : El (coq.nat.nat),  in-∀ (λ p1 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ p2 : El (coq.nat.nat ⇝ coq.bool.bool),  in-∀ (λ f1 : El (coq.nat.nat ⇝ coq.nat.nat),  in-∀ (λ f2 : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme : Prf (((((((iso) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat ⇝ coq.nat.nat)) (`λ' h : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1)))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f1) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f2) ▪ i)))) (in-∀ (λ h : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.ex) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1))), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat ⇝ coq.nat.nat)) (`λ' k : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f1) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f2) ▪ i)))) (in-∀ (λ k : El (coq.nat.nat ⇝ coq.nat.nat),  in-⇒ (λ _clearme1 : Prf (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) ▪ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2))) (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f1) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f2) ▪ i)))) (in-⇒ (λ _clearme2 : Prf (((coq.connectives.And) ▪ (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) ▪ (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i)))) (((((((((sub_hk) ▪ h) ▪ k) ▪ n1) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2)) ((((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n1) ▪ p2) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n1) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f1) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f2) ▪ i)))) (in-⇒ (λ same : Prf (`∀ i : El (coq.nat.nat), (((coq.nat.lt) ▪ i) ▪ n1) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i)) ▪ coq.bool.true) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((f1) ▪ i)) ▪ ((f2) ▪ ((h) ▪ i))), el-⇒ (el-∀ (el-∀ (coq.nat.le_gen) (`λ' __ : El (coq.nat.nat), (((((((((sub_hk) ▪ h) ▪ k) ▪ __) ▪ n2) ▪ p1) ▪ p2) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ __) ▪ p2) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ __) ▪ (`λ' i : El (coq.nat.nat), (p1) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f1) ▪ i))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i : El (coq.nat.nat), (p2) ▪ i)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i : El (coq.nat.nat), (f2) ▪ i)))) (n1)) (in-∀ (λ i : El (coq.nat.nat),  el-∀ (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ f : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ _x_365) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ _x_365) ▪ n2) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ _x_365) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ f : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ _x_365) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ _x_365) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ _x_365) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (in-∀ (λ f : El (coq.nat.nat ⇝ coq.bool.bool),  el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ coq.nat.O) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' iO : El (coq.nat.nat), (p1) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f1) ▪ iO))) ▪ (((((y) ▪ (`λ' iO : El (coq.nat.nat), (f) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f2) ▪ iO)))) (el-⇒ (el-∀ (el-∀ₚ (sym_eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ coq.nat.O) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' iO : El (coq.nat.nat), (p1) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f1) ▪ iO))) ▪ (((((y) ▪ (`λ' iO : El (coq.nat.nat), (f) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f2) ▪ iO)))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_body_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ coq.nat.O) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' iO : El (coq.nat.nat), (p1) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f1) ▪ iO))) ▪ (((((y) ▪ (`λ' iO : El (coq.nat.nat), (p1) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f1) ▪ iO)))) (el-⇒ (el-∀ (el-∀ₚ (eq_bigop_O) (coq.nat.nat)) (`λ' y : El (((coq.nat.nat ⇝ coq.bool.bool) ⇝ coq.nat.nat ⇝ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ⇝ (coq.nat.nat ⇝ coq.nat.nat) ⇝ coq.nat.nat)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ coq.nat.O) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' iO : El (coq.nat.nat), (p1) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f1) ▪ iO))) ▪ (((((y) ▪ (`λ' iO : El (coq.nat.nat), (p1) ▪ iO)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' iO : El (coq.nat.nat), (f1) ▪ iO)))) (in-⇒ (λ auto : Prf (((coq.nat.le) ▪ coq.nat.O) ▪ n1), in-⇒ (λ auto' : Prf (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ coq.nat.O) ▪ p1) ▪ f) ▪ f1) ▪ f2), in-⇒ (λ auto'' : Prf (((((((((sub_hk) ▪ k) ▪ h) ▪ coq.nat.O) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1), el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0)))))))))))) (in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ coq.nat.O) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ m) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ m) ▪ coq.nat.O) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ m) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0))), in-∀ (λ p20 : El (coq.nat.nat ⇝ coq.bool.bool),  in-⇒ (λ __ : Prf (((coq.nat.le) ▪ coq.nat.O) ▪ n1), in-⇒ (λ sub1 : Prf (((((((((sub_hk) ▪ h) ▪ k) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ m)) ▪ p1) ▪ p20) ▪ f1) ▪ f2), in-⇒ (λ sub2 : Prf (((((((((sub_hk) ▪ k) ▪ h) ▪ ((coq.nat.S) ▪ m)) ▪ coq.nat.O) ▪ p20) ▪ p1) ▪ f2) ▪ f1), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ m) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ x)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (Hind) (p20)) (el-∀ (coq.nat.le_O_n) (n1))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (sub_hkO) (h)) (k)) (coq.nat.O)) (m)) (p1)) (p20)) (f1)) (f2)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (transitive_sub) (`λ' x : El (coq.nat.nat), x)) (`λ' x : El (coq.nat.nat), x)) (k)) (h)) (m)) ((coq.nat.S) ▪ m)) (coq.nat.O)) (p20)) (p20)) (p1)) (f2)) (f2)) (f1)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (sub_lt) (f2)) (p20)) (m)) ((coq.nat.S) ▪ m)) (el-∀ (coq.nat.le_n_Sn) (m)))) (sub2)))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ m)) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (m)) (p20)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f2)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (sub0_to_false) (k)) (h)) (coq.nat.O)) ((coq.nat.S) ▪ m)) (p1)) (p20)) (f1)) (f2)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O))) (sub2)) (m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.lt) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ (((coq.nat.plus) ▪ (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O)))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (((coq.nat.lt) ▪ m) ▪ ((coq.nat.S) ▪ m))) (el-∀ (el-∀ (el-∀ (coq.nat.lt_plus_Sn_r) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O))) (coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ (((coq.nat.plus) ▪ __1) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.lt) ▪ m) ▪ ((coq.nat.S) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ __1) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ coq.nat.O)))) ▪ (((coq.nat.lt) ▪ m) ▪ ((coq.nat.S) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((coq.nat.S) ▪ m)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ m) ▪ __1)) ▪ (((coq.nat.lt) ▪ m) ▪ ((coq.nat.S) ▪ m)))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.lt) ▪ m) ▪ ((coq.nat.S) ▪ m)))) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ coq.nat.O)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ __1)) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) (m)) (coq.nat.O))) (m)) (el-∀ (coq.nat.plus_n_O) (m))))) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O))) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ coq.nat.O)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O))) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ __1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O))) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O))) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __1)) (el-∀ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (let_clause_10471) (n1)) (n2)) (p1)) (p2)) (f1)) (f2)) (_clearme)) (h)) (_clearme0)) (k)) (_clearme1)) (_clearme2)) (same)) (i)) (m)) (Hind)) (p20)) (__)) (sub1)) (sub2)) (m)) (coq.nat.O))) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O))) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)))) (coq.nat.O)) (el-∀ (coq.nat.times_O_n) (((coq.div_mod.div) ▪ m) ▪ coq.nat.O)))) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) (coq.nat.O)))) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_O_n) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O))))) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O))) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O))) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __1)) (el-∀ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (let_clause_10471) (n1)) (n2)) (p1)) (p2)) (f1)) (f2)) (_clearme)) (h)) (_clearme0)) (k)) (_clearme1)) (_clearme2)) (same)) (i)) (m)) (Hind)) (p20)) (__)) (sub1)) (sub2)) (m)) (coq.nat.O))) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ coq.nat.O) ▪ (((coq.div_mod.div) ▪ m) ▪ coq.nat.O))) (((coq.div_mod.mod) ▪ m) ▪ coq.nat.O))))))))))))))) (n2))) (in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ f : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.nat.le) ▪ n) ▪ n1) ⇒ (((((((((sub_hk) ▪ h) ▪ k) ▪ n) ▪ n2) ▪ p1) ▪ f) ▪ f1) ▪ f2) ⇒ (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ n) ▪ f) ▪ p1) ▪ f2) ▪ f1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (f) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0))), in-∀ (λ p20 : El (coq.nat.nat ⇝ coq.bool.bool),  in-⇒ (λ ltn : Prf (((coq.nat.le) ▪ ((coq.nat.S) ▪ n)) ▪ n1), in-⇒ (λ sub1 : Prf (((((((((sub_hk) ▪ h) ▪ k) ▪ ((coq.nat.S) ▪ n)) ▪ n2) ▪ p1) ▪ p20) ▪ f1) ▪ f2), in-⇒ (λ sub2 : Prf (((((((((sub_hk) ▪ k) ▪ h) ▪ n2) ▪ ((coq.nat.S) ▪ n)) ▪ p20) ▪ p1) ▪ f2) ▪ f1), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.true)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.false)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (in-⇒ (λ p1n : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.true), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f1) ▪ n)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ n)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ n))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ n))) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f1) ▪ n)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (in-⇒ (λ _clearme3 : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ n)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ n))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((h) ▪ n)) ▪ n2)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ n))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ n))) ▪ n) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f1) ▪ n)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0)))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (in-⇒ (λ hn : Prf (((coq.nat.lt) ▪ ((h) ▪ n)) ▪ n2), in-⇒ (λ p2hn : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ n))) ▪ coq.bool.true), in-⇒ (λ eqn : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ n))) ▪ n), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ ((f2) ▪ ((h) ▪ n))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ x))) ▪ ((p20) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f2) ▪ x)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((f1) ▪ n)) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0)))) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((f2) ▪ ((h) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ x) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0)))) ▪ (((coq.nat.times) ▪ ((f2) ▪ ((h) ▪ n))) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' x0 : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ x0))) ▪ ((p20) ▪ x0))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x0 : El (coq.nat.nat), (f2) ▪ x0))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (el-∀ₚ (coq.logic.eq_f) (coq.nat.nat)) (coq.nat.nat)) ((coq.nat.times) ▪ ((f2) ▪ ((h) ▪ n)))) (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' x : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ x))) ▪ ((p20) ▪ x))) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f2) ▪ x))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (Hind) (`λ' __ : El (coq.nat.nat), ((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ __))) ▪ ((p20) ▪ __))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) (n)) (n1)) (ltn))) (in-∀ (λ i0 : El (coq.nat.nat),  in-⇒ (λ ltin : Prf (((coq.nat.lt) ▪ i0) ▪ n), in-⇒ (λ p1i : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ i0)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ i0))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i0))) ▪ i0)) (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0)))) ▪ ((p20) ▪ ((h) ▪ i0)))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i0))) ▪ i0))) (in-⇒ (λ _clearme4 : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ i0))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ i0))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i0))) ▪ i0) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0)))) ▪ ((p20) ▪ ((h) ▪ i0)))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i0))) ▪ i0))) (in-⇒ (λ h1i : Prf (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2), in-⇒ (λ p2h1i : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ i0))) ▪ coq.bool.true), in-⇒ (λ eqi : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i0))) ▪ i0), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0)))) ▪ ((p20) ▪ ((h) ▪ i0)))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ ((h) ▪ i0))) ▪ i0)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ ((h) ▪ i0)) ▪ n2)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0)))) ▪ ((p20) ▪ ((h) ▪ i0)))) ▪ coq.bool.true)) (h1i)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ x)) ▪ ((p20) ▪ ((h) ▪ i0)))) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p20) ▪ ((h) ▪ i0))) ▪ coq.bool.false) ▪ y)) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.bool.bool)) ((p20) ▪ ((h) ▪ i0))) (coq.bool.false)) (`λ' y : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ y) ▪ coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p20) ▪ ((h) ▪ i0))) (p2h1i))))) (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_eqb_false) ((h) ▪ n)) ((h) ▪ i0)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ i0) ▪ n)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ ((h) ▪ i0)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ n)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))) (i0)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((k) ▪ ((h) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ n)) (eqn)) (i0)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((h) ▪ i0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ __)) ▪ i0)) (eqi)) ((h) ▪ n)) (auto)))))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_eq) (i0)) (n)) (ltin))))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ i0)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i0))) ((k) ▪ ((h) ▪ i0))) (eqi))))))) (_clearme4)))) (el-⇒ (el-⇒ (el-∀ (sub1) (i0)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S) ((coq.nat.S) ▪ i0)) (n)) (ltin))) (p1i))))))) (in-∀ (λ j : El (coq.nat.nat),  in-⇒ (λ ltj : Prf (((coq.nat.lt) ▪ j) ▪ n2), in-⇒ (λ p2j : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ j))) ▪ ((p20) ▪ j))) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ j))) ▪ j)) (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ j))) ▪ j))) (in-⇒ (λ _clearme4 : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ ((coq.nat.S) ▪ n))) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ j))) ▪ j) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ j))) ▪ j))) (in-⇒ (λ ltkj : Prf (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ ((coq.nat.S) ▪ n)), in-⇒ (λ p1kj : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true), in-⇒ (λ eqj : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ j))) ▪ j), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ j))) ▪ j)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ j))) ▪ coq.bool.true)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ j)) ▪ n)) (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n), auto))) (in-⇒ (λ eqkj : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ j)) ▪ n), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.lt) ▪ ((k) ▪ j)) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.eqb_elim) ((h) ▪ n)) (j)) (`λ' __ : El (coq.bool.bool), ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((coq.bool.andb) ▪ ((coq.bool.notb) ▪ __)) ▪ ((p20) ▪ j))) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p20) ▪ j)) ▪ coq.bool.false) ▪ y)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) ((p20) ▪ j)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ y) ▪ coq.bool.true) ⇒ coq.connectives.False)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.false) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) ((((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.true) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.true) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) (coq.bool.false)) (auto'))) (coq.bool.not_eq_true_false))))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.bool.bool)) (coq.bool.false)) (coq.bool.true)) (`λ' y : El (coq.bool.bool), ((coq.connectives.Not) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j)) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ (((((coq.bool.match_bool_type) at (coq.bool.bool)) ▪ ((p20) ▪ j)) ▪ coq.bool.false) ▪ y)) ▪ coq.bool.true) ⇒ coq.connectives.False)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.bool.bool)) ((p20) ▪ j)) (coq.bool.false)) (`λ' y : El (coq.bool.bool), ((coq.connectives.Not) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j)) ⇒ ((((coq.logic.eq) at (coq.bool.bool)) ▪ y) ▪ coq.bool.true) ⇒ coq.connectives.False)) (in-⇒ (λ auto : Prf ((coq.connectives.Not) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j)), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ j)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ n)) ▪ j)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (j)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ j)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (j))) ((h) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((k) ▪ j)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ __)) ▪ j)) (eqj)) (n)) (eqkj)))) (auto))))))) (p2j))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) ((k) ▪ j)) (n)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) ((k) ▪ j)) (n)) (ltkj))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p1) ▪ ((k) ▪ j))) (p1kj)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (j)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ j)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (j))) ((h) ▪ ((k) ▪ j))) (eqj))))))) (_clearme4)))) (el-⇒ (el-⇒ (el-∀ (sub2) (j)) (ltj)) (el-⇒ (el-∀ (el-∀ (coq.bool.andb_true_r) ((coq.bool.notb) ▪ (((coq.nat.eqb) ▪ ((h) ▪ n)) ▪ j))) ((p20) ▪ j)) (p2j)))))))))) ((f1) ▪ n)) (el-⇒ (el-⇒ (el-∀ (same) (n)) (ltn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p1) ▪ n)) (p1n))))) (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' x : El (coq.nat.nat), (p20) ▪ x)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' x : El (coq.nat.nat), (f2) ▪ x))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (bigop_diff) (p20)) (f2)) ((h) ▪ n)) (n2)) (hn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p20) ▪ ((h) ▪ n))) (p2hn)))))))) (_clearme3)))) (el-⇒ (el-⇒ (el-∀ (sub1) (n)) (el-∀ (coq.nat.le_n) ((coq.nat.S) ▪ n))) (p1n)))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Strue) (coq.nat.nat)) (n)) (p1)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p1) ▪ n)) (p1n)))))) (in-⇒ (λ p1n : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ n)) ▪ coq.bool.false), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((((((bigop) at (coq.nat.nat)) ▪ n) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x) ▪ (((((((bigop) at (coq.nat.nat)) ▪ n2) ▪ (`λ' i0 : El (coq.nat.nat), (p20) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f2) ▪ i0)))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (Hind) (p20)) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) (n)) (n1)) (ltn))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (transitive_sub) (`λ' x : El (coq.nat.nat), x)) (`λ' x : El (coq.nat.nat), x)) (h)) (k)) (n)) ((coq.nat.S) ▪ n)) (n2)) (p1)) (p1)) (p20)) (f1)) (f1)) (f2)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (sub_lt) (f1)) (p1)) (n)) ((coq.nat.S) ▪ n)) (el-∀ (coq.nat.le_n_Sn) (n)))) (sub1))) (in-∀ (λ i0 : El (coq.nat.nat),  in-⇒ (λ lti : Prf (((coq.nat.lt) ▪ i0) ▪ n2), in-⇒ (λ p2i : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p20) ▪ i0)) ▪ coq.bool.true), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ i0))) ▪ i0)) (((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ i0))) ▪ i0))) (in-⇒ (λ _clearme3 : Prf (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ ((coq.nat.S) ▪ n))) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ ((coq.nat.S) ▪ n))) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true)) (((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ i0))) ▪ i0) ⇒ ((coq.connectives.And) ▪ (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ i0))) ▪ i0))) (in-⇒ (λ ltki : Prf (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ ((coq.nat.S) ▪ n)), in-⇒ (λ p1ki : Prf ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true), in-⇒ (λ eqi : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ i0))) ▪ i0), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.connectives.And) ▪ (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) ▪ ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((h) ▪ ((k) ▪ i0))) ▪ i0)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) ((((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ ((k) ▪ i0))) ▪ coq.bool.true)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ i0)) ▪ n)) (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n), auto))) (in-⇒ (λ eqki : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ ((k) ▪ i0)) ▪ n), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.lt) ▪ ((k) ▪ i0)) ▪ n)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) ((((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.true) ▪ coq.bool.false)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ coq.bool.true) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) (coq.bool.false)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.bool.bool)) ((p1) ▪ n)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.false)) (p1n)) (coq.bool.true)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((k) ▪ i0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.bool.bool)) ▪ ((p1) ▪ __)) ▪ coq.bool.true)) (p1ki)) (n)) (eqki))))) (coq.bool.not_eq_true_false))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) ((k) ▪ i0)) (n)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) ((k) ▪ i0)) (n)) (ltki))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.true)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.true)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.true))) ((p1) ▪ ((k) ▪ i0))) (p1ki)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (i0)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ i0)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (i0))) ((h) ▪ ((k) ▪ i0))) (eqi))))))) (_clearme3)))) (el-⇒ (el-⇒ (el-∀ (sub2) (i0)) (lti)) (p2i)))))))) (((((((bigop) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' i0 : El (coq.nat.nat), (p1) ▪ i0)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.times) ▪ (`λ' i0 : El (coq.nat.nat), (f1) ▪ i0))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (bigop_Sfalse) (coq.nat.nat)) (n)) (p1)) ((coq.nat.S) ▪ coq.nat.O)) (coq.nat.times)) (f1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.bool.bool)) (coq.bool.false)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.bool.bool)) ▪ __) ▪ coq.bool.false)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.bool.bool)) (coq.bool.false))) ((p1) ▪ n)) (p1n)))))) (el-∀ (coq.bool.true_or_false) ((p1) ▪ n)))))))))) (i)) (p2)))))) (_clearme2)))) (_clearme1))))) (_clearme0))))) (_clearme))))))));
