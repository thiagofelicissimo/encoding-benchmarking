require open coq.sttfa;
require coq.connectives;
require coq.leibniz;
require coq.nat;
constant symbol fact : Els (↑ (coq.nat.nat ⇝ coq.nat.nat));
constant symbol fact_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_fact : Prf (`∀ n : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat)) ▪ ((fact) ▪ n)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ fact_body) ▪ n));
symbol eq_fact : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((fact) ▪ n)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ fact_body) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat)) ((fact) ▪ n)) ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ fact_body) ▪ n)) (el-∀ (axiom_fact) (n)));
symbol sym_eq_fact : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ fact_body) ▪ n)) ▪ ((fact) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat)) ((fact) ▪ n)) ((((coq.nat.filter_nat_type) at (coq.nat.nat)) ▪ fact_body) ▪ n)) (el-∀ (eq_fact) (n)));
constant symbol axiom_fact_body_O : Prf ((((coq.connectives.equal) at (coq.nat.nat)) ▪ ((fact_body) ▪ coq.nat.O)) ▪ ((coq.nat.S) ▪ coq.nat.O));
symbol eq_fact_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((fact_body) ▪ coq.nat.O)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat)) ((fact_body) ▪ coq.nat.O)) ((coq.nat.S) ▪ coq.nat.O)) (axiom_fact_body_O);
symbol sym_eq_fact_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ ((fact_body) ▪ coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat)) ((fact_body) ▪ coq.nat.O)) ((coq.nat.S) ▪ coq.nat.O)) (eq_fact_body_O);
constant symbol axiom_fact_body_S : Prf (`∀ n : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat)) ▪ ((fact_body) ▪ ((coq.nat.S) ▪ n))) ▪ (((coq.nat.times) ▪ ((fact) ▪ n)) ▪ ((coq.nat.S) ▪ n)));
symbol eq_fact_body_S : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ ((fact_body) ▪ ((coq.nat.S) ▪ n))) ▪ (((coq.nat.times) ▪ ((fact) ▪ n)) ▪ ((coq.nat.S) ▪ n))) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat)) ((fact_body) ▪ ((coq.nat.S) ▪ n))) (((coq.nat.times) ▪ ((fact) ▪ n)) ▪ ((coq.nat.S) ▪ n))) (el-∀ (axiom_fact_body_S) (n)));
symbol sym_eq_fact_body_S : Prf (`∀ n : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ ((fact) ▪ n)) ▪ ((coq.nat.S) ▪ n))) ▪ ((fact_body) ▪ ((coq.nat.S) ▪ n))) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat)) ((fact_body) ▪ ((coq.nat.S) ▪ n))) (((coq.nat.times) ▪ ((fact) ▪ n)) ▪ ((coq.nat.S) ▪ n))) (el-∀ (eq_fact_body_S) (n)));
