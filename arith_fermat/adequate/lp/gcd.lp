require open coq.sttfa;
require coq.bool;
require coq.connectives;
require coq.div_mod;
require coq.leibniz;
require coq.logic;
require coq.nat;
require coq.primes;
constant symbol gcd_aux : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol gcd_aux_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_gcd_aux : Prf (∀ (λ p : El (coq.nat.nat), app (app (el-∀ₖ (coq.connectives.equal) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux) p ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) gcd_aux_body ■) p ■) ■));
symbol eq_gcd_aux : Prf (∀ (λ p : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux) p ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) gcd_aux_body ■) p ■) ■)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux) p ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) gcd_aux_body ■) p ■) ■) (el-∀ (axiom_gcd_aux) (p) ■) ■);
symbol sym_eq_gcd_aux : Prf (∀ (λ p : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) gcd_aux_body ■) p ■) ■) (app (gcd_aux) p ■) ■)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux) p ■) ■) (app (app (el-∀ₖ (coq.nat.filter_nat_type) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) gcd_aux_body ■) p ■) ■) (el-∀ (eq_gcd_aux) (p) ■) ■);
constant symbol axiom_gcd_aux_body_O : Prf (app (app (el-∀ₖ (coq.connectives.equal) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) coq.nat.O ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), m))) ■);
symbol eq_gcd_aux_body_O : Prf (app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) coq.nat.O ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), m))) ■) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) coq.nat.O ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), m))) ■) (axiom_gcd_aux_body_O) ■;
symbol sym_eq_gcd_aux_body_O : Prf (app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), m))) ■) (app (gcd_aux_body) coq.nat.O ■) ■) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) coq.nat.O ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), m))) ■) (eq_gcd_aux_body_O) ■;
constant symbol axiom_gcd_aux_body_S : Prf (∀ (λ p : El (coq.nat.nat), app (app (el-∀ₖ (coq.connectives.equal) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) (app (coq.nat.S) p ■) ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■))) ■));
symbol eq_gcd_aux_body_S : Prf (∀ (λ p : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) (app (coq.nat.S) p ■) ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■))) ■)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) (app (coq.nat.S) p ■) ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■))) ■) (el-∀ (axiom_gcd_aux_body_S) (p) ■) ■);
symbol sym_eq_gcd_aux_body_S : Prf (∀ (λ p : El (coq.nat.nat), app (app (el-∀ₖ (coq.leibniz.leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■))) ■) (app (gcd_aux_body) (app (coq.nat.S) p ■) ■) ■)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (app (gcd_aux_body) (app (coq.nat.S) p ■) ■) ■) (abs (λ m : El (coq.nat.nat), abs (λ n : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■))) ■) (el-∀ (eq_gcd_aux_body_S) (p) ■) ■);
symbol gcd : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ≔ abs (λ n : El (coq.nat.nat), abs (λ m : El (coq.nat.nat), app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (coq.nat.leb) n ■) m ■) ■));
symbol commutative_gcd : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) m ■) ■) (app (app (gcd) m ■) n ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n) ■) (m) ■) (abs (λ __ : El (coq.bool.bool), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) __ ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (coq.nat.leb) m ■) n ■) ■) ■)) ■) (in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) n ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (coq.nat.leb) m ■) n ■) ■) ■) ■) (in-⇒ (λ ltnm : Prf (app (app (coq.nat.lt) n ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool) ■) (coq.bool.false) ■) (abs (λ x : El (coq.bool.bool), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) x ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) y ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) ■) ■) ■) (app (app (coq.nat.leb) m ■) n ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_leb_false) (m) ■) (n) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_le) (n) ■) (m) ■) (ltnm) ■) ■) ■)) ■) (in-⇒ (λ eqnm : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (m) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) x ■) m ■) x ■) ■) (app (app (app (gcd_aux) m ■) x ■) m ■) ■) coq.bool.true ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) x ■) m ■) ■) (app (app (app (gcd_aux) x ■) m ■) x ■) ■) (app (app (coq.nat.leb) m ■) x ■) ■) ■)) ■) (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.bool.match_bool_prop) (abs (λ __ : El (coq.bool.bool), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) coq.bool.true ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) __ ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) coq.bool.true ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) coq.bool.true ■) ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) coq.bool.true ■) ■) y ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) (app (app (app (gcd_aux) m ■) m ■) m ■) ■) coq.bool.true ■) ■) ■) ■) ■) (app (app (coq.nat.leb) m ■) m ■) ■) ■) (n) ■) (eqnm) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (n) ■) (m) ■) (lenm) ■) ■)) ■) (in-⇒ (λ notlenm : Prf (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool) ■) (coq.bool.true) ■) (abs (λ x : El (coq.bool.bool), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.false ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) x ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) y ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) coq.bool.true ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) y ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) y ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.false ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.false ■) ■) ■) ■) ■) ■) ■) (app (app (coq.nat.leb) m ■) n ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_leb_true) (m) ■) (n) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (m) ■) (app (coq.nat.S) m ■) ■) (n) ■) (el-∀ (coq.nat.le_n_Sn) (m) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n) ■) (m) ■) (notlenm) ■) ■) ■) ■)) ■));
symbol gcd_O_l : Prf (∀ (λ m : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) m ■)) ≔ in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat) ■) (m) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) y ■)) ■) (el-⇒ (el-∀ (coq.nat.eq_leb_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.bool.bool)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) m ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (y) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.bool.bool) ■) (coq.nat.leb_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.bool.bool)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) m ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (y) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_leb) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.bool.bool)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) m ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (y) m ■) ■) ■)) ■) (el-⇒ (el-∀ (eq_gcd_aux_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (y) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (gcd_aux_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (y) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (eq_gcd_aux) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (y) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) m ■) ■) ■) ■) ■) ■) ■) ■) ■);
symbol divides_mod_to_divides : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.primes.divides) p ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ⇒ (app (app (coq.primes.divides) p ■) n ■) ⇒ app (app (coq.primes.divides) p ■) m ■)))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ _clearme : Prf (app (app (coq.primes.divides) p ■) (app (app (coq.div_mod.mod) m ■) n ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (p) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ((app (app (coq.primes.divides) p ■) n ■) ⇒ app (app (coq.primes.divides) p ■) m ■) ■) (in-∀ (λ q1 : El (coq.nat.nat),  in-⇒ (λ eq1 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) p ■) q1 ■) ■), in-⇒ (λ _clearme0 : Prf (app (app (coq.primes.divides) p ■) n ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (p) ■) (n) ■) (app (app (coq.primes.divides) p ■) m ■) ■) (in-∀ (λ q2 : El (coq.nat.nat),  in-⇒ (λ eq2 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) p ■) q2 ■) ■), el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p) ■) (m) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) q2 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) q1 ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) q2 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) p ■) q1 ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) x ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) q2 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) x_1 ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) q2 ■) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.plus) x_1 ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (n) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) x_1 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (m) ■) ■) (app (app (coq.nat.plus) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.plus) __ ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (el-∀ (el-∀ (coq.div_mod.div_mod) (m) ■) (n) ■) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) p ■) q2 ■) ■) (eq2) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) q2 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p) ■) (q2) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) p ■) q1 ■) ■) (eq1) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) q2 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) q1 ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus) (p) ■) (app (app (coq.nat.times) q2 ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (q1) ■) ■) ■))) ■) (_clearme0) ■)))) ■) (_clearme) ■)))));
symbol divides_to_gcd_aux : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) p ■) ⇒ (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.primes.divides) n ■) m ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) p ■) m ■) n ■) ■) n ■)))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posp : Prf (app (app (coq.nat.lt) coq.nat.O ■) p ■), el-⇒ (el-∀ (el-⇒ (el-∀ (coq.nat.lt_O_n_elim) (p) ■) (posp) ■) (abs (λ __ : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.primes.divides) n ■) m ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) __ ■) m ■) n ■) ■) n ■)) ■) (in-∀ (λ l : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux) (app (coq.nat.S) l ■) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.primes.divides) n ■) m ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (y) m ■) n ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (gcd_aux_body) ■) (l) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.primes.divides) n ■) m ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (y) m ■) n ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux_body_S) (l) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.primes.divides) n ■) m ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (y) m ■) n ■) ■) n ■)) ■) (in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ divnm : Prf (app (app (coq.primes.divides) n ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool) ■) (coq.bool.true) ■) (abs (λ x : El (coq.bool.bool), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) l ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) x ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat) ■) (n) ■) (app (app (app (gcd_aux) l ■) n ■) (app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) m ■) (abs (λ p0 : El (coq.nat.nat), app (app (app (coq.div_mod.mod_aux) m ■) m ■) p0 ■)) ■) n ■) ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) y ■) n ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (n) ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_dividesb_true) (n) ■) (m) ■) (posn) ■) (divnm) ■) ■))) ■) ■) ■)) ■))));
symbol not_divides_to_gcd_aux : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) (app (coq.nat.S) p ■) ■) m ■) n ■) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux) (app (coq.nat.S) p ■) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (y) m ■) n ■) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (gcd_aux_body) ■) (p) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (y) m ■) n ■) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux_body_S) (p) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (y) m ■) n ■) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (in-⇒ (λ lenm : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ divnm : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool) ■) (coq.bool.false) ■) (abs (λ x : El (coq.bool.bool), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) n ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) x ■) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (n) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) m ■) (abs (λ p0 : El (coq.nat.nat), app (app (app (coq.div_mod.mod_aux) m ■) m ■) p0 ■)) ■) n ■) ■) ■) (abs (λ y : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) y ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) m ■) (abs (λ p0 : El (coq.nat.nat), app (app (app (coq.div_mod.mod_aux) m ■) m ■) p0 ■)) ■) n ■) ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (gcd_aux) p ■) n ■) (app (app (app (el-∀ₖ (coq.nat.match_nat_type) (coq.nat.nat) ■) m ■) (abs (λ p0 : El (coq.nat.nat), app (app (app (coq.div_mod.mod_aux) m ■) m ■) p0 ■)) ■) n ■) ■) ■) ■) ■) (app (app (coq.primes.dividesb) n ■) m ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.not_divides_to_dividesb_false) (n) ■) (m) ■) (lenm) ■) (divnm) ■) ■))) ■) ■) ■)));
symbol divides_gcd_aux_mn : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) p ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) p ■) m ■) n ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) p ■) m ■) n ■) ■) n ■) ■)))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (abs (λ _x_365 : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) _x_365 ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) _x_365 ■) m ■) n ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) _x_365 ■) m ■) n ■) ■) n ■) ■)))) ■) (in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), in-⇒ (λ lenO : Prf (app (app (coq.nat.le) n ■) coq.nat.O ■), el-⇒ (el-∀ (coq.connectives.falsity) (app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) coq.nat.O ■) m ■) n ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) coq.nat.O ■) m ■) n ■) ■) n ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (app (app (coq.nat.lt) coq.nat.O ■) n ■) ■) (posn) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) (n) ■) (coq.nat.O) ■) (lenO) ■) ■) ■)))))) ■) (in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) q ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) n ■) ■))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), in-⇒ (λ lenS : Prf (app (app (coq.nat.le) n ■) (app (coq.nat.S) q ■) ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.primes.divides) n ■) m ■) ■) (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ■) (app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) n ■) ■) ■) (in-⇒ (λ divnm : Prf (app (app (coq.primes.divides) n ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (n) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.And) (app (app (coq.primes.divides) x ■) m ■) ■) (app (app (coq.primes.divides) x ■) n ■) ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (app (app (coq.primes.divides) n ■) m ■) ■) (app (app (coq.primes.divides) n ■) n ■) ■) (divnm) ■) (el-∀ (coq.primes.divides_n_n) (n) ■) ■) ■) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_to_gcd_aux) (app (coq.nat.S) q ■) ■) (m) ■) (n) ■) (el-∀ (coq.nat.lt_O_S) (q) ■) ■) (posn) ■) (divnm) ■) ■)) ■) (in-⇒ (λ ndivnm : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.And) (app (app (coq.primes.divides) x ■) m ■) ■) (app (app (coq.primes.divides) x ■) n ■) ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) n ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) n ■) ■) ■) (in-⇒ (λ H : Prf (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) n ■), in-⇒ (λ H1 : Prf (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) n ■) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_mod_to_divides) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (m) ■) (n) ■) (posn) ■) (H1) ■) (H) ■) ■) (H) ■))) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (Hind) (n) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (in-⇒ (λ auto : Prf (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■), auto)) ■) (in-⇒ (λ modO : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■), el-⇒ (el-∀ (coq.connectives.falsity) (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (app (app (coq.primes.divides) n ■) m ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.mod_O_to_divides) (n) ■) (m) ■) (posn) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) coq.nat.O ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (coq.nat.O) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (modO) ■) ■) ■) (ndivnm) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (el-∀ (coq.nat.le_O_n) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) (app (app (coq.div_mod.mod) m ■) n ■) ■) (n) ■) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m) ■) (n) ■) (posn) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (app (app (coq.div_mod.mod) m ■) n ■) ■) (q) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (app (coq.nat.S) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (n) ■) (app (coq.nat.S) q ■) ■) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m) ■) (n) ■) (posn) ■) ■) (lenS) ■) ■) ■) ■) ■) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (not_divides_to_gcd_aux) (q) ■) (m) ■) (n) ■) (posn) ■) (ndivnm) ■) ■)) ■) (el-∀ (el-∀ (coq.primes.decidable_divides) (n) ■) (m) ■) ■)))))))) ■) (p) ■);
symbol divides_gcd_nm : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) n ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) coq.nat.O ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■) ■) (app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) n ■) ■) ■) (in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) coq.nat.O ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■) ■) (app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) n ■) ■) ■) (in-⇒ (λ posm : Prf (app (app (coq.nat.lt) coq.nat.O ■) m ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n) ■) (m) ■) (abs (λ __ : El (coq.bool.bool), app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) __ ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) __ ■) ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.le) n ■) m ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) m ■) ■) (app (app (coq.primes.divides) y ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.le) n ■) m ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) y ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) n ■) ■)) ■) (in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_gcd_aux_mn) (n) ■) (m) ■) (n) ■) (posn) ■) (lenm) ■) (el-∀ (coq.nat.le_n) (n) ■) ■)) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.false ■) ■) m ■) ■) (app (app (coq.primes.divides) y ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■) ⇒ app (app (coq.connectives.And) (app (app (coq.primes.divides) y ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) n ■) ■)) ■) (in-⇒ (λ notlt : Prf (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) n ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) m ■) ■) (app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) n ■) ■) ■) (in-⇒ (λ auto : Prf (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) n ■), in-⇒ (λ auto' : Prf (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) m ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) n ■) ■) (auto') ■) (auto) ■))) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_gcd_aux_mn) (m) ■) (n) ■) (m) ■) (posm) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (m) ■) (app (coq.nat.S) m ■) ■) (n) ■) (el-∀ (coq.nat.le_n_Sn) (m) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n) ■) (m) ■) (notlt) ■) ■) ■) (el-∀ (coq.nat.le_n) (m) ■) ■) ■)) ■) ■) ■)) ■) (in-⇒ (λ eqmO : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (gcd) n ■) x_1 ■) ■) x_1 ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) x_1 ■) ■) n ■) ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) coq.nat.O ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) n ■) ■) (el-∀ (coq.primes.divides_n_O) (app (app (gcd) n ■) coq.nat.O ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) (app (app (gcd) n ■) coq.nat.O ■) ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) n ■) ■) (el-∀ (coq.primes.divides_n_n) (app (app (gcd) n ■) coq.nat.O ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) __ ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) n ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (prop) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) coq.nat.O ■) ■) n ■) ■) ■) (app (app (gcd) n ■) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (gcd) coq.nat.O ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) coq.nat.O ■) ■) __ ■)) ■) (el-∀ (el-∀ (commutative_gcd) (n) ■) (coq.nat.O) ■) ■) (n) ■) (el-∀ (gcd_O_l) (n) ■) ■) ■) ■) ■) ■) (m) ■) (eqmO) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O) ■) (m) ■) (el-∀ (coq.nat.le_O_n) (m) ■) ■) ■)) ■) (in-⇒ (λ eqnO : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (coq.connectives.And) (app (app (coq.primes.divides) (app (app (gcd) x_1 ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) x_1 ■) m ■) ■) x_1 ■) ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (app (app (coq.primes.divides) (app (app (gcd) coq.nat.O ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) coq.nat.O ■) m ■) ■) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat) ■) (m) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (abs (λ y : El (coq.nat.nat), app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) coq.nat.O ■) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■) y ■)) ■) (el-⇒ (el-∀ (coq.nat.eq_leb_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.bool.bool)), app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) coq.nat.O ■) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) m ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (y) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.bool.bool) ■) (coq.nat.leb_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.bool.bool)), app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) coq.nat.O ■) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) m ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (y) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_leb) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.bool.bool)), app (app (coq.primes.divides) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) coq.nat.O ■) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) m ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (y) m ■) ■) ■)) ■) (el-⇒ (el-∀ (eq_gcd_aux_body_O) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.primes.divides) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (y) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat) ■) (gcd_aux_body) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.primes.divides) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (y) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (eq_gcd_aux) (coq.nat.O) ■) (abs (λ y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), app (app (coq.primes.divides) (app (app (gcd) coq.nat.O ■) m ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (y) m ■) coq.nat.O ■) ■) (app (app (app (gcd_aux) m ■) coq.nat.O ■) m ■) ■) (app (app (coq.nat.leb) coq.nat.O ■) m ■) ■) ■)) ■) (el-∀ (coq.primes.divides_n_n) (app (app (gcd) coq.nat.O ■) m ■) ■) ■) ■) ■) ■) ■) ■) ■) ■) (el-∀ (coq.primes.divides_n_O) (app (app (gcd) coq.nat.O ■) m ■) ■) ■) ■) (n) ■) (eqnO) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O) ■) (n) ■) (el-∀ (coq.nat.le_O_n) (n) ■) ■) ■));
symbol divides_gcd_l : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) n ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.logic.proj2) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) n ■) ■) (el-∀ (el-∀ (divides_gcd_nm) (n) ■) (m) ■) ■));
symbol divides_gcd_r : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.logic.proj1) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) n ■) ■) (el-∀ (el-∀ (divides_gcd_nm) (n) ■) (m) ■) ■));
symbol let_clause_1544 : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ q : El (coq.nat.nat), (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) q ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■)) ■)) ■))) ⇒ ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) (app (coq.nat.S) q ■) ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ ∀ (λ a : El (coq.nat.nat), (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) ⇒ ∀ (λ b : El (coq.nat.nat), (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) n ■) b ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■))))))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) q ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■)) ■)) ■))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), in-⇒ (λ lenS : Prf (app (app (coq.nat.le) n ■) (app (coq.nat.S) q ■) ■), in-⇒ (λ ndivnm : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■), in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■), in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) b ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) __ ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (H) ■) (app (app (coq.nat.times) n ■) b ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■))))))))))))));
symbol let_clause_15441 : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ q : El (coq.nat.nat), (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) q ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■)) ■)) ■))) ⇒ ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) (app (coq.nat.S) q ■) ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ ∀ (λ a : El (coq.nat.nat), (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) ⇒ ∀ (λ b : El (coq.nat.nat), (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) b ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■))))))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) q ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■)) ■)) ■))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), in-⇒ (λ lenS : Prf (app (app (coq.nat.le) n ■) (app (coq.nat.S) q ■) ■), in-⇒ (λ ndivnm : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■), in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■), in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) b ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■)) ■) (H) ■) (app (app (coq.nat.times) n ■) b ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■))))))))))))));
symbol eq_minus_gcd_aux : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) p ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) p ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) p ■) m ■) n ■) ■) ■)) ■)) ■)))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (abs (λ _x_365 : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) _x_365 ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) _x_365 ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) _x_365 ■) m ■) n ■) ■) ■)) ■)) ■)))) ■) (in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), in-⇒ (λ lenO : Prf (app (app (coq.nat.le) n ■) coq.nat.O ■), el-⇒ (el-∀ (coq.connectives.falsity) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) coq.nat.O ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) coq.nat.O ■) m ■) n ■) ■) ■)) ■)) ■) ■) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (app (app (coq.nat.lt) coq.nat.O ■) n ■) ■) (posn) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) (n) ■) (coq.nat.O) ■) (lenO) ■) ■) ■)))))) ■) (in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (coq.nat.le) n ■) m ■) ⇒ (app (app (coq.nat.le) n ■) q ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) m ■) n ■) ■) ■)) ■)) ■))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), in-⇒ (λ lenS : Prf (app (app (coq.nat.le) n ■) (app (coq.nat.S) q ■) ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.primes.divides) n ■) m ■) ■) (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) ■)) ■)) ■) ■) (in-⇒ (λ divnm : Prf (app (app (coq.primes.divides) n ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (n) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) x ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) x ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) x ■) n ■) ■) ■) n ■) ■)) ■)) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) x ■) m ■) ■) ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) m ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) ■) n ■) ■)) ■) (coq.nat.O) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) ■) n ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.plus) n ■) (app (app (coq.nat.times) n ■) coq.nat.O ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) n ■) __ ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) coq.nat.O ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) n ■) __ ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) n ■) __ ■) ■) n ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) n ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (n) ■) ■) (app (app (coq.nat.minus) n ■) coq.nat.O ■) ■) (el-∀ (coq.nat.minus_n_O) (n) ■) ■) ■) (app (app (coq.nat.times) m ■) coq.nat.O ■) ■) (el-∀ (coq.nat.times_n_O) (m) ■) ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O) ■) (m) ■) ■) ■) (app (app (coq.nat.plus) n ■) coq.nat.O ■) ■) (el-∀ (coq.nat.plus_n_O) (n) ■) ■) ■) (app (app (coq.nat.times) n ■) coq.nat.O ■) ■) (el-∀ (coq.nat.times_n_O) (n) ■) ■) ■) (app (app (coq.nat.times) n ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (el-∀ (el-∀ (coq.nat.times_n_Sm) (n) ■) (coq.nat.O) ■) ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (coq.nat.S) coq.nat.O ■) ■) (n) ■) ■) ■) ■) ■) ■) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_to_gcd_aux) (app (coq.nat.S) q ■) ■) (m) ■) (n) ■) (el-∀ (coq.nat.lt_O_S) (q) ■) ■) (posn) ■) (divnm) ■) ■)) ■) (in-⇒ (λ ndivnm : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) x ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) x ■) ■)) ■)) ■)) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■)) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■)) ■) ■) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a0 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a0 ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a0 ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■)) ■) ■) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a0 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a0 ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) a0 ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■)) ■) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a0 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a0 ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) x_1 ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) a0 ■) n ■) ■) ■) x_1 ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) x ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■)) ■)) ■) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) (app (app (coq.nat.times) x ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) m ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■)) ■) (a) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) b ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) x_1 ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) x ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) x ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.plus) x ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) x_1 ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) x ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x_1 ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) __ ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) __ ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) __ ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) __ ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) __ ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) __ ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) n ■) b ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1544) (p) ■) (q) ■) (Hind) ■) (m) ■) (n) ■) (posn) ■) (lenm) ■) (lenS) ■) (ndivnm) ■) (a) ■) (_clearme) ■) (b) ■) (_clearme0) ■) (H) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) n ■) b ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1544) (p) ■) (q) ■) (Hind) ■) (m) ■) (n) ■) (posn) ■) (lenm) ■) (lenS) ■) (ndivnm) ■) (a) ■) (_clearme) ■) (b) ■) (_clearme0) ■) (H) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) (app (app (coq.nat.plus) coq.nat.O ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (el-∀ (coq.nat.plus_O_n) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) ■) (el-∀ (coq.nat.minus_n_n) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a) ■) (n) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a) ■) (n) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.plus_minus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (el-∀ (coq.nat.le_n) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.minus_plus) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.plus) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus) (a) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (app (app (coq.div_mod.mod) m ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (m) ■) (el-∀ (el-∀ (coq.div_mod.div_mod) (m) ■) (n) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) b ■) ■) n ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus_r) (n) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (b) ■) ■) ■) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (b) ■) ■) ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (H) ■)) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a0 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a0 ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) x_1 ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) a0 ■) n ■) ■) ■) x_1 ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) x ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■)) ■)) ■) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) (app (app (coq.nat.times) x ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) m ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■)) ■) (a) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) x ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) x ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) ■) x ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) x ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x_1 ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) __ ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) __ ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) __ ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) __ ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) coq.nat.O ■) __ ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) b ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15441) (p) ■) (q) ■) (Hind) ■) (m) ■) (n) ■) (posn) ■) (lenm) ■) (lenS) ■) (ndivnm) ■) (a) ■) (_clearme) ■) (b) ■) (_clearme0) ■) (H) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) b ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15441) (p) ■) (q) ■) (Hind) ■) (m) ■) (n) ■) (posn) ■) (lenm) ■) (lenS) ■) (ndivnm) ■) (a) ■) (_clearme) ■) (b) ■) (_clearme0) ■) (H) ■) ■) ■) (app (app (coq.nat.plus) coq.nat.O ■) (app (app (coq.nat.times) n ■) b ■) ■) ■) (el-∀ (coq.nat.plus_O_n) (app (app (coq.nat.times) n ■) b ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) ■) (el-∀ (coq.nat.minus_n_n) (app (app (coq.nat.times) n ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a) ■) (n) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) n ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a) ■) (n) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.plus_minus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (coq.nat.le_n) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.minus_plus) (app (app (coq.nat.plus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) n ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a) ■) (app (app (coq.div_mod.div) m ■) n ■) ■) (n) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.plus) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus) (a) ■) (app (app (coq.nat.times) (app (app (coq.div_mod.div) m ■) n ■) ■) n ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) (m) ■) (el-∀ (el-∀ (coq.div_mod.div_mod) (m) ■) (n) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.plus) b ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) n ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus_r) (n) ■) (b) ■) (app (app (coq.nat.times) a ■) (app (app (coq.div_mod.div) m ■) n ■) ■) ■) ■) ■) ■) ■) ■) (app (app (app (gcd_aux) q ■) n ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (H) ■)) ■) (_clearme0) ■))) ■) (_clearme) ■))) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (Hind) (n) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (in-⇒ (λ auto : Prf (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■), auto)) ■) (in-⇒ (λ modO : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■), el-⇒ (el-∀ (coq.connectives.falsity) (app (app (coq.nat.lt) coq.nat.O ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (app (app (coq.primes.divides) n ■) m ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.mod_O_to_divides) (n) ■) (m) ■) (posn) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) coq.nat.O ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (coq.nat.O) ■) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (modO) ■) ■) ■) (ndivnm) ■) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O) ■) (app (app (coq.div_mod.mod) m ■) n ■) ■) (el-∀ (coq.nat.le_O_n) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) (app (app (coq.div_mod.mod) m ■) n ■) ■) (n) ■) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m) ■) (n) ■) (posn) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (app (app (coq.div_mod.mod) m ■) n ■) ■) (q) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (app (coq.nat.S) (app (app (coq.div_mod.mod) m ■) n ■) ■) ■) (n) ■) (app (coq.nat.S) q ■) ■) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m) ■) (n) ■) (posn) ■) ■) (lenS) ■) ■) ■) ■) ■) (app (app (app (gcd_aux) (app (coq.nat.S) q ■) ■) m ■) n ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (not_divides_to_gcd_aux) (q) ■) (m) ■) (n) ■) (posn) ■) (ndivnm) ■) ■)) ■) (el-∀ (el-∀ (coq.primes.decidable_divides) (n) ■) (m) ■) ■)))))))) ■) (p) ■);
symbol let_clause_1549 : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■) ⇒ ∀ (λ x1106 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x1106 ■) (app (app (coq.nat.minus) x1106 ■) m ■) ■)))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ eqm0 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■), in-∀ (λ x1106 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x1106 ■) (app (app (coq.nat.minus) x1106 ■) __ ■) ■)) ■) (el-∀ (coq.nat.minus_n_O) (x1106) ■) ■) (m) ■) (eqm0) ■)))));
symbol let_clause_15491 : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■) ⇒ ∀ (λ x1106 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x1106 ■) (app (app (coq.nat.minus) x1106 ■) n ■) ■)))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ eqn0 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■), in-∀ (λ x1106 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) x1106 ■) (app (app (coq.nat.minus) x1106 ■) __ ■) ■)) ■) (el-∀ (coq.nat.minus_n_O) (x1106) ■) ■) (n) ■) (eqn0) ■))));
symbol let_clause_1551 : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■) ⇒ ∀ (λ x347 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) x347 ■) n ■) ■)))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ eqn0 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■), in-∀ (λ x347 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) x347 ■) __ ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.times) x347 ■) coq.nat.O ■) ■)) ■) (el-∀ (coq.nat.times_n_O) (x347) ■) ■) (n) ■) (eqn0) ■) ■) (n) ■) (eqn0) ■))));
symbol eq_minus_gcd : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) coq.nat.O ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■) ■) (in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.nat.lt) coq.nat.O ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■) ■) (in-⇒ (λ posm : Prf (app (app (coq.nat.lt) coq.nat.O ■) m ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n) ■) (m) ■) (abs (λ __ : El (coq.bool.bool), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) __ ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) __ ■) ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.le) n ■) m ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.true ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) y ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (app (coq.nat.le) n ■) m ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) y ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) ■)) ■)) ■)) ■) (in-⇒ (λ lenm : Prf (app (app (coq.nat.le) n ■) m ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (eq_minus_gcd_aux) (n) ■) (m) ■) (n) ■) (posn) ■) (lenm) ■) (el-∀ (coq.nat.le_n) (n) ■) ■)) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (el-∀ₖ (coq.bool.match_bool_type) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) coq.bool.false ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) y ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat) ■) (app (app (app (gcd_aux) n ■) m ■) n ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ y : El (coq.nat.nat), (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■) ⇒ app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) y ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■)) ■) (in-⇒ (λ nlenm : Prf (app (coq.connectives.Not) (app (app (coq.nat.le) n ■) m ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■) ■) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a0 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a0 ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a0 ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■) ■) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a0 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a0 ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) a0 ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) x ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■) (b) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) x ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■) (a) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) a ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) a ■) ■) __ ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) a ■) ■) (app (app (coq.nat.times) n ■) b ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) b ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) a ■) ■) __ ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) m ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (H) ■) (app (app (coq.nat.times) m ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (m) ■) ■) ■) (app (app (coq.nat.times) n ■) b ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (m) ■) ■) ■) ■) ■)) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ y : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b0 : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) y ■) n ■) ■) (app (app (coq.nat.times) b0 ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b0 ■) m ■) ■) (app (app (coq.nat.times) y ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■)) ■) (b) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) x ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■)) ■) (a) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) n ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) m ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) b ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) a ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) b ■) ■) __ ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) b ■) ■) (app (app (coq.nat.times) m ■) a ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) m ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) b ■) ■) __ ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) b ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) m ■) ■) ■) (app (app (app (gcd_aux) m ■) n ■) m ■) ■)) ■) (H) ■) (app (app (coq.nat.times) n ■) b ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) (app (app (coq.nat.times) m ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (m) ■) ■) ■) ■) (app (app (coq.nat.times) a ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (m) ■) ■) ■) (app (app (coq.nat.times) b ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (n) ■) ■) ■) ■) ■)) ■) (_clearme0) ■))) ■) (_clearme) ■))) ■) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (eq_minus_gcd_aux) (m) ■) (n) ■) (m) ■) (posm) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (m) ■) (app (coq.nat.S) m ■) ■) (n) ■) (el-∀ (coq.nat.le_n_Sn) (m) ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n) ■) (m) ■) (nlenm) ■) ■) ■) (el-∀ (coq.nat.le_n) (m) ■) ■) ■)) ■) ■) ■)) ■) (in-⇒ (λ eqm0 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (m) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) x ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ y : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) y ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) y ■) m ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (coq.nat.O) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.minus) n ■) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (el-∀ (coq.nat.minus_n_O) (n) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.minus) n ■) __ ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) __ ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) __ ■) ■) n ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) (app (coq.nat.S) m ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.plus) n ■) (app (app (coq.nat.times) n ■) m ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) n ■) __ ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) n ■) __ ■) ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.plus) m ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) n ■) (app (app (coq.nat.times) __ ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) n ■) __ ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) __ ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) __ ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) n ■) ■) ■) (app (app (gcd) m ■) n ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) __ ■) n ■) ■) n ■)) ■) (el-∀ (gcd_O_l) (n) ■) ■) (m) ■) (eqm0) ■) ■) ■) (app (app (gcd) n ■) m ■) ■) (el-∀ (el-∀ (commutative_gcd) (n) ■) (m) ■) ■) ■) (app (app (coq.nat.minus) n ■) m ■) ■) (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1549) (m) ■) (n) ■) (posn) ■) (eqm0) ■) (n) ■) ■) ■) (app (app (coq.nat.times) m ■) m ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) m ■) __ ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.times) m ■) coq.nat.O ■) ■)) ■) (el-∀ (coq.nat.times_n_O) (m) ■) ■) (m) ■) (eqm0) ■) ■) (m) ■) (eqm0) ■) ■) ■) (coq.nat.O) ■) (eqm0) ■) ■) (app (app (coq.nat.plus) m ■) n ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.plus) __ ■) n ■) ■)) ■) (el-∀ (coq.nat.plus_O_n) (n) ■) ■) (m) ■) (eqm0) ■) ■) ■) (app (app (coq.nat.plus) n ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_plus) (n) ■) (m) ■) ■) ■) (app (app (coq.nat.times) m ■) n ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) __ ■) n ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■)) ■) (el-∀ (coq.nat.times_O_n) (n) ■) ■) (m) ■) (eqm0) ■) ■) (m) ■) (eqm0) ■) ■) ■) (app (app (coq.nat.times) n ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (n) ■) (m) ■) ■) ■) (app (app (coq.nat.times) n ■) (app (coq.nat.S) m ■) ■) ■) (el-∀ (el-∀ (coq.nat.times_n_Sm) (n) ■) (m) ■) ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) m ■) ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (coq.nat.S) m ■) ■) (n) ■) ■) ■) (coq.nat.O) ■) (eqm0) ■) ■) (app (app (coq.nat.minus) n ■) m ■) ■) (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1549) (m) ■) (n) ■) (posn) ■) (eqm0) ■) (n) ■) ■) ■) (coq.nat.O) ■) (eqm0) ■) ■) ■) ■) ■) ■) (coq.nat.O) ■) (eqm0) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O) ■) (m) ■) (el-∀ (coq.nat.le_O_n) (m) ■) ■) ■)) ■) (in-⇒ (λ eqn0 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) n ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (n) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) n ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) x ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■)) ■) (coq.nat.O) ■) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat) ■) (abs (λ x : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) (app (app (coq.nat.times) x ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■)) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) m ■) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (el-∀ (coq.nat.minus_n_O) (m) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) m ■) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) __ ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) m ■) __ ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) coq.nat.O ■) ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (coq.nat.S) __ ■) ■) m ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (coq.nat.S) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.plus) m ■) (app (app (coq.nat.times) m ■) n ■) ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.plus) m ■) __ ■) ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) coq.nat.O ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) m ■) (app (app (coq.nat.times) __ ■) n ■) ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) m ■) __ ■) ■) m ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) m ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (prop) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) m ■) ■) ■) (app (app (coq.nat.minus) m ■) n ■) ■) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15491) (m) ■) (n) ■) (eqn0) ■) (m) ■) ■) ■) (app (app (coq.nat.times) n ■) n ■) ■) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1551) (m) ■) (n) ■) (eqn0) ■) (n) ■) ■) ■) (coq.nat.O) ■) (eqn0) ■) ■) (app (app (coq.nat.plus) m ■) n ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.plus) m ■) __ ■) ■)) ■) (el-∀ (coq.nat.plus_n_O) (m) ■) ■) (n) ■) (eqn0) ■) ■) ■) (app (app (coq.nat.times) m ■) n ■) ■) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1551) (m) ■) (n) ■) (eqn0) ■) (m) ■) ■) ■) (app (app (coq.nat.times) m ■) (app (coq.nat.S) n ■) ■) ■) (el-∀ (el-∀ (coq.nat.times_n_Sm) (m) ■) (n) ■) ■) ■) (app (app (coq.nat.times) (app (coq.nat.S) n ■) ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (coq.nat.S) n ■) ■) (m) ■) ■) ■) (coq.nat.O) ■) (eqn0) ■) ■) (app (app (coq.nat.minus) m ■) n ■) ■) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15491) (m) ■) (n) ■) (eqn0) ■) (m) ■) ■) ■) (coq.nat.O) ■) (eqn0) ■) ■) (app (app (gcd) n ■) m ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) __ ■) m ■) ■) m ■)) ■) (el-∀ (gcd_O_l) (m) ■) ■) (n) ■) (eqn0) ■) ■) ■) ■) ■) ■) ■) (coq.nat.O) ■) (eqn0) ■)) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O) ■) (n) ■) (el-∀ (coq.nat.le_O_n) (n) ■) ■) ■));
symbol let_clause_1545 : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■) ⇒ (app (app (coq.primes.divides) coq.nat.O ■) n ■) ⇒ ∀ (λ q1 : El (coq.nat.nat), (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) coq.nat.O ■) q1 ■) ■) ⇒ (app (app (coq.primes.divides) coq.nat.O ■) m ■) ⇒ ∀ (λ q2 : El (coq.nat.nat), (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) coq.nat.O ■) q2 ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■))))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■), in-⇒ (λ _clearme : Prf (app (app (coq.primes.divides) coq.nat.O ■) n ■), in-∀ (λ q1 : El (coq.nat.nat),  in-⇒ (λ H1 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) coq.nat.O ■) q1 ■) ■), in-⇒ (λ _clearme0 : Prf (app (app (coq.primes.divides) coq.nat.O ■) m ■), in-∀ (λ q2 : El (coq.nat.nat),  in-⇒ (λ H2 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) coq.nat.O ■) q2 ■) ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) q2 ■) coq.nat.O ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) coq.nat.O ■) q2 ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (H2) ■) (app (app (coq.nat.times) q2 ■) coq.nat.O ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O) ■) (q2) ■) ■) ■) (coq.nat.O) ■) (el-∀ (coq.nat.times_n_O) (q2) ■) ■)))))))));
symbol gcd_O_to_eq_O : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■) ⇒ app (app (coq.connectives.And) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ■))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (app (app (coq.primes.divides) coq.nat.O ■) n ■) ■) (app (app (coq.primes.divides) coq.nat.O ■) m ■) ■) (app (app (coq.connectives.And) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ■) ■) (in-⇒ (λ _clearme : Prf (app (app (coq.primes.divides) coq.nat.O ■) n ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (coq.nat.O) ■) (n) ■) ((app (app (coq.primes.divides) coq.nat.O ■) m ■) ⇒ app (app (coq.connectives.And) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ■) ■) (in-∀ (λ q1 : El (coq.nat.nat),  in-⇒ (λ H1 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) coq.nat.O ■) q1 ■) ■), in-⇒ (λ _clearme0 : Prf (app (app (coq.primes.divides) coq.nat.O ■) m ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (coq.nat.O) ■) (m) ■) (app (app (coq.connectives.And) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ■) ■) (in-∀ (λ q2 : El (coq.nat.nat),  in-⇒ (λ H2 : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) coq.nat.O ■) q2 ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (m) ■) ■) (coq.nat.O) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) q2 ■) coq.nat.O ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) coq.nat.O ■) q2 ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (H2) ■) (app (app (coq.nat.times) q2 ■) coq.nat.O ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O) ■) (q2) ■) ■) ■) (coq.nat.O) ■) (el-∀ (coq.nat.times_n_O) (q2) ■) ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) coq.nat.O ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (m) ■) ■) (coq.nat.O) ■) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m) ■) (n) ■) (H) ■) (_clearme) ■) (q1) ■) (H1) ■) (_clearme0) ■) (q2) ■) (H2) ■) ■) ■) (n) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) q1 ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) __ ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) (app (app (coq.nat.times) __ ■) q1 ■) ■)) ■) (H1) ■) (m) ■) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m) ■) (n) ■) (H) ■) (_clearme) ■) (q1) ■) (H1) ■) (_clearme0) ■) (q2) ■) (H2) ■) ■) ■) (m) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) __ ■) q1 ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) (app (app (coq.nat.times) coq.nat.O ■) q1 ■) ■)) ■) (el-∀ (coq.nat.times_O_n) (q1) ■) ■) (m) ■) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m) ■) (n) ■) (H) ■) (_clearme) ■) (q1) ■) (H1) ■) (_clearme0) ■) (q2) ■) (H2) ■) ■) ■) (m) ■) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m) ■) (n) ■) (H) ■) (_clearme) ■) (q1) ■) (H1) ■) (_clearme0) ■) (q2) ■) (H2) ■) ■) ■) ■) ■))) ■) (_clearme0) ■)))) ■) (_clearme) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (coq.connectives.And) (app (app (coq.primes.divides) x_1 ■) n ■) ■) (app (app (coq.primes.divides) x_1 ■) m ■) ■)) ■) (el-∀ (el-∀ (divides_gcd_nm) (m) ■) (n) ■) ■) (coq.nat.O) ■) (H) ■) ■)));
symbol let_clause_1571 : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) n ■))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■), in-⇒ (λ auto : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■), in-⇒ (λ auto' : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (coq.nat.O) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (auto) ■) (n) ■) (auto') ■))))));
symbol let_clause_1572 : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ⇒ (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■), in-⇒ (λ auto : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■), in-⇒ (λ auto' : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) __ ■) coq.nat.O ■)) ■) (auto') ■) (m) ■) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1571) (m) ■) (n) ■) (posn) ■) (H) ■) (auto) ■) (auto') ■) ■))))));
symbol lt_O_gcd : Prf (∀ (λ m : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), (app (app (coq.nat.lt) coq.nat.O ■) n ■) ⇒ app (app (coq.nat.lt) coq.nat.O ■) (app (app (gcd) m ■) n ■) ■))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (app (app (coq.nat.lt) coq.nat.O ■) n ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.nat_case) (app (app (gcd) m ■) n ■) ■) (app (coq.nat.lt) coq.nat.O ■) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) coq.nat.O ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■) ■) (app (app (coq.nat.lt) coq.nat.O ■) coq.nat.O ■) ■) (in-⇒ (λ auto : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) coq.nat.O ■), in-⇒ (λ auto' : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) n ■) coq.nat.O ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (app (app (coq.nat.lt) coq.nat.O ■) n ■) ■) (app (app (coq.nat.lt) coq.nat.O ■) coq.nat.O ■) ■) (posn) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.nat.lt) __ ■) n ■) ■) (app (app (coq.nat.lt) coq.nat.O ■) coq.nat.O ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.nat.lt) m ■) __ ■) ■) (app (app (coq.nat.lt) coq.nat.O ■) coq.nat.O ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.nat.lt) m ■) m ■) ■) (app (app (coq.nat.lt) __ ■) coq.nat.O ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.nat.lt) m ■) m ■) ■) (app (app (coq.nat.lt) m ■) __ ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (prop) ■) (app (app (coq.nat.lt) m ■) m ■) ■) ■) (coq.nat.O) ■) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1572) (m) ■) (n) ■) (posn) ■) (H) ■) (auto) ■) (auto') ■) ■) ■) (coq.nat.O) ■) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1572) (m) ■) (n) ■) (posn) ■) (H) ■) (auto) ■) (auto') ■) ■) ■) (n) ■) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1571) (m) ■) (n) ■) (posn) ■) (H) ■) (auto) ■) (auto') ■) ■) ■) (coq.nat.O) ■) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1572) (m) ■) (n) ■) (posn) ■) (H) ■) (auto) ■) (auto') ■) ■) ■))) ■) (el-⇒ (el-∀ (el-∀ (gcd_O_to_eq_O) (m) ■) (n) ■) (H) ■) ■)) ■) (in-∀ (λ m0 : El (coq.nat.nat),  in-⇒ (λ auto : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) m ■) n ■) ■) (app (coq.nat.S) m0 ■) ■), el-∀ (coq.nat.lt_O_S) (m0) ■))) ■)));
symbol prime_to_gcd_1 : Prf (∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), (app (coq.primes.prime) n ■) ⇒ (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) m ■) ■) (app (coq.nat.S) coq.nat.O ■) ■))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (app (coq.primes.prime) n ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (app (app (coq.nat.lt) (app (coq.nat.S) coq.nat.O ■) ■) n ■) ■) (∀ (λ m1 : El (coq.nat.nat), (app (app (coq.primes.divides) m1 ■) n ■) ⇒ (app (app (coq.nat.lt) (app (coq.nat.S) coq.nat.O ■) ■) m1 ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m1 ■) n ■)) ■) ((app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) m ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (in-⇒ (λ lt1n : Prf (app (app (coq.nat.lt) (app (coq.nat.S) coq.nat.O ■) ■) n ■), in-⇒ (λ primen : Prf (∀ (λ m0 : El (coq.nat.nat), (app (app (coq.primes.divides) m0 ■) n ■) ⇒ (app (app (coq.nat.lt) (app (coq.nat.S) coq.nat.O ■) ■) m0 ■) ⇒ app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m0 ■) n ■)), in-⇒ (λ ndivnm : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) n ■) m ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_le_to_eq) (app (app (gcd) n ■) m ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-⇒ (el-∀ (el-∀ (coq.nat.not_lt_to_le) (app (coq.nat.S) coq.nat.O ■) ■) (app (app (gcd) n ■) m ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) (app (app (coq.nat.lt) (app (coq.nat.S) coq.nat.O ■) ■) (app (app (gcd) n ■) m ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) m ■) ■) n ■) ■) (el-⇒ (el-∀ (primen) (app (app (gcd) n ■) m ■) ■) (el-∀ (el-∀ (divides_gcd_l) (n) ■) (m) ■) ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) m ■) ■) n ■) ■) (app (app (coq.primes.divides) n ■) m ■) ■) (in-⇒ (λ auto : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (gcd) n ■) m ■) ■) n ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (app (app (coq.primes.divides) (app (app (gcd) n ■) m ■) ■) m ■) ■) (app (app (coq.primes.divides) n ■) m ■) ■) (el-∀ (el-∀ (divides_gcd_r) (n) ■) (m) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (n) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.primes.divides) __ ■) m ■) ■) (app (app (coq.primes.divides) n ■) m ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (prop) ■) (app (app (coq.primes.divides) n ■) m ■) ■) ■) (app (app (gcd) n ■) m ■) ■) (auto) ■) ■)) ■) (ndivnm) ■) ■) ■) ■) (el-⇒ (el-∀ (el-∀ (lt_O_gcd) (n) ■) (m) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_le_to_lt) (coq.nat.O) ■) (m) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■) ■) (app (app (coq.primes.divides) n ■) m ■) ■) (in-⇒ (λ auto : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) coq.nat.O ■) m ■), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (app (app (coq.primes.divides) n ■) coq.nat.O ■) ■) (app (app (coq.primes.divides) n ■) m ■) ■) (el-∀ (coq.primes.divides_n_O) (n) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (prop) ■) (app (app (coq.primes.divides) n ■) __ ■) ■) (app (app (coq.primes.divides) n ■) m ■) ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (prop) ■) (app (app (coq.primes.divides) n ■) m ■) ■) ■) (coq.nat.O) ■) (auto) ■) ■)) ■) (ndivnm) ■) ■) (el-∀ (coq.nat.le_O_n) (m) ■) ■) ■) ■)))) ■) (_clearme) ■)));
symbol divides_times_to_divides : Prf (∀ (λ p : El (coq.nat.nat), ∀ (λ n : El (coq.nat.nat), ∀ (λ m : El (coq.nat.nat), (app (coq.primes.prime) p ■) ⇒ (app (app (coq.primes.divides) p ■) (app (app (coq.nat.times) n ■) m ■) ■) ⇒ app (app (coq.connectives.Or) (app (app (coq.primes.divides) p ■) n ■) ■) (app (app (coq.primes.divides) p ■) m ■) ■)))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ primp : Prf (app (coq.primes.prime) p ■), in-⇒ (λ _clearme : Prf (app (app (coq.primes.divides) p ■) (app (app (coq.nat.times) n ■) m ■) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (p) ■) (app (app (coq.nat.times) n ■) m ■) ■) (app (app (coq.connectives.Or) (app (app (coq.primes.divides) p ■) n ■) ■) (app (app (coq.primes.divides) p ■) m ■) ■) ■) (in-∀ (λ c : El (coq.nat.nat),  in-⇒ (λ nm : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) m ■) ■) (app (app (coq.nat.times) p ■) c ■) ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (coq.primes.divides) p ■) n ■) ■) (app (coq.connectives.Not) (app (app (coq.primes.divides) p ■) n ■) ■) ■) (app (app (coq.connectives.Or) (app (app (coq.primes.divides) p ■) n ■) ■) (app (app (coq.primes.divides) p ■) m ■) ■) ■) (in-⇒ (λ auto : Prf (app (app (coq.primes.divides) p ■) n ■), el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) (app (app (coq.primes.divides) p ■) n ■) ■) (app (app (coq.primes.divides) p ■) m ■) ■) (auto) ■)) ■) (in-⇒ (λ ndivpn : Prf (app (coq.connectives.Not) (app (app (coq.primes.divides) p ■) n ■) ■), el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) (app (app (coq.primes.divides) p ■) n ■) ■) (app (app (coq.primes.divides) p ■) m ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■)) ■)) ■) (app (app (coq.primes.divides) p ■) m ■) ■) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■)) ■), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■)) ■) (app (app (coq.primes.divides) p ■) m ■) ■) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme1 : Prf (app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) ■) (app (app (coq.primes.divides) p ■) m ■) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■), el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p) ■) (m) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) c ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) x ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) a ■) ■) c ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) p ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) x ■) c ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) p ■) c ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) x ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) m ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) x_1 ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) n ■) ■) m ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) n ■) ■) m ■) ■) x_1 ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) x ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) x_1 ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) a ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (m) ■) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) a ■) ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) m ■) __ ■) ■)) ■) (el-∀ (coq.nat.times_n_1) (m) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) a ■) ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) b ■) p ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) n ■) a ■) ■) __ ■) ■) (app (coq.nat.S) coq.nat.O ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■)) ■) (H) ■) (app (app (coq.nat.times) n ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (n) ■) ■) ■) (app (app (coq.nat.times) p ■) b ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (p) ■) ■) ■) ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (m) ■) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.nat.times) p ■) b ■) ■) (m) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) n ■) ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (m) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p) ■) (b) ■) (m) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) n ■) m ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a) ■) (n) ■) (m) ■) ■) ■) (app (app (coq.nat.times) p ■) c ■) ■) (nm) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) p ■) ■) c ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a) ■) (p) ■) (c) ■) ■) ■) (app (app (coq.nat.times) p ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (p) ■) (a) ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p) ■) (a) ■) (c) ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) c ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (p) ■) (app (app (coq.nat.times) a ■) c ■) ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) ■)) ■) (in-⇒ (λ H : Prf (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■), el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p) ■) (m) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) x ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) a ■) ■) c ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) x_1 ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) p ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) (app (app (coq.nat.times) x_1 ■) c ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) p ■) c ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) x ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) m ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) (app (app (coq.nat.times) a ■) x_1 ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) n ■) ■) m ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) x_1 ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) x_1 ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) n ■) ■) m ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (abs (λ x : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) x ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) b ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) x_1 ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (app (coq.nat.times) n ■) a ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) b ■) ■) __ ■) ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (m) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) __ ■)) ■) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat) ■) (m) ■) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) b ■) ■) (app (app (coq.nat.times) n ■) a ■) ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat) ■) (app (coq.nat.S) coq.nat.O ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) m ■) (app (app (coq.nat.times) m ■) __ ■) ■)) ■) (el-∀ (coq.nat.times_n_1) (m) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) b ■) ■) (app (app (coq.nat.times) n ■) a ■) ■) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) a ■) n ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) p ■) b ■) ■) __ ■) ■) (app (coq.nat.S) coq.nat.O ■) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat) ■) (app (app (coq.nat.times) b ■) p ■) ■) (abs (λ __ : El (coq.nat.nat), app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) __ ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■)) ■) (H) ■) (app (app (coq.nat.times) p ■) b ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (b) ■) (p) ■) ■) ■) (app (app (coq.nat.times) n ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (n) ■) ■) ■) ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (n) ■) ■) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) (app (app (coq.nat.times) m ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (m) ■) (app (app (coq.nat.times) p ■) b ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) n ■) ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (app (app (coq.nat.times) a ■) n ■) ■) (m) ■) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) p ■) b ■) ■) m ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (m) ■) (app (app (coq.nat.times) p ■) b ■) ■) ■) ■) (app (app (coq.nat.times) a ■) (app (app (coq.nat.times) n ■) m ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a) ■) (n) ■) (m) ■) ■) ■) (app (app (coq.nat.times) p ■) c ■) ■) (nm) ■) ■) (app (app (coq.nat.times) (app (app (coq.nat.times) a ■) p ■) ■) c ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a) ■) (p) ■) (c) ■) ■) ■) (app (app (coq.nat.times) p ■) a ■) ■) (el-∀ (el-∀ (coq.nat.commutative_times) (a) ■) (p) ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p) ■) (a) ■) (c) ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.times) b ■) m ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p) ■) (b) ■) (m) ■) ■) ■) (app (app (coq.nat.times) p ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) ■) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (p) ■) (app (app (coq.nat.times) b ■) m ■) ■) (app (app (coq.nat.times) a ■) c ■) ■) ■) ■)) ■) (_clearme1) ■))) ■) (_clearme0) ■))) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat) ■) (app (app (gcd) p ■) n ■) ■) (abs (λ x_1 : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) x_1 ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) x_1 ■) ■)) ■)) ■)) ■) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat) ■) (app (app (gcd) n ■) p ■) ■) (abs (λ x : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ a : El (coq.nat.nat), app (el-∀ₖ (coq.connectives.ex) (coq.nat.nat) ■) (abs (λ b : El (coq.nat.nat), app (app (coq.connectives.Or) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) a ■) n ■) ■) (app (app (coq.nat.times) b ■) p ■) ■) ■) x ■) ■) (app (app (el-∀ₖ (coq.logic.eq) (coq.nat.nat) ■) (app (app (coq.nat.minus) (app (app (coq.nat.times) b ■) p ■) ■) (app (app (coq.nat.times) a ■) n ■) ■) ■) x ■) ■)) ■)) ■)) ■) (el-∀ (el-∀ (eq_minus_gcd) (p) ■) (n) ■) ■) (app (app (gcd) p ■) n ■) ■) (el-∀ (el-∀ (commutative_gcd) (p) ■) (n) ■) ■) ■) (app (coq.nat.S) coq.nat.O ■) ■) (el-⇒ (el-⇒ (el-∀ (el-∀ (prime_to_gcd_1) (p) ■) (n) ■) (primp) ■) (ndivpn) ■) ■) ■) ■)) ■) (el-∀ (el-∀ (coq.primes.decidable_divides) (p) ■) (n) ■) ■))) ■) (_clearme) ■)))));
