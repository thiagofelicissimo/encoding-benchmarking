require open coq.sttfa;
require coq.bool;
require coq.connectives;
require coq.div_mod;
require coq.leibniz;
require coq.logic;
require coq.nat;
require coq.primes;
constant symbol gcd_aux : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol gcd_aux_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_gcd_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((gcd_aux) ▪ p)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ gcd_aux_body) ▪ p));
symbol eq_gcd_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((gcd_aux) ▪ p)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ gcd_aux_body) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((gcd_aux) ▪ p)) ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ gcd_aux_body) ▪ p)) (el-∀ (axiom_gcd_aux) (p)));
symbol sym_eq_gcd_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ gcd_aux_body) ▪ p)) ▪ ((gcd_aux) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((gcd_aux) ▪ p)) ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ gcd_aux_body) ▪ p)) (el-∀ (eq_gcd_aux) (p)));
constant symbol axiom_gcd_aux_body_O : Prf ((((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((gcd_aux_body) ▪ coq.nat.O)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m));
symbol eq_gcd_aux_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((gcd_aux_body) ▪ coq.nat.O)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((gcd_aux_body) ▪ coq.nat.O)) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) (axiom_gcd_aux_body_O);
symbol sym_eq_gcd_aux_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) ▪ ((gcd_aux_body) ▪ coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((gcd_aux_body) ▪ coq.nat.O)) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) (eq_gcd_aux_body_O);
constant symbol axiom_gcd_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((gcd_aux_body) ▪ ((coq.nat.S) ▪ p))) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.primes.dividesb) ▪ n) ▪ m)));
symbol eq_gcd_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((gcd_aux_body) ▪ ((coq.nat.S) ▪ p))) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.primes.dividesb) ▪ n) ▪ m))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((gcd_aux_body) ▪ ((coq.nat.S) ▪ p))) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.primes.dividesb) ▪ n) ▪ m))) (el-∀ (axiom_gcd_aux_body_S) (p)));
symbol sym_eq_gcd_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.primes.dividesb) ▪ n) ▪ m))) ▪ ((gcd_aux_body) ▪ ((coq.nat.S) ▪ p))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((gcd_aux_body) ▪ ((coq.nat.S) ▪ p))) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.primes.dividesb) ▪ n) ▪ m))) (el-∀ (eq_gcd_aux_body_S) (p)));
symbol gcd : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ≔ `λ' n : El (coq.nat.nat), `λ' m : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ (((coq.nat.leb) ▪ n) ▪ m);
symbol commutative_gcd : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ m)) ▪ (((gcd) ▪ m) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n)) (m)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ __)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n)))) (in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ n) ▪ m)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ m)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n)))) (in-⇒ (λ ltnm : Prf (((coq.nat.lt) ▪ n) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true))))) (((coq.nat.leb) ▪ m) ▪ n)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_leb_false) (m)) (n)) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_not_le) (n)) (m)) (ltnm)))))) (in-⇒ (λ eqnm : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (m)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ x) ▪ m) ▪ x)) ▪ ((((gcd_aux) ▪ m) ▪ x) ▪ m)) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ x) ▪ m)) ▪ ((((gcd_aux) ▪ x) ▪ m) ▪ x)) ▪ (((coq.nat.leb) ▪ m) ▪ x)))) (el-∀ (el-⇒ (el-⇒ (el-∀ (coq.bool.match_bool_prop) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ coq.bool.true)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ __))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ coq.bool.true))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ((((gcd_aux) ▪ m) ▪ m) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ coq.bool.true)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ((((gcd_aux) ▪ m) ▪ m) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ coq.bool.true)) ▪ y)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ ((((gcd_aux) ▪ m) ▪ m) ▪ m)) ▪ coq.bool.true))))) (((coq.nat.leb) ▪ m) ▪ m))) (n)) (eqnm)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (n)) (m)) (lenm))))) (in-⇒ (λ notlenm : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.false)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ coq.bool.true))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ y)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.false))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.false))))))) (((coq.nat.leb) ▪ m) ▪ n)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_leb_true) (m)) (n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (m)) ((coq.nat.S) ▪ m)) (n)) (el-∀ (coq.nat.le_n_Sn) (m))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n)) (m)) (notlenm))))))));
symbol gcd_O_l : Prf (`∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ m) ≔ in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) (m)) ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ y)) (el-⇒ (el-∀ (coq.nat.eq_leb_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ ((y) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.bool.bool)) (coq.nat.leb_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ ((y) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_leb) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ ((y) ▪ m)))) (el-⇒ (el-∀ (eq_gcd_aux_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (gcd_aux_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m)))) (el-⇒ (el-∀ (el-∀ (eq_gcd_aux) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m)))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((gcd) ▪ coq.nat.O) ▪ m)))))))));
symbol divides_mod_to_divides : Prf (`∀ p : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.primes.divides) ▪ p) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ⇒ (((coq.primes.divides) ▪ p) ▪ n) ⇒ ((coq.primes.divides) ▪ p) ▪ m) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ _clearme : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (p)) (((coq.div_mod.mod) ▪ m) ▪ n)) ((((coq.primes.divides) ▪ p) ▪ n) ⇒ ((coq.primes.divides) ▪ p) ▪ m)) (in-∀ (λ q1 : El (coq.nat.nat),  in-⇒ (λ eq1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ▪ (((coq.nat.times) ▪ p) ▪ q1)), in-⇒ (λ _clearme0 : Prf (((coq.primes.divides) ▪ p) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (p)) (n)) (((coq.primes.divides) ▪ p) ▪ m)) (in-∀ (λ q2 : El (coq.nat.nat),  in-⇒ (λ eq2 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ p) ▪ q2)), el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p)) (m)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q2) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ q1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ q2) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ p) ▪ q1))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.div_mod.mod) ▪ m) ▪ n)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ q2) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ x_1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ q2)) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.plus) ▪ x_1) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (n)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ x_1) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (m))) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.plus) ▪ __) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-∀ (el-∀ (coq.div_mod.div_mod) (m)) (n))) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (((coq.div_mod.mod) ▪ m) ▪ n))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (((coq.div_mod.mod) ▪ m) ▪ n)))) (((coq.nat.times) ▪ p) ▪ q2)) (eq2))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ q2) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p)) (q2)) (((coq.div_mod.div) ▪ m) ▪ n)))) (((coq.nat.times) ▪ p) ▪ q1)) (eq1))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q2) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ q1))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus) (p)) (((coq.nat.times) ▪ q2) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (q1))))))) (_clearme0)))))) (_clearme))))));
symbol divides_to_gcd_aux : Prf (`∀ p : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ p) ⇒ (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.primes.divides) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ p) ▪ m) ▪ n)) ▪ n) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posp : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ p), el-⇒ (el-∀ (el-⇒ (el-∀ (coq.nat.lt_O_n_elim) (p)) (posp)) (`λ' __ : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.primes.divides) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ __) ▪ m) ▪ n)) ▪ n)) (in-∀ (λ l : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux) ((coq.nat.S) ▪ l)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.primes.divides) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ n)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (gcd_aux_body)) (l)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.primes.divides) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ n)) ▪ n)) (el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux_body_S) (l)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.primes.divides) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ n)) ▪ n)) (in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ divnm : Prf (((coq.primes.divides) ▪ n) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.true)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ l) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ x)) ▪ n)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (n)) ((((gcd_aux) ▪ l) ▪ n) ▪ (((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ m) ▪ (`λ' p0 : El (coq.nat.nat), (((coq.div_mod.mod_aux) ▪ m) ▪ m) ▪ p0)) ▪ n))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ n)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n)))) (((coq.primes.dividesb) ▪ n) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.divides_to_dividesb_true) (n)) (m)) (posn)) (divnm)))))))))))));
symbol not_divides_to_gcd_aux : Prf (`∀ p : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ ((coq.nat.S) ▪ p)) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux) ((coq.nat.S) ▪ p)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (gcd_aux_body)) (p)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-∀ (sym_eq_gcd_aux_body_S) (p)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (in-⇒ (λ lenm : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ divnm : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.bool.bool)) (coq.bool.false)) (`λ' x : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ x)) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (n)) ((((gcd_aux) ▪ p) ▪ n) ▪ (((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ m) ▪ (`λ' p0 : El (coq.nat.nat), (((coq.div_mod.mod_aux) ▪ m) ▪ m) ▪ p0)) ▪ n))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ y) ▪ ((((gcd_aux) ▪ p) ▪ n) ▪ (((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ m) ▪ (`λ' p0 : El (coq.nat.nat), (((coq.div_mod.mod_aux) ▪ m) ▪ m) ▪ p0)) ▪ n)))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((((gcd_aux) ▪ p) ▪ n) ▪ (((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ m) ▪ (`λ' p0 : El (coq.nat.nat), (((coq.div_mod.mod_aux) ▪ m) ▪ m) ▪ p0)) ▪ n))))) (((coq.primes.dividesb) ▪ n) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.not_divides_to_dividesb_false) (n)) (m)) (lenm)) (divnm))))))))));
symbol divides_gcd_aux_mn : Prf (`∀ p : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ p) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ p) ▪ m) ▪ n)) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ p) ▪ m) ▪ n)) ▪ n)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ _x_365) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ _x_365) ▪ m) ▪ n)) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ _x_365) ▪ m) ▪ n)) ▪ n))) (in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ lenO : Prf (((coq.nat.le) ▪ n) ▪ coq.nat.O), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ n)) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ n)) ▪ n))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.lt) ▪ coq.nat.O) ▪ n)) (posn)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) (n)) (coq.nat.O)) (lenO)))))))))) (in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n)) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n)) ▪ n)), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ lenS : Prf (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ n) ▪ m)) ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m))) (((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)) ▪ n))) (in-⇒ (λ divnm : Prf (((coq.primes.divides) ▪ n) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (n)) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ x) ▪ m)) ▪ (((coq.primes.divides) ▪ x) ▪ n))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.primes.divides) ▪ n) ▪ m)) (((coq.primes.divides) ▪ n) ▪ n)) (divnm)) (el-∀ (coq.primes.divides_n_n) (n)))) ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_to_gcd_aux) ((coq.nat.S) ▪ q)) (m)) (n)) (el-∀ (coq.nat.lt_O_S) (q))) (posn)) (divnm))))) (in-⇒ (λ ndivnm : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' x : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ x) ▪ m)) ▪ (((coq.primes.divides) ▪ x) ▪ n))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ n)) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ n))) (in-⇒ (λ H : Prf (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ n), in-⇒ (λ H1 : Prf (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ m)) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_mod_to_divides) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (m)) (n)) (posn)) (H1)) (H))) (H))))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (Hind) (n)) (((coq.div_mod.mod) ▪ m) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)), auto))) (in-⇒ (λ modO : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ n) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.mod_O_to_divides) (n)) (m)) (posn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ coq.nat.O)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O))) (((coq.div_mod.mod) ▪ m) ▪ n)) (modO)))) (ndivnm))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (((coq.div_mod.mod) ▪ m) ▪ n)) (el-∀ (coq.nat.le_O_n) (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) (((coq.div_mod.mod) ▪ m) ▪ n)) (n)) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m)) (n)) (posn)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (((coq.div_mod.mod) ▪ m) ▪ n)) (q)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) ((coq.nat.S) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (n)) ((coq.nat.S) ▪ q)) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m)) (n)) (posn))) (lenS)))))) ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (not_divides_to_gcd_aux) (q)) (m)) (n)) (posn)) (ndivnm))))) (el-∀ (el-∀ (coq.primes.decidable_divides) (n)) (m))))))))))) (p));
symbol divides_gcd_nm : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ n)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n)) (((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ n))) (in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ m)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m)) (((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ n))) (in-⇒ (λ posm : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n)) (m)) (`λ' __ : El (coq.bool.bool), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ __)) ▪ m)) ▪ (((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ __)) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true)) ▪ m)) ▪ (((coq.primes.divides) ▪ y) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ y) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ n))) (in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_gcd_aux_mn) (n)) (m)) (n)) (posn)) (lenm)) (el-∀ (coq.nat.le_n) (n))))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.false)) ▪ m)) ▪ (((coq.primes.divides) ▪ y) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ y) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ n))) (in-⇒ (λ notlt : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ n)) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ m)) (((coq.connectives.And) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ m)) ▪ (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ n))) (in-⇒ (λ auto : Prf (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ n), in-⇒ (λ auto' : Prf (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ m)) (((coq.primes.divides) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ n)) (auto')) (auto))))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_gcd_aux_mn) (m)) (n)) (m)) (posm)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (m)) ((coq.nat.S) ▪ m)) (n)) (el-∀ (coq.nat.le_n_Sn) (m))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n)) (m)) (notlt)))) (el-∀ (coq.nat.le_n) (m)))))))))) (in-⇒ (λ eqmO : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (coq.nat.O)) (`λ' x_1 : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ x_1)) ▪ x_1)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ x_1)) ▪ n))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ coq.nat.O)) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ n)) (el-∀ (coq.primes.divides_n_O) (((gcd) ▪ n) ▪ coq.nat.O))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ (((gcd) ▪ n) ▪ coq.nat.O))) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ n)) (el-∀ (coq.primes.divides_n_n) (((gcd) ▪ n) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ __)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ n))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ n))) (((gcd) ▪ n) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((gcd) ▪ coq.nat.O) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ coq.nat.O)) ▪ __)) (el-∀ (el-∀ (commutative_gcd) (n)) (coq.nat.O))) (n)) (el-∀ (gcd_O_l) (n))))))) (m)) (eqmO)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (m)) (el-∀ (coq.nat.le_O_n) (m)))))) (in-⇒ (λ eqnO : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (coq.nat.O)) (`λ' x_1 : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ x_1) ▪ m)) ▪ m)) ▪ (((coq.primes.divides) ▪ (((gcd) ▪ x_1) ▪ m)) ▪ x_1))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) (((coq.primes.divides) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ m)) (((coq.primes.divides) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.eq_match_bool_type_true) (coq.nat.nat)) (m)) ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) (`λ' y : El (coq.nat.nat), ((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m))) ▪ y)) (el-⇒ (el-∀ (coq.nat.eq_leb_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), ((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ ((y) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.bool.bool)) (coq.nat.leb_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), ((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ ((y) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.eq_leb) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.bool.bool)), ((coq.primes.divides) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ ((y) ▪ m)))) (el-⇒ (el-∀ (eq_gcd_aux_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), ((coq.primes.divides) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (gcd_aux_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), ((coq.primes.divides) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m)))) (el-⇒ (el-∀ (el-∀ (eq_gcd_aux) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), ((coq.primes.divides) ▪ (((gcd) ▪ coq.nat.O) ▪ m)) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ (((y) ▪ m) ▪ coq.nat.O)) ▪ ((((gcd_aux) ▪ m) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.leb) ▪ coq.nat.O) ▪ m)))) (el-∀ (coq.primes.divides_n_n) (((gcd) ▪ coq.nat.O) ▪ m)))))))))) (el-∀ (coq.primes.divides_n_O) (((gcd) ▪ coq.nat.O) ▪ m)))) (n)) (eqnO)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (n)) (el-∀ (coq.nat.le_O_n) (n)))));
symbol divides_gcd_l : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), ((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ n) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.logic.proj2) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m)) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ n)) (el-∀ (el-∀ (divides_gcd_nm) (n)) (m))));
symbol divides_gcd_r : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), ((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (coq.logic.proj1) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m)) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ n)) (el-∀ (el-∀ (divides_gcd_nm) (n)) (m))));
symbol let_clause_1544 : Prf (`∀ p : El (coq.nat.nat), `∀ q : El (coq.nat.nat), (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))))) ⇒ `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ `∀ a : El (coq.nat.nat), (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) ⇒ `∀ b : El (coq.nat.nat), (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ n) ▪ b))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ lenS : Prf (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)), in-⇒ (λ ndivnm : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))), in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))), in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ __)) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (H)) (((coq.nat.times) ▪ n) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n))))))))))))))));
symbol let_clause_15441 : Prf (`∀ p : El (coq.nat.nat), `∀ q : El (coq.nat.nat), (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))))) ⇒ `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ `∀ a : El (coq.nat.nat), (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) ⇒ `∀ b : El (coq.nat.nat), (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ b)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ lenS : Prf (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)), in-⇒ (λ ndivnm : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)), in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))), in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))), in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (H)) (((coq.nat.times) ▪ n) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n))))))))))))))));
symbol eq_minus_gcd_aux : Prf (`∀ p : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ p) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ p) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ p) ▪ m) ▪ n))))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ _x_365) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ _x_365) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ _x_365) ▪ m) ▪ n)))))) (in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ lenO : Prf (((coq.nat.le) ▪ n) ▪ coq.nat.O), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ coq.nat.O) ▪ m) ▪ n)))))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.lt) ▪ coq.nat.O) ▪ n)) (posn)) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_not_lt) (n)) (coq.nat.O)) (lenO)))))))))) (in-∀ (λ q : El (coq.nat.nat),  in-⇒ (λ Hind : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ m) ▪ n))))), in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), in-⇒ (λ lenS : Prf (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ n) ▪ m)) ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)))))) (in-⇒ (λ divnm : Prf (((coq.primes.divides) ▪ n) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (n)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ x)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ x))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ x) ▪ n))) ▪ n)))) ((coq.nat.S) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ x) ▪ m))) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ m)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n))) ▪ n))) (coq.nat.O)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ ((coq.nat.S) ▪ coq.nat.O))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ n) ▪ (((coq.nat.times) ▪ n) ▪ coq.nat.O))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ n) ▪ __)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ n) ▪ __)) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ n) ▪ __)) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ n)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))) (((coq.nat.minus) ▪ n) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) (n)))) (((coq.nat.times) ▪ m) ▪ coq.nat.O)) (el-∀ (coq.nat.times_n_O) (m)))) (((coq.nat.times) ▪ coq.nat.O) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O)) (m)))) (((coq.nat.plus) ▪ n) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_n_O) (n)))) (((coq.nat.times) ▪ n) ▪ coq.nat.O)) (el-∀ (coq.nat.times_n_O) (n)))) (((coq.nat.times) ▪ n) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (n)) (coq.nat.O)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ coq.nat.O)) (n))))))) ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (divides_to_gcd_aux) ((coq.nat.S) ▪ q)) (m)) (n)) (el-∀ (coq.nat.lt_O_S) (q))) (posn)) (divnm))))) (in-⇒ (λ ndivnm : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ x)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ x))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))))) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a0 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a0) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a0) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))))) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a0 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a0) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ a0) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) (`λ' x_1 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a0 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a0) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ x_1)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ a0) ▪ n))) ▪ x_1))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ x) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))))) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n)) ▪ (((coq.nat.times) ▪ x) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ m)) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))))) (a)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ b)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ x_1) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ x)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ x)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.plus) ▪ x) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ x_1)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ x) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x_1) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ __)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ __))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ __)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ __)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ n) ▪ b))) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1544) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ n) ▪ b))) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1544) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-∀ (coq.nat.plus_O_n) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))))) (el-∀ (coq.nat.minus_n_n) (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a)) (n)) (((coq.div_mod.div) ▪ m) ▪ n)))) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a)) (n)) (((coq.div_mod.div) ▪ m) ▪ n)))) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.plus_minus) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (el-∀ (coq.nat.le_n) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.minus_plus) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ b) ▪ n)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus) (a)) (((coq.div_mod.mod) ▪ m) ▪ n)) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.div_mod.mod) ▪ m) ▪ n)) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n)) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (m)) (el-∀ (el-∀ (coq.div_mod.div_mod) (m)) (n)))) (((coq.nat.times) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ b)) ▪ n)) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus_r) (n)) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (b)))) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (b))))))) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (H)))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (`λ' x_1 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a0 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a0) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ x_1)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ a0) ▪ n))) ▪ x_1))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ x) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))))) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n)) ▪ (((coq.nat.times) ▪ x) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ m)) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))))) (a)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ x) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ x))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n))) ▪ x)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ x)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x_1) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ __)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ a) ▪ __))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ __)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ coq.nat.O) ▪ __)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ b)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15441) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ b)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15441) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ n) ▪ b))) (el-∀ (coq.nat.plus_O_n) (((coq.nat.times) ▪ n) ▪ b)))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))))) (el-∀ (coq.nat.minus_n_n) (((coq.nat.times) ▪ n) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a)) (n)) (((coq.div_mod.div) ▪ m) ▪ n)))) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ n) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.times_times) (a)) (n)) (((coq.div_mod.div) ▪ m) ▪ n)))) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.plus_minus) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (coq.nat.le_n) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ b) ▪ n)))) (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-∀ (el-∀ (el-∀ (coq.nat.minus_plus) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n))) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n))) ▪ n)) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (((coq.div_mod.div) ▪ m) ▪ n)) (n)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus) (a)) (((coq.nat.times) ▪ (((coq.div_mod.div) ▪ m) ▪ n)) ▪ n)) (((coq.div_mod.mod) ▪ m) ▪ n)))) (m)) (el-∀ (el-∀ (coq.div_mod.div_mod) (m)) (n)))) (((coq.nat.times) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))) ▪ n)) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_plus_r) (n)) (b)) (((coq.nat.times) ▪ a) ▪ (((coq.div_mod.div) ▪ m) ▪ n)))))))) ((((gcd_aux) ▪ q) ▪ n) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (H)))) (_clearme0))))) (_clearme))))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (Hind) (n)) (((coq.div_mod.mod) ▪ m) ▪ n)) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (in-⇒ (λ auto : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)), auto))) (in-⇒ (λ modO : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n)), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.lt) ▪ coq.nat.O) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.primes.divides) ▪ n) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.primes.mod_O_to_divides) (n)) (m)) (posn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ coq.nat.O)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (coq.nat.O))) (((coq.div_mod.mod) ▪ m) ▪ n)) (modO)))) (ndivnm))))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (((coq.div_mod.mod) ▪ m) ▪ n)) (el-∀ (coq.nat.le_O_n) (((coq.div_mod.mod) ▪ m) ▪ n))))) (el-⇒ (el-∀ (el-∀ (coq.nat.lt_to_le) (((coq.div_mod.mod) ▪ m) ▪ n)) (n)) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m)) (n)) (posn)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S_to_le) (((coq.div_mod.mod) ▪ m) ▪ n)) (q)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) ((coq.nat.S) ▪ (((coq.div_mod.mod) ▪ m) ▪ n))) (n)) ((coq.nat.S) ▪ q)) (el-⇒ (el-∀ (el-∀ (coq.div_mod.lt_mod_m_m) (m)) (n)) (posn))) (lenS)))))) ((((gcd_aux) ▪ ((coq.nat.S) ▪ q)) ▪ m) ▪ n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (not_divides_to_gcd_aux) (q)) (m)) (n)) (posn)) (ndivnm))))) (el-∀ (el-∀ (coq.primes.decidable_divides) (n)) (m))))))))))) (p));
symbol let_clause_1549 : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m) ⇒ `∀ x1106 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x1106) ▪ (((coq.nat.minus) ▪ x1106) ▪ m)) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ eqm0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m), in-∀ (λ x1106 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x1106) ▪ (((coq.nat.minus) ▪ x1106) ▪ __))) (el-∀ (coq.nat.minus_n_O) (x1106))) (m)) (eqm0))))));
symbol let_clause_15491 : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n) ⇒ `∀ x1106 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x1106) ▪ (((coq.nat.minus) ▪ x1106) ▪ n)) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ eqn0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n), in-∀ (λ x1106 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ x1106) ▪ (((coq.nat.minus) ▪ x1106) ▪ __))) (el-∀ (coq.nat.minus_n_O) (x1106))) (n)) (eqn0)))));
symbol let_clause_1551 : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n) ⇒ `∀ x347 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ x347) ▪ n)) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ eqn0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n), in-∀ (λ x347 : El (coq.nat.nat),  el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ x347) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.times) ▪ x347) ▪ coq.nat.O))) (el-∀ (coq.nat.times_n_O) (x347))) (n)) (eqn0))) (n)) (eqn0)))));
symbol eq_minus_gcd : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((gcd) ▪ n) ▪ m))))) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ n)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((gcd) ▪ n) ▪ m)))))) (in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ coq.nat.O) ▪ m)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m)) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((gcd) ▪ n) ▪ m)))))) (in-⇒ (λ posm : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n)) (m)) (`λ' __ : El (coq.bool.bool), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ __))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ __)))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.true))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ y))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ y)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)))))) (in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (eq_minus_gcd_aux) (n)) (m)) (n)) (posn)) (lenm)) (el-∀ (coq.nat.le_n) (n))))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)) ▪ coq.bool.false))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ y))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) ((((gcd_aux) ▪ n) ▪ m) ▪ n)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' y : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ y)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))))) (in-⇒ (λ nlenm : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))))) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a0 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a0) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a0) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))))) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a0 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a0) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ a0) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ x) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))))) (b)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ x) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))) (a)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ a)) ▪ __)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ a)) ▪ (((coq.nat.times) ▪ n) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ a)) ▪ __)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (H)) (((coq.nat.times) ▪ m) ▪ a)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (m)))) (((coq.nat.times) ▪ n) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n))))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))) (((coq.nat.times) ▪ a) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (m)))))))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)), el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' y : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b0 : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ y) ▪ n)) ▪ (((coq.nat.times) ▪ b0) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b0) ▪ m)) ▪ (((coq.nat.times) ▪ y) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))))) (b)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ x) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m)))) (a)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ n)) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ m)) ▪ (((coq.nat.times) ▪ b) ▪ n))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ b)) ▪ __)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ n) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ b)) ▪ (((coq.nat.times) ▪ m) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ b)) ▪ __)) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ m))) ▪ ((((gcd_aux) ▪ m) ▪ n) ▪ m))) (H)) (((coq.nat.times) ▪ n) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))) (((coq.nat.times) ▪ m) ▪ a)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (m))))) (((coq.nat.times) ▪ a) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (m)))) (((coq.nat.times) ▪ b) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (n)))))))) (_clearme0))))) (_clearme))))) (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (eq_minus_gcd_aux) (m)) (n)) (m)) (posm)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (m)) ((coq.nat.S) ▪ m)) (n)) (el-∀ (coq.nat.le_n_Sn) (m))) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n)) (m)) (nlenm)))) (el-∀ (coq.nat.le_n) (m)))))))))) (in-⇒ (λ eqm0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (m)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((gcd) ▪ n) ▪ m)))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ x) ▪ n))) ▪ (((gcd) ▪ n) ▪ m))))) ((coq.nat.S) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' y : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ y) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ y) ▪ m)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n))) ▪ (((gcd) ▪ n) ▪ m)))) (coq.nat.O)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n))) ▪ (((gcd) ▪ n) ▪ m))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.minus) ▪ n) ▪ coq.nat.O))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) (el-∀ (coq.nat.minus_n_O) (n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.minus) ▪ n) ▪ __))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ __)) ▪ n)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ ((coq.nat.S) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ n) ▪ (((coq.nat.times) ▪ n) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ n) ▪ __)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ n) ▪ __)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ n) ▪ (((coq.nat.times) ▪ __) ▪ m))) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ n) ▪ __)) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((gcd) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((gcd) ▪ m) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ n))) (((gcd) ▪ m) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ __) ▪ n)) ▪ n)) (el-∀ (gcd_O_l) (n))) (m)) (eqm0)))) (((gcd) ▪ n) ▪ m)) (el-∀ (el-∀ (commutative_gcd) (n)) (m)))) (((coq.nat.minus) ▪ n) ▪ m)) (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1549) (m)) (n)) (posn)) (eqm0)) (n)))) (((coq.nat.times) ▪ m) ▪ m)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ m) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.times) ▪ m) ▪ coq.nat.O))) (el-∀ (coq.nat.times_n_O) (m))) (m)) (eqm0))) (m)) (eqm0)))) (coq.nat.O)) (eqm0))) (((coq.nat.plus) ▪ m) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ n))) (el-∀ (coq.nat.plus_O_n) (n))) (m)) (eqm0)))) (((coq.nat.plus) ▪ n) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_plus) (n)) (m)))) (((coq.nat.times) ▪ m) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ __) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) (el-∀ (coq.nat.times_O_n) (n))) (m)) (eqm0))) (m)) (eqm0)))) (((coq.nat.times) ▪ n) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (n)) (m)))) (((coq.nat.times) ▪ n) ▪ ((coq.nat.S) ▪ m))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (n)) (m)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ m)) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ m)) (n)))) (coq.nat.O)) (eqm0))) (((coq.nat.minus) ▪ n) ▪ m)) (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1549) (m)) (n)) (posn)) (eqm0)) (n)))) (coq.nat.O)) (eqm0))))))) (coq.nat.O)) (eqm0)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (m)) (el-∀ (coq.nat.le_O_n) (m)))))) (in-⇒ (λ eqn0 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ n), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (n)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((gcd) ▪ n) ▪ m)))))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ x) ▪ n))) ▪ (((gcd) ▪ n) ▪ m))))) (coq.nat.O)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.ex_intro) (coq.nat.nat)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ x) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ (((gcd) ▪ n) ▪ m)))) ((coq.nat.S) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m))) ▪ (((gcd) ▪ n) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ (((gcd) ▪ n) ▪ m))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ m) ▪ coq.nat.O))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ (((gcd) ▪ n) ▪ m))) (el-∀ (coq.nat.minus_n_O) (m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ m) ▪ coq.nat.O))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ m) ▪ __))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ __)) ▪ m)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ ((coq.nat.S) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ (((coq.nat.times) ▪ m) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ m) ▪ __)) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ m) ▪ (((coq.nat.times) ▪ __) ▪ n))) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ m) ▪ __)) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ m))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ m))) (((coq.nat.minus) ▪ m) ▪ n)) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15491) (m)) (n)) (eqn0)) (m)))) (((coq.nat.times) ▪ n) ▪ n)) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1551) (m)) (n)) (eqn0)) (n)))) (coq.nat.O)) (eqn0))) (((coq.nat.plus) ▪ m) ▪ n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.plus) ▪ m) ▪ __))) (el-∀ (coq.nat.plus_n_O) (m))) (n)) (eqn0)))) (((coq.nat.times) ▪ m) ▪ n)) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_1551) (m)) (n)) (eqn0)) (m)))) (((coq.nat.times) ▪ m) ▪ ((coq.nat.S) ▪ n))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (m)) (n)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ n)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ n)) (m)))) (coq.nat.O)) (eqn0))) (((coq.nat.minus) ▪ m) ▪ n)) (el-∀ (el-⇒ (el-∀ (el-∀ (let_clause_15491) (m)) (n)) (eqn0)) (m)))) (coq.nat.O)) (eqn0))) (((gcd) ▪ n) ▪ m)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ __) ▪ m)) ▪ m)) (el-∀ (gcd_O_l) (m))) (n)) (eqn0)))))))) (coq.nat.O)) (eqn0)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (coq.nat.O)) (n)) (el-∀ (coq.nat.le_O_n) (n)))));
symbol let_clause_1545 : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O) ⇒ (((coq.primes.divides) ▪ coq.nat.O) ▪ n) ⇒ `∀ q1 : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q1)) ⇒ (((coq.primes.divides) ▪ coq.nat.O) ▪ m) ⇒ `∀ q2 : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q2)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O), in-⇒ (λ _clearme : Prf (((coq.primes.divides) ▪ coq.nat.O) ▪ n), in-∀ (λ q1 : El (coq.nat.nat),  in-⇒ (λ H1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q1)), in-⇒ (λ _clearme0 : Prf (((coq.primes.divides) ▪ coq.nat.O) ▪ m), in-∀ (λ q2 : El (coq.nat.nat),  in-⇒ (λ H2 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q2)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ q2) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ coq.nat.O) ▪ q2)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (H2)) (((coq.nat.times) ▪ q2) ▪ coq.nat.O)) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O)) (q2)))) (coq.nat.O)) (el-∀ (coq.nat.times_n_O) (q2)))))))))));
symbol gcd_O_to_eq_O : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O) ⇒ ((coq.connectives.And) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O)) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.primes.divides) ▪ coq.nat.O) ▪ n)) (((coq.primes.divides) ▪ coq.nat.O) ▪ m)) (((coq.connectives.And) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O))) (in-⇒ (λ _clearme : Prf (((coq.primes.divides) ▪ coq.nat.O) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (coq.nat.O)) (n)) ((((coq.primes.divides) ▪ coq.nat.O) ▪ m) ⇒ ((coq.connectives.And) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O))) (in-∀ (λ q1 : El (coq.nat.nat),  in-⇒ (λ H1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q1)), in-⇒ (λ _clearme0 : Prf (((coq.primes.divides) ▪ coq.nat.O) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (coq.nat.O)) (m)) (((coq.connectives.And) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O))) (in-∀ (λ q2 : El (coq.nat.nat),  in-⇒ (λ H2 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q2)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.connectives.conj) ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (m))) (coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ q2) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ coq.nat.O) ▪ q2)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (H2)) (((coq.nat.times) ▪ q2) ▪ coq.nat.O)) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O)) (q2)))) (coq.nat.O)) (el-∀ (coq.nat.times_n_O) (q2))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (m))) (coq.nat.O)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))) (n)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ q1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.times) ▪ __) ▪ q1))) (H1)) (m)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))) (m)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ __) ▪ q1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.times) ▪ coq.nat.O) ▪ q1))) (el-∀ (coq.nat.times_O_n) (q1))) (m)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))) (m)) (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2))))))))) (_clearme0)))))) (_clearme)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((gcd) ▪ m) ▪ n)) (`λ' x_1 : El (coq.nat.nat), ((coq.connectives.And) ▪ (((coq.primes.divides) ▪ x_1) ▪ n)) ▪ (((coq.primes.divides) ▪ x_1) ▪ m))) (el-∀ (el-∀ (divides_gcd_nm) (m)) (n))) (coq.nat.O)) (H)))));
symbol let_clause_1571 : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ n) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O), in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (auto)) (n)) (auto')))))));
symbol let_clause_1572 : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O), in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ coq.nat.O)) (auto')) (m)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1571) (m)) (n)) (posn)) (H)) (auto)) (auto'))))))));
symbol lt_O_gcd : Prf (`∀ m : El (coq.nat.nat), `∀ n : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ n) ⇒ ((coq.nat.lt) ▪ coq.nat.O) ▪ (((gcd) ▪ m) ▪ n)) ≔ in-∀ (λ m : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-⇒ (λ posn : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.nat_case) (((gcd) ▪ m) ▪ n)) ((coq.nat.lt) ▪ coq.nat.O)) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ coq.nat.O), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O)) (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ coq.nat.O), in-⇒ (λ auto' : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ coq.nat.O), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.lt) ▪ coq.nat.O) ▪ n)) (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O)) (posn)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ __) ▪ n)) ▪ (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ m) ▪ __)) ▪ (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ m) ▪ m)) ▪ (((coq.nat.lt) ▪ __) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ m) ▪ m)) ▪ (((coq.nat.lt) ▪ m) ▪ __))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.lt) ▪ m) ▪ m))) (coq.nat.O)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto')))) (coq.nat.O)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto')))) (n)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1571) (m)) (n)) (posn)) (H)) (auto)) (auto')))) (coq.nat.O)) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto'))))))) (el-⇒ (el-∀ (el-∀ (gcd_O_to_eq_O) (m)) (n)) (H))))) (in-∀ (λ m0 : El (coq.nat.nat),  in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ m) ▪ n)) ▪ ((coq.nat.S) ▪ m0)), el-∀ (coq.nat.lt_O_S) (m0)))))));
symbol prime_to_gcd_1 : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), ((coq.primes.prime) ▪ n) ⇒ ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ coq.nat.O)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf ((coq.primes.prime) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_And_prop) (((coq.nat.lt) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n)) (`∀ m1 : El (coq.nat.nat), (((coq.primes.divides) ▪ m1) ▪ n) ⇒ (((coq.nat.lt) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ m1) ▪ n)) (((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ coq.nat.O))) (in-⇒ (λ lt1n : Prf (((coq.nat.lt) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ n), in-⇒ (λ primen : Prf (`∀ m0 : El (coq.nat.nat), (((coq.primes.divides) ▪ m0) ▪ n) ⇒ (((coq.nat.lt) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ m0) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ m0) ▪ n), in-⇒ (λ ndivnm : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ n) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_le_to_eq) (((gcd) ▪ n) ▪ m)) ((coq.nat.S) ▪ coq.nat.O)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_lt_to_le) ((coq.nat.S) ▪ coq.nat.O)) (((gcd) ▪ n) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) (((coq.nat.lt) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ (((gcd) ▪ n) ▪ m))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ m)) ▪ n)) (el-⇒ (el-∀ (primen) (((gcd) ▪ n) ▪ m)) (el-∀ (el-∀ (divides_gcd_l) (n)) (m)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ m)) ▪ n)) (((coq.primes.divides) ▪ n) ▪ m)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((gcd) ▪ n) ▪ m)) ▪ n), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.primes.divides) ▪ (((gcd) ▪ n) ▪ m)) ▪ m)) (((coq.primes.divides) ▪ n) ▪ m)) (el-∀ (el-∀ (divides_gcd_r) (n)) (m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.primes.divides) ▪ __) ▪ m)) ▪ (((coq.primes.divides) ▪ n) ▪ m))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.primes.divides) ▪ n) ▪ m))) (((gcd) ▪ n) ▪ m)) (auto))))) (ndivnm))))) (el-⇒ (el-∀ (el-∀ (lt_O_gcd) (n)) (m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.nat.not_eq_to_le_to_lt) (coq.nat.O)) (m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.not_to_not) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m)) (((coq.primes.divides) ▪ n) ▪ m)) (in-⇒ (λ auto : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.primes.divides) ▪ n) ▪ coq.nat.O)) (((coq.primes.divides) ▪ n) ▪ m)) (el-∀ (coq.primes.divides_n_O) (n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.primes.divides) ▪ n) ▪ __)) ▪ (((coq.primes.divides) ▪ n) ▪ m))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.primes.divides) ▪ n) ▪ m))) (coq.nat.O)) (auto))))) (ndivnm))) (el-∀ (coq.nat.le_O_n) (m))))))))) (_clearme))));
symbol divides_times_to_divides : Prf (`∀ p : El (coq.nat.nat), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), ((coq.primes.prime) ▪ p) ⇒ (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ n) ▪ m)) ⇒ ((coq.connectives.Or) ▪ (((coq.primes.divides) ▪ p) ▪ n)) ▪ (((coq.primes.divides) ▪ p) ▪ m)) ≔ in-∀ (λ p : El (coq.nat.nat),  in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ primp : Prf ((coq.primes.prime) ▪ p), in-⇒ (λ _clearme : Prf (((coq.primes.divides) ▪ p) ▪ (((coq.nat.times) ▪ n) ▪ m)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.match_divides_prop) (p)) (((coq.nat.times) ▪ n) ▪ m)) (((coq.connectives.Or) ▪ (((coq.primes.divides) ▪ p) ▪ n)) ▪ (((coq.primes.divides) ▪ p) ▪ m))) (in-∀ (λ c : El (coq.nat.nat),  in-⇒ (λ nm : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ n) ▪ m)) ▪ (((coq.nat.times) ▪ p) ▪ c)), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.primes.divides) ▪ p) ▪ n)) ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ n))) (((coq.connectives.Or) ▪ (((coq.primes.divides) ▪ p) ▪ n)) ▪ (((coq.primes.divides) ▪ p) ▪ m))) (in-⇒ (λ auto : Prf (((coq.primes.divides) ▪ p) ▪ n), el-⇒ (el-∀ (el-∀ (coq.connectives.or_introl) (((coq.primes.divides) ▪ p) ▪ n)) (((coq.primes.divides) ▪ p) ▪ m)) (auto)))) (in-⇒ (λ ndivpn : Prf ((coq.connectives.Not) ▪ (((coq.primes.divides) ▪ p) ▪ n)), el-⇒ (el-∀ (el-∀ (coq.connectives.or_intror) (((coq.primes.divides) ▪ p) ▪ n)) (((coq.primes.divides) ▪ p) ▪ m)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O))))) (((coq.primes.divides) ▪ p) ▪ m)) (in-∀ (λ a : El (coq.nat.nat),  in-⇒ (λ _clearme0 : Prf (((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O)))), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.match_ex_prop) (coq.nat.nat)) (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O)))) (((coq.primes.divides) ▪ p) ▪ m)) (in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ _clearme1 : Prf (((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O))), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (((coq.primes.divides) ▪ p) ▪ m)) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O)), el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p)) (m)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ c)) ▪ (((coq.nat.times) ▪ b) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ c))) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ a)) ▪ c)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ p)) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ x) ▪ c)) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ p) ▪ c))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ x) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ m)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ x_1)) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ m)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ m)) ▪ x_1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ a) ▪ n))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ p) ▪ b))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ p) ▪ b)))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ x_1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ p) ▪ b))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (m))) (((coq.nat.times) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ a)) ▪ (((coq.nat.times) ▪ p) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.S) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ m) ▪ __))) (el-∀ (coq.nat.times_n_1) (m))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ a)) ▪ (((coq.nat.times) ▪ p) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ p)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ n) ▪ a)) ▪ __)) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (H)) (((coq.nat.times) ▪ n) ▪ a)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (n)))) (((coq.nat.times) ▪ p) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (p)))))) (((coq.nat.times) ▪ a) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ p) ▪ b)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (m)) (((coq.nat.times) ▪ a) ▪ n)) (((coq.nat.times) ▪ p) ▪ b)))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.nat.times) ▪ p) ▪ b)) (m)))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (m)) (((coq.nat.times) ▪ a) ▪ n)))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p)) (b)) (m)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ n) ▪ m))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (n)) (m)))) (((coq.nat.times) ▪ p) ▪ c)) (nm))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ p)) ▪ c)) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (p)) (c)))) (((coq.nat.times) ▪ p) ▪ a)) (el-∀ (el-∀ (coq.nat.commutative_times) (p)) (a)))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ c))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p)) (a)) (c)))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ c)) ▪ (((coq.nat.times) ▪ b) ▪ m)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (p)) (((coq.nat.times) ▪ a) ▪ c)) (((coq.nat.times) ▪ b) ▪ m)))))) (in-⇒ (λ H : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O)), el-⇒ (el-∀ (el-∀ (el-∀ (coq.primes.quotient) (p)) (m)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ c))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ c)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ x)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ c))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ a)) ▪ c)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) ▪ x_1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ p)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) ▪ (((coq.nat.times) ▪ x_1) ▪ c)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ p) ▪ c))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ m)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ x_1)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ m)) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) ▪ x_1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ p) ▪ b))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ x_1) ▪ (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ a) ▪ n))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ p) ▪ b))) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ (((coq.nat.times) ▪ a) ▪ n)))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ x_1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ n) ▪ a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ __)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (m))) (((coq.nat.times) ▪ m) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ (((coq.nat.times) ▪ n) ▪ a)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.S) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ m) ▪ (((coq.nat.times) ▪ m) ▪ __))) (el-∀ (coq.nat.times_n_1) (m))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ (((coq.nat.times) ▪ n) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ __)) ▪ ((coq.nat.S) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ p)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ __) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ ((coq.nat.S) ▪ coq.nat.O))) (H)) (((coq.nat.times) ▪ p) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (b)) (p)))) (((coq.nat.times) ▪ n) ▪ a)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (n)))))) (((coq.nat.times) ▪ a) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (n)))) (((coq.nat.minus) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ p) ▪ b))) ▪ (((coq.nat.times) ▪ m) ▪ (((coq.nat.times) ▪ a) ▪ n)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (m)) (((coq.nat.times) ▪ p) ▪ b)) (((coq.nat.times) ▪ a) ▪ n)))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (((coq.nat.times) ▪ a) ▪ n)) (m)))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ p) ▪ b)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (m)) (((coq.nat.times) ▪ p) ▪ b)))) (((coq.nat.times) ▪ a) ▪ (((coq.nat.times) ▪ n) ▪ m))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (n)) (m)))) (((coq.nat.times) ▪ p) ▪ c)) (nm))) (((coq.nat.times) ▪ (((coq.nat.times) ▪ a) ▪ p)) ▪ c)) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (a)) (p)) (c)))) (((coq.nat.times) ▪ p) ▪ a)) (el-∀ (el-∀ (coq.nat.commutative_times) (a)) (p)))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ a) ▪ c))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p)) (a)) (c)))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.times) ▪ b) ▪ m))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_times) (p)) (b)) (m)))) (((coq.nat.times) ▪ p) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ m)) ▪ (((coq.nat.times) ▪ a) ▪ c)))) (el-∀ (el-∀ (el-∀ (coq.nat.distributive_times_minus) (p)) (((coq.nat.times) ▪ b) ▪ m)) (((coq.nat.times) ▪ a) ▪ c)))))) (_clearme1))))) (_clearme0))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((gcd) ▪ p) ▪ n)) (`λ' x_1 : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ x_1)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ x_1))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((gcd) ▪ n) ▪ p)) (`λ' x : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' a : El (coq.nat.nat), ((coq.connectives.ex) at (coq.nat.nat)) ▪ (`λ' b : El (coq.nat.nat), ((coq.connectives.Or) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ a) ▪ n)) ▪ (((coq.nat.times) ▪ b) ▪ p))) ▪ x)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.minus) ▪ (((coq.nat.times) ▪ b) ▪ p)) ▪ (((coq.nat.times) ▪ a) ▪ n))) ▪ x))))) (el-∀ (el-∀ (eq_minus_gcd) (p)) (n))) (((gcd) ▪ p) ▪ n)) (el-∀ (el-∀ (commutative_gcd) (p)) (n)))) ((coq.nat.S) ▪ coq.nat.O)) (el-⇒ (el-⇒ (el-∀ (el-∀ (prime_to_gcd_1) (p)) (n)) (primp)) (ndivpn))))))) (el-∀ (el-∀ (coq.primes.decidable_divides) (p)) (n)))))) (_clearme))))));
