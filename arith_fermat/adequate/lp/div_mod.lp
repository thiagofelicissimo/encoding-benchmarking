require open coq.sttfa;
require coq.bool;
require coq.connectives;
require coq.leibniz;
require coq.logic;
require coq.nat;
constant symbol mod_aux : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol mod_aux_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_mod_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((mod_aux) ▪ p)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ mod_aux_body) ▪ p));
symbol eq_mod_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((mod_aux) ▪ p)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ mod_aux_body) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((mod_aux) ▪ p)) ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ mod_aux_body) ▪ p)) (el-∀ (axiom_mod_aux) (p)));
symbol sym_eq_mod_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ mod_aux_body) ▪ p)) ▪ ((mod_aux) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((mod_aux) ▪ p)) ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ mod_aux_body) ▪ p)) (el-∀ (eq_mod_aux) (p)));
constant symbol axiom_mod_aux_body_O : Prf ((((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((mod_aux_body) ▪ coq.nat.O)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m));
symbol eq_mod_aux_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((mod_aux_body) ▪ coq.nat.O)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((mod_aux_body) ▪ coq.nat.O)) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) (axiom_mod_aux_body_O);
symbol sym_eq_mod_aux_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) ▪ ((mod_aux_body) ▪ coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((mod_aux_body) ▪ coq.nat.O)) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), m)) (eq_mod_aux_body_O);
constant symbol axiom_mod_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((mod_aux_body) ▪ ((coq.nat.S) ▪ p))) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((mod_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n)));
symbol eq_mod_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((mod_aux_body) ▪ ((coq.nat.S) ▪ p))) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((mod_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((mod_aux_body) ▪ ((coq.nat.S) ▪ p))) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((mod_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n))) (el-∀ (axiom_mod_aux_body_S) (p)));
symbol sym_eq_mod_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((mod_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n))) ▪ ((mod_aux_body) ▪ ((coq.nat.S) ▪ p))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((mod_aux_body) ▪ ((coq.nat.S) ▪ p))) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ m) ▪ ((((mod_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n)) ▪ (((coq.nat.leb) ▪ m) ▪ n))) (el-∀ (eq_mod_aux_body_S) (p)));
symbol mod : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ≔ `λ' n : El (coq.nat.nat), `λ' m : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ n) ▪ (`λ' p : El (coq.nat.nat), (((mod_aux) ▪ n) ▪ n) ▪ p)) ▪ m;
constant symbol div_aux : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol div_aux_body : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat));
constant symbol axiom_div_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((div_aux) ▪ p)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ div_aux_body) ▪ p));
symbol eq_div_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((div_aux) ▪ p)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ div_aux_body) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((div_aux) ▪ p)) ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ div_aux_body) ▪ p)) (el-∀ (axiom_div_aux) (p)));
symbol sym_eq_div_aux : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ div_aux_body) ▪ p)) ▪ ((div_aux) ▪ p)) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((div_aux) ▪ p)) ((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ div_aux_body) ▪ p)) (el-∀ (eq_div_aux) (p)));
constant symbol axiom_div_aux_body_O : Prf ((((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((div_aux_body) ▪ coq.nat.O)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), coq.nat.O));
symbol eq_div_aux_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((div_aux_body) ▪ coq.nat.O)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((div_aux_body) ▪ coq.nat.O)) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), coq.nat.O)) (axiom_div_aux_body_O);
symbol sym_eq_div_aux_body_O : Prf ((((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), coq.nat.O)) ▪ ((div_aux_body) ▪ coq.nat.O)) ≔ el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((div_aux_body) ▪ coq.nat.O)) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), coq.nat.O)) (eq_div_aux_body_O);
constant symbol axiom_div_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.connectives.equal) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((div_aux_body) ▪ ((coq.nat.S) ▪ p))) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n))) ▪ (((coq.nat.leb) ▪ m) ▪ n)));
symbol eq_div_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ ((div_aux_body) ▪ ((coq.nat.S) ▪ p))) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n))) ▪ (((coq.nat.leb) ▪ m) ▪ n))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.connectives.equal_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((div_aux_body) ▪ ((coq.nat.S) ▪ p))) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n))) ▪ (((coq.nat.leb) ▪ m) ▪ n))) (el-∀ (axiom_div_aux_body_S) (p)));
symbol sym_eq_div_aux_body_S : Prf (`∀ p : El (coq.nat.nat), (((coq.leibniz.leibniz) at (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ▪ (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n))) ▪ (((coq.nat.leb) ▪ m) ▪ n))) ▪ ((div_aux_body) ▪ ((coq.nat.S) ▪ p))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.leibniz.sym_leibniz) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ((div_aux_body) ▪ ((coq.nat.S) ▪ p))) (`λ' m : El (coq.nat.nat), `λ' n : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ p) ▪ (((coq.nat.minus) ▪ m) ▪ ((coq.nat.S) ▪ n))) ▪ n))) ▪ (((coq.nat.leb) ▪ m) ▪ n))) (el-∀ (eq_div_aux_body_S) (p)));
symbol div : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) ≔ `λ' n : El (coq.nat.nat), `λ' m : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ n)) ▪ (`λ' p : El (coq.nat.nat), (((div_aux) ▪ n) ▪ n) ▪ p)) ▪ m;
symbol le_mod_aux_m_m : Prf (`∀ p : El (coq.nat.nat), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ p) ⇒ ((coq.nat.le) ▪ ((((mod_aux) ▪ p) ▪ n) ▪ m)) ▪ m) ≔ in-∀ (λ p : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ _x_365) ⇒ ((coq.nat.le) ▪ ((((mod_aux) ▪ _x_365) ▪ n) ▪ m)) ▪ m)) (in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_mod_aux) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ coq.nat.O) ⇒ ((coq.nat.le) ▪ (((y) ▪ n) ▪ m)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (mod_aux_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ coq.nat.O) ⇒ ((coq.nat.le) ▪ (((y) ▪ n) ▪ m)) ▪ m)) (el-⇒ (el-∀ (sym_eq_mod_aux_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ coq.nat.O) ⇒ ((coq.nat.le) ▪ (((y) ▪ n) ▪ m)) ▪ m)) (in-⇒ (λ lenO : Prf (((coq.nat.le) ▪ n) ▪ coq.nat.O), el-⇒ (el-∀ (el-⇒ (el-∀ (coq.nat.le_n_O_elim) (n)) (lenO)) (`λ' __ : El (coq.nat.nat), ((coq.nat.le) ▪ __) ▪ m)) (el-∀ (coq.nat.le_O_n) (m)))))))))) (in-∀ (λ q : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_mod_aux) ((coq.nat.S) ▪ q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.nat.le) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m)) ▪ m) ⇒ `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)) ⇒ ((coq.nat.le) ▪ (((y) ▪ n) ▪ m)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (mod_aux_body)) (q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.nat.le) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m)) ▪ m) ⇒ `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)) ⇒ ((coq.nat.le) ▪ (((y) ▪ n) ▪ m)) ▪ m)) (el-⇒ (el-∀ (el-∀ (sym_eq_mod_aux_body_S) (q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.nat.le) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m)) ▪ m) ⇒ `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)) ⇒ ((coq.nat.le) ▪ (((y) ▪ n) ▪ m)) ▪ m)) (in-⇒ (λ Hind : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ q) ⇒ ((coq.nat.le) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m)) ▪ m), in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ len : Prf (((coq.nat.le) ▪ n) ▪ ((coq.nat.S) ▪ q)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n)) (m)) (`λ' __ : El (coq.bool.bool), ((coq.nat.le) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ __)) ▪ m)) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (n)) ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ ((coq.nat.le) ▪ y) ▪ m)) (in-⇒ (λ auto : Prf (((coq.nat.le) ▪ n) ▪ m), auto)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (n)) ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (`λ' y : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ ((coq.nat.le) ▪ y) ▪ m)) (in-⇒ (λ notlenm : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)), el-⇒ (el-∀ (el-∀ (Hind) (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) (m)) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.le_plus_to_minus) (n)) ((coq.nat.S) ▪ m)) (q)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (n)) ((coq.nat.S) ▪ q)) (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m))) (len)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ (((coq.nat.plus) ▪ ((coq.nat.S) ▪ q)) ▪ m))) (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m)))) (el-∀ (el-∀ (coq.nat.le_plus_n_r) (m)) ((coq.nat.S) ▪ q))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ __)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ __)) ▪ (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m))))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ ((coq.nat.S) ▪ q)) ▪ (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m))))) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ q))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ q) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ __)) ▪ (((coq.nat.plus) ▪ q) ▪ ((coq.nat.S) ▪ m)))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) (q)) (m))) (((coq.nat.plus) ▪ m) ▪ q)) (el-∀ (el-∀ (coq.nat.commutative_plus) (q)) (m)))) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ q))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) (m)) (q))))) (((coq.nat.plus) ▪ ((coq.nat.S) ▪ q)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_plus) (m)) ((coq.nat.S) ▪ q))))))))))))))))))) (p));
symbol lt_mod_m_m : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ m) ⇒ ((coq.nat.lt) ▪ (((mod) ▪ n) ▪ m)) ▪ m) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.match_nat_prop) (`λ' __ : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ __) ⇒ ((coq.nat.lt) ▪ (((mod) ▪ n) ▪ __)) ▪ __)) (in-⇒ (λ abs_ : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ coq.nat.O), el-⇒ (el-∀ (coq.connectives.falsity) (((coq.nat.lt) ▪ (((mod) ▪ n) ▪ coq.nat.O)) ▪ coq.nat.O)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ ((coq.nat.S) ▪ coq.nat.O)) ▪ coq.nat.O)) (abs_)) (el-∀ (coq.nat.not_le_Sn_O) (coq.nat.O)))))) (in-∀ (λ p : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) (n)) (`λ' q : El (coq.nat.nat), (((mod_aux) ▪ n) ▪ n) ▪ q)) (p)) (`λ' y : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ p)) ⇒ ((coq.nat.lt) ▪ y) ▪ ((coq.nat.S) ▪ p))) (in-⇒ (λ __ : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ p)), el-⇒ (el-∀ (el-∀ (coq.nat.le_S_S) ((((mod_aux) ▪ n) ▪ n) ▪ p)) (p)) (el-⇒ (el-∀ (el-∀ (el-∀ (le_mod_aux_m_m) (n)) (n)) (p)) (el-∀ (coq.nat.le_n) (n)))))))) (m)));
symbol div_aux_mod_aux : Prf (`∀ p : El (coq.nat.nat), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ p) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ p) ▪ n) ▪ m))) ≔ in-∀ (λ p : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.nat_ind) (`λ' _x_365 : El (coq.nat.nat), `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ _x_365) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ _x_365) ▪ n) ▪ m)))) (in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_div_aux) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ coq.nat.O) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (div_aux_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ coq.nat.O) ▪ n) ▪ m)))) (el-⇒ (el-∀ (sym_eq_div_aux_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ coq.nat.O) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_match_nat_type_O) (coq.nat.nat)) (coq.nat.O)) (`λ' q : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) ▪ (((coq.nat.leb) ▪ n) ▪ m))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ y) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ coq.nat.O) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (sym_eq_mod_aux) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' q : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ m0) ▪ ((coq.nat.S) ▪ n0))) ▪ n0))) ▪ (((coq.nat.leb) ▪ m0) ▪ n0))) ▪ coq.nat.O) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ (((y) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (mod_aux_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' q : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ m0) ▪ ((coq.nat.S) ▪ n0))) ▪ n0))) ▪ (((coq.nat.leb) ▪ m0) ▪ n0))) ▪ coq.nat.O) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ (((y) ▪ n) ▪ m)))) (el-⇒ (el-∀ (sym_eq_mod_aux_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' q : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ m0) ▪ ((coq.nat.S) ▪ n0))) ▪ n0))) ▪ (((coq.nat.leb) ▪ m0) ▪ n0))) ▪ coq.nat.O) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ (((y) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_O) (coq.nat.nat)) (coq.nat.O)) (`λ' q : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) ▪ (((coq.nat.leb) ▪ n) ▪ m))) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ n))) (el-⇒ (el-∀ (coq.nat.sym_eq_times_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ n))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ n))) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ n))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))))))))))))))))))) (in-∀ (λ q : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (sym_eq_div_aux) ((coq.nat.S) ▪ q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m))) ⇒ `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (div_aux_body)) (q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m))) ⇒ `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (sym_eq_div_aux_body_S) (q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m))) ⇒ `∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((y) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)))) (in-⇒ (λ Hind : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ n) ▪ m))), in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.eq_match_nat_type_S) (coq.nat.nat)) (coq.nat.O)) (`λ' q0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q0) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) ▪ (((coq.nat.leb) ▪ n) ▪ m))) (q)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ y) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (sym_eq_mod_aux) ((coq.nat.S) ▪ q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' q0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q0) ▪ (((coq.nat.minus) ▪ m0) ▪ ((coq.nat.S) ▪ n0))) ▪ n0))) ▪ (((coq.nat.leb) ▪ m0) ▪ n0))) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ (((y) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)) (mod_aux_body)) (q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' q0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q0) ▪ (((coq.nat.minus) ▪ m0) ▪ ((coq.nat.S) ▪ n0))) ▪ n0))) ▪ (((coq.nat.leb) ▪ m0) ▪ n0))) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ (((y) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (sym_eq_mod_aux_body_S) (q)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((`λ' m0 : El (coq.nat.nat), `λ' n0 : El (coq.nat.nat), ((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (`λ' q0 : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q0) ▪ (((coq.nat.minus) ▪ m0) ▪ ((coq.nat.S) ▪ n0))) ▪ n0))) ▪ (((coq.nat.leb) ▪ m0) ▪ n0))) ▪ ((coq.nat.S) ▪ q)) ▪ n) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ (((y) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) (coq.nat.O)) (`λ' z : El (coq.nat.nat), ((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ z) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) ▪ (((coq.nat.leb) ▪ n) ▪ m))) (q)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ y) ▪ ((coq.nat.S) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ (((coq.nat.leb) ▪ n) ▪ m))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (n)) (m)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) ▪ __)) ▪ ((coq.nat.S) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ __)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (coq.nat.O)) ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) (`λ' x : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ x) ▪ ((coq.nat.S) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ coq.bool.true)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ coq.bool.true)))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ coq.bool.true)))) (el-⇒ (el-∀ (coq.nat.sym_eq_times_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ n) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ coq.bool.true)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_true) (coq.nat.nat)) (n)) ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (`λ' y : El (coq.nat.nat), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ coq.nat.O) ▪ y))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ n))) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.nat.le) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ n))) (in-⇒ (λ lenm : Prf (((coq.nat.le) ▪ n) ▪ m), el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n)))))))))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (n)) ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (`λ' x : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((((coq.bool.match_bool_type) at (coq.nat.nat)) ▪ coq.nat.O) ▪ ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) ▪ coq.bool.false)) ▪ ((coq.nat.S) ▪ m))) ▪ x))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.bool.sym_eq_match_bool_type_false) (coq.nat.nat)) (coq.nat.O)) ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) (`λ' y : El (coq.nat.nat), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ y) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) ((coq.nat.S) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times_body_S) ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) ((coq.nat.S) ▪ m)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (m)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus_body_S) (m)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m))))) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (((coq.nat.plus) ▪ m) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m)))) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus_body_S) (((coq.nat.plus) ▪ m) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m)))) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((y) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (in-⇒ (λ lenm : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ n) ▪ m)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)))) (`λ' x : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((coq.nat.S) ▪ x))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind) (coq.nat.nat)) (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) (`λ' x_1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ x_1)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m)))))) (el-⇒ (el-∀ (el-∀ (coq.nat.plus_minus_m_m) (n)) ((coq.nat.S) ▪ m)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (n)) (m)) (lenm)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ __))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))))) (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) ▪ ((coq.nat.S) ▪ m))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) ((coq.nat.S) ▪ (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m)))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ m) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ ((coq.nat.S) ▪ __)) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.S) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m)))))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) (m)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m)))) (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_plus) (m)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))) (((coq.nat.plus) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) ▪ ((coq.nat.S) ▪ m))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))) (m))))) ((coq.nat.S) ▪ (((coq.nat.plus) ▪ m) ▪ ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))) (el-∀ (el-∀ (coq.nat.plus_n_Sm) (m)) ((coq.nat.pred) ▪ (((coq.nat.minus) ▪ n) ▪ m))))) (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) (el-∀ (el-∀ (coq.nat.eq_minus_S_pred) (n)) (m)))) (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) (el-∀ (el-∀ (coq.nat.eq_minus_S_pred) (n)) (m))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) (el-∀ (el-∀ (Hind) (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) (m)))) (((coq.nat.plus) ▪ (((coq.nat.plus) ▪ m) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m)))) ▪ ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))) (el-∀ (el-∀ (el-∀ (coq.nat.associative_plus) (m)) (((coq.nat.times) ▪ ((((div_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m)) ▪ ((coq.nat.S) ▪ m))) ((((mod_aux) ▪ q) ▪ (((coq.nat.minus) ▪ n) ▪ ((coq.nat.S) ▪ m))) ▪ m))))))))))))))))))))))))))))) (p));
symbol div_mod : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((div) ▪ n) ▪ m)) ▪ m)) ▪ (((mod) ▪ n) ▪ m))) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  el-∀ (el-⇒ (el-⇒ (el-∀ (coq.nat.match_nat_prop) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ (((div) ▪ n) ▪ __)) ▪ __)) ▪ (((mod) ▪ n) ▪ __)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times) (((div) ▪ n) ▪ coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ coq.nat.O)) ▪ (((mod) ▪ n) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_O) (coq.nat.nat)) ((coq.nat.S) ▪ n)) (`λ' p : El (coq.nat.nat), (((div_aux) ▪ n) ▪ n) ▪ p)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((((coq.nat.filter_nat_type) at (coq.nat.nat ⇝ coq.nat.nat)) ▪ coq.nat.times_body) ▪ y) ▪ coq.nat.O)) ▪ (((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ n) ▪ (`λ' p : El (coq.nat.nat), (((mod_aux) ▪ n) ▪ n) ▪ p)) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_S) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.times_body)) (n)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ coq.nat.O)) ▪ (((mod) ▪ n) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_times_body_S) (n)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ coq.nat.O)) ▪ (((mod) ▪ n) ▪ coq.nat.O)))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_O) (coq.nat.nat)) (n)) (`λ' p : El (coq.nat.nat), (((mod_aux) ▪ n) ▪ n) ▪ p)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ n) ▪ coq.nat.O))) ▪ y))) (el-⇒ (el-∀ (el-∀ (coq.nat.sym_eq_plus) (coq.nat.O)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ (((coq.nat.times) ▪ n) ▪ coq.nat.O))) ▪ n))) (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_filter_nat_type_O) (coq.nat.nat ⇝ coq.nat.nat)) (coq.nat.plus_body)) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ (((coq.nat.times) ▪ n) ▪ coq.nat.O))) ▪ n))) (el-⇒ (el-∀ (coq.nat.sym_eq_plus_body_O) (`λ' y : El ((coq.nat.nat ⇝ coq.nat.nat)), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ ((y) ▪ (((coq.nat.times) ▪ n) ▪ coq.nat.O))) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ n) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))) (((coq.nat.plus) ▪ n) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_n_O) (n)))) (((coq.nat.plus) ▪ coq.nat.O) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_plus) (coq.nat.O)) (n)))) (((coq.nat.times) ▪ n) ▪ coq.nat.O)) (el-∀ (coq.nat.times_n_O) (n)))))))))))) (in-∀ (λ auto : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) ((coq.nat.S) ▪ n)) (`λ' p : El (coq.nat.nat), (((div_aux) ▪ n) ▪ n) ▪ p)) (auto)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ y) ▪ ((coq.nat.S) ▪ auto))) ▪ (((((coq.nat.match_nat_type) at (coq.nat.nat)) ▪ n) ▪ (`λ' p : El (coq.nat.nat), (((mod_aux) ▪ n) ▪ n) ▪ p)) ▪ ((coq.nat.S) ▪ auto))))) (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ₚ (coq.nat.sym_eq_match_nat_type_S) (coq.nat.nat)) (n)) (`λ' p : El (coq.nat.nat), (((mod_aux) ▪ n) ▪ n) ▪ p)) (auto)) (`λ' y : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ n) ▪ n) ▪ auto)) ▪ ((coq.nat.S) ▪ auto))) ▪ y))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ n) ▪ n) ▪ auto)) ▪ ((coq.nat.S) ▪ auto))) ▪ ((((mod_aux) ▪ n) ▪ n) ▪ auto))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ n) ▪ n) ▪ auto)) ▪ ((coq.nat.S) ▪ auto))) ▪ ((((mod_aux) ▪ n) ▪ n) ▪ auto)))) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ ((((div_aux) ▪ n) ▪ n) ▪ auto)) ▪ ((coq.nat.S) ▪ auto))) ▪ ((((mod_aux) ▪ n) ▪ n) ▪ auto)))) (n)) (el-∀ (el-∀ (el-∀ (div_aux_mod_aux) (n)) (n)) (auto))))))) (m)));
symbol eq_times_div_minus_mod : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ (((div) ▪ a) ▪ b)) ▪ b)) ▪ (((coq.nat.minus) ▪ a) ▪ (((mod) ▪ a) ▪ b))) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((mod) ▪ a) ▪ b))) ▪ (((mod) ▪ a) ▪ b)))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ (((div) ▪ a) ▪ b)) ▪ b)) ▪ (((coq.nat.minus) ▪ a) ▪ (((mod) ▪ a) ▪ b)))) (el-∀ (el-∀ (coq.nat.minus_plus_m_m) (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) (((mod) ▪ a) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((mod) ▪ a) ▪ b)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((coq.nat.minus) ▪ __) ▪ (((mod) ▪ a) ▪ b)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ (((div) ▪ a) ▪ b)) ▪ b)) ▪ (((coq.nat.minus) ▪ a) ▪ (((mod) ▪ a) ▪ b))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((mod) ▪ a) ▪ b)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b)))) ▪ (((mod) ▪ a) ▪ b)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ __) ▪ (((coq.nat.minus) ▪ a) ▪ (((mod) ▪ a) ▪ b))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((coq.nat.minus) ▪ __) ▪ (((mod) ▪ a) ▪ b)))) ▪ ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((coq.nat.minus) ▪ a) ▪ (((mod) ▪ a) ▪ b))))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((coq.nat.minus) ▪ a) ▪ (((mod) ▪ a) ▪ b))))) (((coq.nat.plus) ▪ (((mod) ▪ a) ▪ b)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((mod) ▪ a) ▪ b))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ (((div) ▪ a) ▪ b)) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __) ▪ (((mod) ▪ a) ▪ b)))) (el-∀ (el-∀ (div_mod) (a)) (b))) (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) (el-∀ (el-∀ (coq.nat.commutative_times) (((div) ▪ a) ▪ b)) (b)))) (((coq.nat.plus) ▪ (((mod) ▪ a) ▪ b)) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) (((mod) ▪ a) ▪ b))))) (((coq.nat.times) ▪ (((div) ▪ a) ▪ b)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (((div) ▪ a) ▪ b)) (b)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) ▪ (((mod) ▪ a) ▪ b))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ (((div) ▪ a) ▪ b))) (((mod) ▪ a) ▪ b)))));
constant symbol div_mod_spec : Els (↑ (coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ coq.nat.nat ⇝ prop));
constant symbol div_mod_spec_intro : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ q : El (coq.nat.nat), `∀ r : El (coq.nat.nat), (((coq.nat.lt) ▪ r) ▪ m) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ m)) ▪ r)) ⇒ ((((div_mod_spec) ▪ n) ▪ m) ▪ q) ▪ r);
constant symbol match_div_mod_spec_prop : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), `∀ q : El (coq.nat.nat), `∀ r : El (coq.nat.nat), `∀ return_ : El (prop), ((((coq.nat.lt) ▪ r) ▪ m) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ m)) ▪ r)) ⇒ return_) ⇒ (((((div_mod_spec) ▪ n) ▪ m) ▪ q) ▪ r) ⇒ return_);
symbol div_mod_spec_div_mod : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ m) ⇒ ((((div_mod_spec) ▪ n) ▪ m) ▪ (((div) ▪ n) ▪ m)) ▪ (((mod) ▪ n) ▪ m)) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ posm : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (div_mod_spec_intro) (n)) (m)) (((div) ▪ n) ▪ m)) (((mod) ▪ n) ▪ m)) (el-⇒ (el-∀ (el-∀ (lt_mod_m_m) (n)) (m)) (posm))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ (((mod) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((mod) ▪ n) ▪ m)) ▪ (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m)))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))) (((coq.nat.plus) ▪ (((mod) ▪ n) ▪ m)) ▪ (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m))) ▪ (((mod) ▪ n) ▪ m))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ (((div) ▪ n) ▪ m)) ▪ m)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ (((mod) ▪ n) ▪ m)))) (el-∀ (el-∀ (div_mod) (n)) (m))) (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m))) (el-∀ (el-∀ (coq.nat.commutative_times) (((div) ▪ n) ▪ m)) (m)))) (((coq.nat.plus) ▪ (((mod) ▪ n) ▪ m)) ▪ (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m))) (((mod) ▪ n) ▪ m))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m))) ▪ (((mod) ▪ n) ▪ m))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ m) ▪ (((div) ▪ n) ▪ m))) (((mod) ▪ n) ▪ m)))) (((coq.nat.times) ▪ (((div) ▪ n) ▪ m)) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (((div) ▪ n) ▪ m)) (m))))));
symbol let_clause_1078 : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), `∀ q : El (coq.nat.nat), `∀ r : El (coq.nat.nat), `∀ q1 : El (coq.nat.nat), `∀ r1 : El (coq.nat.nat), (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r) ⇒ (((coq.nat.lt) ▪ r) ▪ b) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)) ⇒ (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1) ⇒ (((coq.nat.lt) ▪ r1) ▪ b) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)) ⇒ (((coq.nat.le) ▪ q) ▪ q1) ⇒ (((coq.nat.lt) ▪ q) ▪ q1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-∀ (λ r : El (coq.nat.nat),  in-∀ (λ q1 : El (coq.nat.nat),  in-∀ (λ r1 : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r), in-⇒ (λ ltrb : Prf (((coq.nat.lt) ▪ r) ▪ b), in-⇒ (λ spec : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)), in-⇒ (λ _clearme0 : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1), in-⇒ (λ ltr1b : Prf (((coq.nat.lt) ▪ r1) ▪ b), in-⇒ (λ spec1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)), in-⇒ (λ leqq1 : Prf (((coq.nat.le) ▪ q) ▪ q1), in-⇒ (λ ltqq1 : Prf (((coq.nat.lt) ▪ q) ▪ q1), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ q) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __) ▪ r))) (spec)) (((coq.nat.times) ▪ b) ▪ q)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b)))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r))))))))))))))));
symbol let_clause_1062 : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), `∀ q : El (coq.nat.nat), `∀ r : El (coq.nat.nat), `∀ q1 : El (coq.nat.nat), `∀ r1 : El (coq.nat.nat), (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r) ⇒ (((coq.nat.lt) ▪ r) ▪ b) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)) ⇒ (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1) ⇒ (((coq.nat.lt) ▪ r1) ▪ b) ⇒ ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)) ⇒ ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ q) ▪ q1)) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-∀ (λ r : El (coq.nat.nat),  in-∀ (λ q1 : El (coq.nat.nat),  in-∀ (λ r1 : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r), in-⇒ (λ ltrb : Prf (((coq.nat.lt) ▪ r) ▪ b), in-⇒ (λ spec : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)), in-⇒ (λ _clearme0 : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1), in-⇒ (λ ltr1b : Prf (((coq.nat.lt) ▪ r1) ▪ b), in-⇒ (λ spec1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)), in-⇒ (λ leqq1 : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ q) ▪ q1)), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ q1) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __) ▪ r1))) (spec1)) (((coq.nat.times) ▪ b) ▪ q1)) (el-∀ (el-∀ (coq.nat.commutative_times) (q1)) (b)))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (r1)))))))))))))));
symbol div_mod_spec_to_eq : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), `∀ q : El (coq.nat.nat), `∀ r : El (coq.nat.nat), `∀ q1 : El (coq.nat.nat), `∀ r1 : El (coq.nat.nat), (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r) ⇒ (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-∀ (λ r : El (coq.nat.nat),  in-∀ (λ q1 : El (coq.nat.nat),  in-∀ (λ r1 : El (coq.nat.nat),  in-⇒ (λ _clearme : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (match_div_mod_spec_prop) (a)) (b)) (q)) (r)) ((((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) (in-⇒ (λ ltrb : Prf (((coq.nat.lt) ▪ r) ▪ b), in-⇒ (λ spec : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)), in-⇒ (λ _clearme0 : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (match_div_mod_spec_prop) (a)) (b)) (q1)) (r1)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) (in-⇒ (λ ltr1b : Prf (((coq.nat.lt) ▪ r1) ▪ b), in-⇒ (λ spec1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.leb_elim) (q)) (q1)) (`λ' __ : El (coq.bool.bool), (((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) (in-⇒ (λ leqq1 : Prf (((coq.nat.le) ▪ q) ▪ q1), el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.connectives.match_Or_prop) (((coq.nat.lt) ▪ q) ▪ q1)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) (in-⇒ (λ ltqq1 : Prf (((coq.nat.lt) ▪ q) ▪ q1), el-⇒ (el-∀ (coq.connectives.falsity) ((((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ ((coq.nat.S) ▪ a)) ▪ a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_to_le_to_lt) (a)) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)) (a)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)) (`λ' x : El (coq.nat.nat), ((coq.nat.lt) ▪ x) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ b))) (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b))) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.monotonic_lt_plus_r) (((coq.nat.times) ▪ q) ▪ b)) (r)) (b)) (ltrb))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ __) ▪ r)) ▪ (((coq.nat.plus) ▪ __) ▪ b))) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ __) ▪ r)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b))) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b))) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ a) ▪ __)) ▪ (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (b)))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (let_clause_1078) (a)) (b)) (q)) (r)) (q1)) (r1)) (_clearme)) (ltrb)) (spec)) (_clearme0)) (ltr1b)) (spec1)) (leqq1)) (ltqq1)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r)))) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (b)) (q)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ q)) (b)))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (let_clause_1078) (a)) (b)) (q)) (r)) (q1)) (r1)) (_clearme)) (ltrb)) (spec)) (_clearme0)) (ltr1b)) (spec1)) (leqq1)) (ltqq1)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r)))) (((coq.nat.times) ▪ q) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b))))) (a)) (spec))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)) (((coq.nat.times) ▪ q1) ▪ b)) (a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (((coq.nat.le) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)) ▪ (((coq.nat.times) ▪ q1) ▪ b))) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.monotonic_le_times_r) (b)) ((coq.nat.S) ▪ q)) (q1)) (ltqq1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.times) ▪ q1) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.times) ▪ q1) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ (((coq.nat.le) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ (((coq.nat.le) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ (((coq.nat.times) ▪ b) ▪ q1)))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ (((coq.nat.times) ▪ b) ▪ q1)))) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (b)) (q)))) (((coq.nat.times) ▪ q1) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q1)) (b)))) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (b)) (q)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ q)) (b))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1))) (((coq.nat.le) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ a)) (el-∀ (el-∀ (coq.nat.le_plus_n_r) (r1)) (((coq.nat.times) ▪ q1) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.plus) ▪ __) ▪ r1))) ▪ (((coq.nat.le) ▪ __) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ __)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ __)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ a))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ a))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ q1) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __) ▪ r1))) (spec1)) (((coq.nat.times) ▪ b) ▪ q1)) (el-∀ (el-∀ (coq.nat.commutative_times) (q1)) (b)))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (r1))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (r1)))) (((coq.nat.times) ▪ q1) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q1)) (b))))))) (el-∀ (coq.nat.not_le_Sn_n) (a)))))) (in-⇒ (λ _x_172 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1), el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (q)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (q))) (q1)) (_x_172)))) (el-⇒ (el-∀ (el-∀ (coq.nat.le_to_or_lt_eq) (q)) (q1)) (leqq1))))) (in-⇒ (λ leqq1 : Prf ((coq.connectives.Not) ▪ (((coq.nat.le) ▪ q) ▪ q1)), el-⇒ (el-∀ (coq.connectives.falsity) ((((coq.logic.eq) at (coq.nat.nat)) ▪ q) ▪ q1)) (el-⇒ (el-⇒ (el-∀ (coq.logic.absurd) (((coq.nat.le) ▪ ((coq.nat.S) ▪ a)) ▪ a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.lt_to_le_to_lt) (a)) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)) (a)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.eq_ind_r) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)) (`λ' x : El (coq.nat.nat), ((coq.nat.lt) ▪ x) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ b))) (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b))) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.monotonic_lt_plus_r) (((coq.nat.times) ▪ q1) ▪ b)) (r1)) (b)) (ltr1b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q1)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ __) ▪ r1)) ▪ (((coq.nat.plus) ▪ __) ▪ b))) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ __) ▪ r1)) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b))) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b))) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ __) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b))) ▪ (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.lt) ▪ a) ▪ __)) ▪ (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.lt) ▪ a) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (b)))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (let_clause_1062) (a)) (b)) (q)) (r)) (q1)) (r1)) (_clearme)) (ltrb)) (spec)) (_clearme0)) (ltr1b)) (spec1)) (leqq1)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (r1)))) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (b)) (q1)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ q1)) (b)))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (let_clause_1062) (a)) (b)) (q)) (r)) (q1)) (r1)) (_clearme)) (ltrb)) (spec)) (_clearme0)) (ltr1b)) (spec1)) (leqq1)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (r1)))) (((coq.nat.times) ▪ q1) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q1)) (b))))) (a)) (spec1))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.transitive_le) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)) (((coq.nat.times) ▪ q) ▪ b)) (a)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) ▪ (((coq.nat.times) ▪ b) ▪ q))) (((coq.nat.le) ▪ (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)) ▪ (((coq.nat.times) ▪ q) ▪ b))) (el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.monotonic_le_times_r) (b)) ((coq.nat.S) ▪ q1)) (q)) (el-⇒ (el-∀ (el-∀ (coq.nat.not_le_to_lt) (q)) (q1)) (leqq1)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.times) ▪ q) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.times) ▪ q) ▪ b)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ (((coq.nat.le) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ __))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.times) ▪ b) ▪ q))) ▪ (((coq.nat.le) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ (((coq.nat.times) ▪ b) ▪ q)))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ (((coq.nat.plus) ▪ b) ▪ (((coq.nat.times) ▪ b) ▪ q1))) ▪ (((coq.nat.times) ▪ b) ▪ q)))) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (b)) (q1)))) (((coq.nat.times) ▪ q) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b)))) (((coq.nat.times) ▪ b) ▪ ((coq.nat.S) ▪ q1))) (el-∀ (el-∀ (coq.nat.times_n_Sm) (b)) (q1)))) (((coq.nat.times) ▪ ((coq.nat.S) ▪ q1)) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) ((coq.nat.S) ▪ q1)) (b))))) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r))) (((coq.nat.le) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ a)) (el-∀ (el-∀ (coq.nat.le_plus_n_r) (r)) (((coq.nat.times) ▪ q) ▪ b))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.plus) ▪ __) ▪ r))) ▪ (((coq.nat.le) ▪ __) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ __)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ a))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ __)) ▪ (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ a))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ a))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ q) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __) ▪ r))) (spec)) (((coq.nat.times) ▪ b) ▪ q)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b)))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r)))) (((coq.nat.times) ▪ q) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b))))))) (el-∀ (coq.nat.not_le_Sn_n) (a))))))))) (_clearme0)))))) (_clearme))))))));
symbol div_mod_spec_to_eq2 : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), `∀ q : El (coq.nat.nat), `∀ r : El (coq.nat.nat), `∀ q1 : El (coq.nat.nat), `∀ r1 : El (coq.nat.nat), (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r) ⇒ (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ r) ▪ r1) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-∀ (λ q : El (coq.nat.nat),  in-∀ (λ r : El (coq.nat.nat),  in-∀ (λ q1 : El (coq.nat.nat),  in-∀ (λ r1 : El (coq.nat.nat),  in-⇒ (λ spec : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q) ▪ r), in-⇒ (λ spec1 : Prf (((((div_mod_spec) ▪ a) ▪ b) ▪ q1) ▪ r1), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (match_div_mod_spec_prop) (a)) (b)) (q)) (r)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ r) ▪ r1)) (in-⇒ (λ __ : Prf (((coq.nat.lt) ▪ r) ▪ b), in-⇒ (λ eqa : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r)), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (match_div_mod_spec_prop) (a)) (b)) (q1)) (r1)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ r) ▪ r1)) (in-⇒ (λ _0 : Prf (((coq.nat.lt) ▪ r1) ▪ b), in-⇒ (λ eqa1 : Prf ((((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q1) ▪ b)) ▪ r1)), el-⇒ (el-∀ (el-∀ (el-∀ (coq.nat.injective_plus_r) (((coq.nat.times) ▪ q) ▪ b)) (r)) (r1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.plus) ▪ __1) ▪ r)) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __1) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ __1) ▪ (((coq.nat.plus) ▪ (((coq.nat.times) ▪ q) ▪ b)) ▪ r1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ b) ▪ q)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __1) ▪ r1))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q))) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (a)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __1)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (a))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (q1)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ __1)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q1)) ▪ r1)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ q1) ▪ b)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __1) ▪ r1))) (eqa1)) (((coq.nat.times) ▪ b) ▪ q1)) (el-∀ (el-∀ (coq.nat.commutative_times) (q1)) (b)))) (((coq.nat.plus) ▪ r1) ▪ (((coq.nat.times) ▪ b) ▪ q1))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q1)) (r1)))) (q)) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (div_mod_spec_to_eq) (a)) (b)) (q)) (r)) (q1)) (r1)) (spec)) (spec1))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r1)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r1)))) (((coq.nat.times) ▪ q) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b)))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ __1)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ q) ▪ b)) (`λ' __1 : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ a) ▪ (((coq.nat.plus) ▪ __1) ▪ r))) (eqa)) (((coq.nat.times) ▪ b) ▪ q)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b)))) (((coq.nat.plus) ▪ r) ▪ (((coq.nat.times) ▪ b) ▪ q))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r))))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ b) ▪ q)) ▪ r)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ b) ▪ q)) (r)))) (((coq.nat.times) ▪ q) ▪ b)) (el-∀ (el-∀ (coq.nat.commutative_times) (q)) (b))))))) (spec1))))) (spec)))))))));
symbol div_times : Prf (`∀ a : El (coq.nat.nat), `∀ b : El (coq.nat.nat), (((coq.nat.lt) ▪ coq.nat.O) ▪ b) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((div) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ b)) ▪ a) ≔ in-∀ (λ a : El (coq.nat.nat),  in-∀ (λ b : El (coq.nat.nat),  in-⇒ (λ posb : Prf (((coq.nat.lt) ▪ coq.nat.O) ▪ b), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (div_mod_spec_to_eq) (((coq.nat.times) ▪ a) ▪ b)) (b)) (((div) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ b)) (((mod) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ b)) (a)) (coq.nat.O)) (el-⇒ (el-∀ (el-∀ (div_mod_spec_div_mod) (((coq.nat.times) ▪ a) ▪ b)) (b)) (posb))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (div_mod_spec_intro) (((coq.nat.times) ▪ a) ▪ b)) (b)) (a)) (coq.nat.O)) (posb)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ a) ▪ b))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ b)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (((coq.nat.times) ▪ a) ▪ b))) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ a) ▪ b))) (el-∀ (coq.nat.plus_O_n) (((coq.nat.times) ▪ a) ▪ b)))) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ a) ▪ b)) ▪ coq.nat.O)) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ a) ▪ b)) (coq.nat.O)))))));
symbol eq_div_O : Prf (`∀ n : El (coq.nat.nat), `∀ m : El (coq.nat.nat), (((coq.nat.lt) ▪ n) ▪ m) ⇒ (((coq.logic.eq) at (coq.nat.nat)) ▪ (((div) ▪ n) ▪ m)) ▪ coq.nat.O) ≔ in-∀ (λ n : El (coq.nat.nat),  in-∀ (λ m : El (coq.nat.nat),  in-⇒ (λ ltnm : Prf (((coq.nat.lt) ▪ n) ▪ m), el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (el-∀ (div_mod_spec_to_eq) (n)) (m)) (((div) ▪ n) ▪ m)) (((mod) ▪ n) ▪ m)) (coq.nat.O)) (n)) (el-⇒ (el-∀ (el-∀ (div_mod_spec_div_mod) (n)) (m)) (el-⇒ (el-∀ (el-∀ (coq.nat.ltn_to_ltO) (n)) (m)) (ltnm)))) (el-⇒ (el-⇒ (el-∀ (el-∀ (el-∀ (el-∀ (div_mod_spec_intro) (n)) (m)) (coq.nat.O)) (n)) (ltnm)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.times) ▪ m) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ (((coq.nat.plus) ▪ __) ▪ n))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.plus) ▪ n) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ n) ▪ __)) (el-∀ (el-∀ₚ (coq.logic.refl) (coq.nat.nat)) (n))) (((coq.nat.plus) ▪ n) ▪ coq.nat.O)) (el-∀ (coq.nat.plus_n_O) (n)))) (((coq.nat.plus) ▪ coq.nat.O) ▪ n)) (el-∀ (el-∀ (coq.nat.commutative_plus) (coq.nat.O)) (n)))) (((coq.nat.times) ▪ m) ▪ coq.nat.O)) (el-∀ (coq.nat.times_n_O) (m)))) (((coq.nat.times) ▪ coq.nat.O) ▪ m)) (el-∀ (el-∀ (coq.nat.commutative_times) (coq.nat.O)) (m)))))));
symbol mod_O_n : Prf (`∀ n : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O) ≔ in-∀ (λ n : El (coq.nat.nat),  el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.sym_eq) (coq.nat.nat)) (coq.nat.O)) (((mod) ▪ coq.nat.O) ▪ n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((mod) ▪ coq.nat.O) ▪ n))) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((mod) ▪ coq.nat.O) ▪ n))) (el-⇒ (el-∀ (coq.nat.le_n_O_to_eq) (((mod) ▪ coq.nat.O) ▪ n)) (el-⇒ (el-⇒ (el-∀ (el-∀ (coq.logic.eq_coerc) (((coq.nat.le) ▪ (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n)))) ▪ (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))) ▪ (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))) (((coq.nat.le) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O)) (el-∀ (el-∀ (coq.nat.minus_le) (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n)))) (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_r) (coq.nat.nat)) (((coq.nat.minus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))) ▪ (((coq.nat.le) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((mod) ▪ coq.nat.O) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ __) ▪ (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))) ▪ (((coq.nat.le) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (coq.nat.O)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (prop)) ▪ (((coq.nat.le) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ __)) ▪ (((coq.nat.le) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) (((coq.nat.le) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O))) (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n)))) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.plus) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))) ▪ (((mod) ▪ coq.nat.O) ▪ n))) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ __)) (el-⇒ (el-∀ (el-⇒ (el-∀ (el-∀ (el-∀ₚ (coq.logic.rewrite_l) (coq.nat.nat)) (((coq.nat.times) ▪ (((div) ▪ coq.nat.O) ▪ n)) ▪ n)) (`λ' __ : El (coq.nat.nat), (((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((coq.nat.plus) ▪ __) ▪ (((mod) ▪ coq.nat.O) ▪ n)))) (el-∀ (el-∀ (div_mod) (coq.nat.O)) (n))) (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))) (el-∀ (el-∀ (coq.nat.commutative_times) (((div) ▪ coq.nat.O) ▪ n)) (n)))) (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n)))) (el-∀ (el-∀ (coq.nat.commutative_plus) (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))) (((mod) ▪ coq.nat.O) ▪ n))))) (((coq.nat.minus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ coq.nat.O)) (el-∀ (coq.nat.minus_n_O) (((mod) ▪ coq.nat.O) ▪ n)))) (((coq.nat.minus) ▪ (((coq.nat.plus) ▪ (((mod) ▪ coq.nat.O) ▪ n)) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n)))) ▪ (((coq.nat.plus) ▪ coq.nat.O) ▪ (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))) (el-∀ (el-∀ (el-∀ (coq.nat.minus_plus_plus_l) (((mod) ▪ coq.nat.O) ▪ n)) (coq.nat.O)) (((coq.nat.times) ▪ n) ▪ (((div) ▪ coq.nat.O) ▪ n))))))) (el-∀ (el-∀ₚ (coq.logic.refl) (prop)) ((((coq.logic.eq) at (coq.nat.nat)) ▪ coq.nat.O) ▪ (((mod) ▪ coq.nat.O) ▪ n)))));
